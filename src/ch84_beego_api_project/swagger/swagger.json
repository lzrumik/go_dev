{
    "swagger": "2.0",
    "info": {
        "title": "beego Test API",
        "description": "beego has a very cool tools to autogenerate documents for your API",
        "version": "1.0.0",
        "termsOfService": "http://beego.me/",
        "contact": {
            "email": "astaxie@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "basePath": "/v1",
    "paths": {
        "/FORTUNE_REPAYMENT_PLAN/": {
            "get": {
                "tags": [
                    "FORTUNE_REPAYMENT_PLAN"
                ],
                "description": "get FORTUNEREPAYMENTPLAN",
                "operationId": "FORTUNEREPAYMENTPLANController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FORTUNEREPAYMENTPLAN"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "FORTUNE_REPAYMENT_PLAN"
                ],
                "description": "create FORTUNEREPAYMENTPLAN",
                "operationId": "FORTUNEREPAYMENTPLANController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FORTUNEREPAYMENTPLAN content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FORTUNEREPAYMENTPLAN"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FORTUNEREPAYMENTPLAN"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/FORTUNE_REPAYMENT_PLAN/{id}": {
            "get": {
                "tags": [
                    "FORTUNE_REPAYMENT_PLAN"
                ],
                "description": "get FORTUNEREPAYMENTPLAN by id",
                "operationId": "FORTUNEREPAYMENTPLANController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FORTUNEREPAYMENTPLAN"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "FORTUNE_REPAYMENT_PLAN"
                ],
                "description": "update the FORTUNEREPAYMENTPLAN",
                "operationId": "FORTUNEREPAYMENTPLANController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FORTUNEREPAYMENTPLAN content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FORTUNEREPAYMENTPLAN"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FORTUNEREPAYMENTPLAN"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "FORTUNE_REPAYMENT_PLAN"
                ],
                "description": "delete the FORTUNEREPAYMENTPLAN",
                "operationId": "FORTUNEREPAYMENTPLANController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/FORTUNE_REPAYMENT_PLAN_EXEC_LOG/": {
            "get": {
                "tags": [
                    "FORTUNE_REPAYMENT_PLAN_EXEC_LOG"
                ],
                "description": "get FORTUNEREPAYMENTPLANEXECLOG",
                "operationId": "FORTUNEREPAYMENTPLANEXECLOGController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FORTUNEREPAYMENTPLANEXECLOG"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "FORTUNE_REPAYMENT_PLAN_EXEC_LOG"
                ],
                "description": "create FORTUNEREPAYMENTPLANEXECLOG",
                "operationId": "FORTUNEREPAYMENTPLANEXECLOGController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FORTUNEREPAYMENTPLANEXECLOG content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FORTUNEREPAYMENTPLANEXECLOG"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FORTUNEREPAYMENTPLANEXECLOG"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/FORTUNE_REPAYMENT_PLAN_EXEC_LOG/{id}": {
            "get": {
                "tags": [
                    "FORTUNE_REPAYMENT_PLAN_EXEC_LOG"
                ],
                "description": "get FORTUNEREPAYMENTPLANEXECLOG by id",
                "operationId": "FORTUNEREPAYMENTPLANEXECLOGController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FORTUNEREPAYMENTPLANEXECLOG"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "FORTUNE_REPAYMENT_PLAN_EXEC_LOG"
                ],
                "description": "update the FORTUNEREPAYMENTPLANEXECLOG",
                "operationId": "FORTUNEREPAYMENTPLANEXECLOGController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FORTUNEREPAYMENTPLANEXECLOG content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FORTUNEREPAYMENTPLANEXECLOG"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FORTUNEREPAYMENTPLANEXECLOG"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "FORTUNE_REPAYMENT_PLAN_EXEC_LOG"
                ],
                "description": "delete the FORTUNEREPAYMENTPLANEXECLOG",
                "operationId": "FORTUNEREPAYMENTPLANEXECLOGController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/activity_subdivision_user_base_info/": {
            "get": {
                "tags": [
                    "activity_subdivision_user_base_info"
                ],
                "description": "get ActivitySubdivisionUserBaseInfo",
                "operationId": "ActivitySubdivisionUserBaseInfoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ActivitySubdivisionUserBaseInfo"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "activity_subdivision_user_base_info"
                ],
                "description": "create ActivitySubdivisionUserBaseInfo",
                "operationId": "ActivitySubdivisionUserBaseInfoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ActivitySubdivisionUserBaseInfo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ActivitySubdivisionUserBaseInfo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ActivitySubdivisionUserBaseInfo"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/activity_subdivision_user_base_info/{id}": {
            "get": {
                "tags": [
                    "activity_subdivision_user_base_info"
                ],
                "description": "get ActivitySubdivisionUserBaseInfo by id",
                "operationId": "ActivitySubdivisionUserBaseInfoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ActivitySubdivisionUserBaseInfo"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "activity_subdivision_user_base_info"
                ],
                "description": "update the ActivitySubdivisionUserBaseInfo",
                "operationId": "ActivitySubdivisionUserBaseInfoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ActivitySubdivisionUserBaseInfo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ActivitySubdivisionUserBaseInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ActivitySubdivisionUserBaseInfo"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "activity_subdivision_user_base_info"
                ],
                "description": "delete the ActivitySubdivisionUserBaseInfo",
                "operationId": "ActivitySubdivisionUserBaseInfoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/activity_subdivision_user_base_info_copy/": {
            "get": {
                "tags": [
                    "activity_subdivision_user_base_info_copy"
                ],
                "description": "get ActivitySubdivisionUserBaseInfoCopy",
                "operationId": "ActivitySubdivisionUserBaseInfoCopyController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ActivitySubdivisionUserBaseInfoCopy"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "activity_subdivision_user_base_info_copy"
                ],
                "description": "create ActivitySubdivisionUserBaseInfoCopy",
                "operationId": "ActivitySubdivisionUserBaseInfoCopyController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ActivitySubdivisionUserBaseInfoCopy content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ActivitySubdivisionUserBaseInfoCopy"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.ActivitySubdivisionUserBaseInfoCopy"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/activity_subdivision_user_base_info_copy/{id}": {
            "get": {
                "tags": [
                    "activity_subdivision_user_base_info_copy"
                ],
                "description": "get ActivitySubdivisionUserBaseInfoCopy by id",
                "operationId": "ActivitySubdivisionUserBaseInfoCopyController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ActivitySubdivisionUserBaseInfoCopy"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "activity_subdivision_user_base_info_copy"
                ],
                "description": "update the ActivitySubdivisionUserBaseInfoCopy",
                "operationId": "ActivitySubdivisionUserBaseInfoCopyController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for ActivitySubdivisionUserBaseInfoCopy content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ActivitySubdivisionUserBaseInfoCopy"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ActivitySubdivisionUserBaseInfoCopy"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "activity_subdivision_user_base_info_copy"
                ],
                "description": "delete the ActivitySubdivisionUserBaseInfoCopy",
                "operationId": "ActivitySubdivisionUserBaseInfoCopyController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/dev_property_configure/": {
            "get": {
                "tags": [
                    "dev_property_configure"
                ],
                "description": "get DevPropertyConfigure",
                "operationId": "DevPropertyConfigureController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.DevPropertyConfigure"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "dev_property_configure"
                ],
                "description": "create DevPropertyConfigure",
                "operationId": "DevPropertyConfigureController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for DevPropertyConfigure content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DevPropertyConfigure"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.DevPropertyConfigure"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/dev_property_configure/{id}": {
            "get": {
                "tags": [
                    "dev_property_configure"
                ],
                "description": "get DevPropertyConfigure by id",
                "operationId": "DevPropertyConfigureController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.DevPropertyConfigure"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "dev_property_configure"
                ],
                "description": "update the DevPropertyConfigure",
                "operationId": "DevPropertyConfigureController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for DevPropertyConfigure content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DevPropertyConfigure"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.DevPropertyConfigure"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "dev_property_configure"
                ],
                "description": "delete the DevPropertyConfigure",
                "operationId": "DevPropertyConfigureController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_activity/": {
            "get": {
                "tags": [
                    "fortune_activity"
                ],
                "description": "get FortuneActivity",
                "operationId": "FortuneActivityController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneActivity"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_activity"
                ],
                "description": "create FortuneActivity",
                "operationId": "FortuneActivityController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneActivity content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneActivity"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneActivity"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_activity/{id}": {
            "get": {
                "tags": [
                    "fortune_activity"
                ],
                "description": "get FortuneActivity by id",
                "operationId": "FortuneActivityController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneActivity"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_activity"
                ],
                "description": "update the FortuneActivity",
                "operationId": "FortuneActivityController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneActivity content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneActivity"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneActivity"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_activity"
                ],
                "description": "delete the FortuneActivity",
                "operationId": "FortuneActivityController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_activity_custom/": {
            "get": {
                "tags": [
                    "fortune_activity_custom"
                ],
                "description": "get FortuneActivityCustom",
                "operationId": "FortuneActivityCustomController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneActivityCustom"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_activity_custom"
                ],
                "description": "create FortuneActivityCustom",
                "operationId": "FortuneActivityCustomController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneActivityCustom content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneActivityCustom"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneActivityCustom"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_activity_custom/{id}": {
            "get": {
                "tags": [
                    "fortune_activity_custom"
                ],
                "description": "get FortuneActivityCustom by id",
                "operationId": "FortuneActivityCustomController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneActivityCustom"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_activity_custom"
                ],
                "description": "update the FortuneActivityCustom",
                "operationId": "FortuneActivityCustomController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneActivityCustom content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneActivityCustom"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneActivityCustom"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_activity_custom"
                ],
                "description": "delete the FortuneActivityCustom",
                "operationId": "FortuneActivityCustomController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_activity_extend/": {
            "get": {
                "tags": [
                    "fortune_activity_extend"
                ],
                "description": "get FortuneActivityExtend",
                "operationId": "FortuneActivityExtendController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneActivityExtend"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_activity_extend"
                ],
                "description": "create FortuneActivityExtend",
                "operationId": "FortuneActivityExtendController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneActivityExtend content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneActivityExtend"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneActivityExtend"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_activity_extend/{id}": {
            "get": {
                "tags": [
                    "fortune_activity_extend"
                ],
                "description": "get FortuneActivityExtend by id",
                "operationId": "FortuneActivityExtendController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneActivityExtend"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_activity_extend"
                ],
                "description": "update the FortuneActivityExtend",
                "operationId": "FortuneActivityExtendController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneActivityExtend content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneActivityExtend"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneActivityExtend"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_activity_extend"
                ],
                "description": "delete the FortuneActivityExtend",
                "operationId": "FortuneActivityExtendController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_activity_result/": {
            "get": {
                "tags": [
                    "fortune_activity_result"
                ],
                "description": "get FortuneActivityResult",
                "operationId": "FortuneActivityResultController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneActivityResult"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_activity_result"
                ],
                "description": "create FortuneActivityResult",
                "operationId": "FortuneActivityResultController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneActivityResult content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneActivityResult"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneActivityResult"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_activity_result/{id}": {
            "get": {
                "tags": [
                    "fortune_activity_result"
                ],
                "description": "get FortuneActivityResult by id",
                "operationId": "FortuneActivityResultController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneActivityResult"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_activity_result"
                ],
                "description": "update the FortuneActivityResult",
                "operationId": "FortuneActivityResultController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneActivityResult content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneActivityResult"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneActivityResult"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_activity_result"
                ],
                "description": "delete the FortuneActivityResult",
                "operationId": "FortuneActivityResultController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_activity_signin/": {
            "get": {
                "tags": [
                    "fortune_activity_signin"
                ],
                "description": "get FortuneActivitySignin",
                "operationId": "FortuneActivitySigninController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneActivitySignin"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_activity_signin"
                ],
                "description": "create FortuneActivitySignin",
                "operationId": "FortuneActivitySigninController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneActivitySignin content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneActivitySignin"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneActivitySignin"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_activity_signin/{id}": {
            "get": {
                "tags": [
                    "fortune_activity_signin"
                ],
                "description": "get FortuneActivitySignin by id",
                "operationId": "FortuneActivitySigninController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneActivitySignin"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_activity_signin"
                ],
                "description": "update the FortuneActivitySignin",
                "operationId": "FortuneActivitySigninController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneActivitySignin content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneActivitySignin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneActivitySignin"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_activity_signin"
                ],
                "description": "delete the FortuneActivitySignin",
                "operationId": "FortuneActivitySigninController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_activity_signup/": {
            "get": {
                "tags": [
                    "fortune_activity_signup"
                ],
                "description": "get FortuneActivitySignup",
                "operationId": "FortuneActivitySignupController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneActivitySignup"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_activity_signup"
                ],
                "description": "create FortuneActivitySignup",
                "operationId": "FortuneActivitySignupController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneActivitySignup content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneActivitySignup"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneActivitySignup"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_activity_signup/{id}": {
            "get": {
                "tags": [
                    "fortune_activity_signup"
                ],
                "description": "get FortuneActivitySignup by id",
                "operationId": "FortuneActivitySignupController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneActivitySignup"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_activity_signup"
                ],
                "description": "update the FortuneActivitySignup",
                "operationId": "FortuneActivitySignupController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneActivitySignup content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneActivitySignup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneActivitySignup"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_activity_signup"
                ],
                "description": "delete the FortuneActivitySignup",
                "operationId": "FortuneActivitySignupController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_appropriate_approve_history/": {
            "get": {
                "tags": [
                    "fortune_appropriate_approve_history"
                ],
                "description": "get FortuneAppropriateApproveHistory",
                "operationId": "FortuneAppropriateApproveHistoryController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneAppropriateApproveHistory"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_appropriate_approve_history"
                ],
                "description": "create FortuneAppropriateApproveHistory",
                "operationId": "FortuneAppropriateApproveHistoryController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneAppropriateApproveHistory content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneAppropriateApproveHistory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneAppropriateApproveHistory"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_appropriate_approve_history/{id}": {
            "get": {
                "tags": [
                    "fortune_appropriate_approve_history"
                ],
                "description": "get FortuneAppropriateApproveHistory by id",
                "operationId": "FortuneAppropriateApproveHistoryController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneAppropriateApproveHistory"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_appropriate_approve_history"
                ],
                "description": "update the FortuneAppropriateApproveHistory",
                "operationId": "FortuneAppropriateApproveHistoryController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneAppropriateApproveHistory content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneAppropriateApproveHistory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneAppropriateApproveHistory"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_appropriate_approve_history"
                ],
                "description": "delete the FortuneAppropriateApproveHistory",
                "operationId": "FortuneAppropriateApproveHistoryController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_appropriate_info/": {
            "get": {
                "tags": [
                    "fortune_appropriate_info"
                ],
                "description": "get FortuneAppropriateInfo",
                "operationId": "FortuneAppropriateInfoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneAppropriateInfo"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_appropriate_info"
                ],
                "description": "create FortuneAppropriateInfo",
                "operationId": "FortuneAppropriateInfoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneAppropriateInfo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneAppropriateInfo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneAppropriateInfo"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_appropriate_info/{id}": {
            "get": {
                "tags": [
                    "fortune_appropriate_info"
                ],
                "description": "get FortuneAppropriateInfo by id",
                "operationId": "FortuneAppropriateInfoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneAppropriateInfo"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_appropriate_info"
                ],
                "description": "update the FortuneAppropriateInfo",
                "operationId": "FortuneAppropriateInfoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneAppropriateInfo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneAppropriateInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneAppropriateInfo"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_appropriate_info"
                ],
                "description": "delete the FortuneAppropriateInfo",
                "operationId": "FortuneAppropriateInfoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_approval_biz_ident/": {
            "get": {
                "tags": [
                    "fortune_approval_biz_ident"
                ],
                "description": "get FortuneApprovalBizIdent",
                "operationId": "FortuneApprovalBizIdentController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneApprovalBizIdent"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_approval_biz_ident"
                ],
                "description": "create FortuneApprovalBizIdent",
                "operationId": "FortuneApprovalBizIdentController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneApprovalBizIdent content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneApprovalBizIdent"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneApprovalBizIdent"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_approval_biz_ident/{id}": {
            "get": {
                "tags": [
                    "fortune_approval_biz_ident"
                ],
                "description": "get FortuneApprovalBizIdent by id",
                "operationId": "FortuneApprovalBizIdentController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneApprovalBizIdent"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_approval_biz_ident"
                ],
                "description": "update the FortuneApprovalBizIdent",
                "operationId": "FortuneApprovalBizIdentController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneApprovalBizIdent content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneApprovalBizIdent"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneApprovalBizIdent"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_approval_biz_ident"
                ],
                "description": "delete the FortuneApprovalBizIdent",
                "operationId": "FortuneApprovalBizIdentController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_approval_flow_relevance/": {
            "get": {
                "tags": [
                    "fortune_approval_flow_relevance"
                ],
                "description": "get FortuneApprovalFlowRelevance",
                "operationId": "FortuneApprovalFlowRelevanceController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneApprovalFlowRelevance"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_approval_flow_relevance"
                ],
                "description": "create FortuneApprovalFlowRelevance",
                "operationId": "FortuneApprovalFlowRelevanceController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneApprovalFlowRelevance content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneApprovalFlowRelevance"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneApprovalFlowRelevance"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_approval_flow_relevance/{id}": {
            "get": {
                "tags": [
                    "fortune_approval_flow_relevance"
                ],
                "description": "get FortuneApprovalFlowRelevance by id",
                "operationId": "FortuneApprovalFlowRelevanceController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneApprovalFlowRelevance"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_approval_flow_relevance"
                ],
                "description": "update the FortuneApprovalFlowRelevance",
                "operationId": "FortuneApprovalFlowRelevanceController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneApprovalFlowRelevance content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneApprovalFlowRelevance"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneApprovalFlowRelevance"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_approval_flow_relevance"
                ],
                "description": "delete the FortuneApprovalFlowRelevance",
                "operationId": "FortuneApprovalFlowRelevanceController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_approval_flow_step/": {
            "get": {
                "tags": [
                    "fortune_approval_flow_step"
                ],
                "description": "get FortuneApprovalFlowStep",
                "operationId": "FortuneApprovalFlowStepController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneApprovalFlowStep"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_approval_flow_step"
                ],
                "description": "create FortuneApprovalFlowStep",
                "operationId": "FortuneApprovalFlowStepController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneApprovalFlowStep content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneApprovalFlowStep"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneApprovalFlowStep"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_approval_flow_step/{id}": {
            "get": {
                "tags": [
                    "fortune_approval_flow_step"
                ],
                "description": "get FortuneApprovalFlowStep by id",
                "operationId": "FortuneApprovalFlowStepController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneApprovalFlowStep"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_approval_flow_step"
                ],
                "description": "update the FortuneApprovalFlowStep",
                "operationId": "FortuneApprovalFlowStepController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneApprovalFlowStep content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneApprovalFlowStep"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneApprovalFlowStep"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_approval_flow_step"
                ],
                "description": "delete the FortuneApprovalFlowStep",
                "operationId": "FortuneApprovalFlowStepController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_area/": {
            "get": {
                "tags": [
                    "fortune_area"
                ],
                "description": "get FortuneArea",
                "operationId": "FortuneAreaController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneArea"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_area"
                ],
                "description": "create FortuneArea",
                "operationId": "FortuneAreaController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneArea content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneArea"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneArea"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_area/{id}": {
            "get": {
                "tags": [
                    "fortune_area"
                ],
                "description": "get FortuneArea by id",
                "operationId": "FortuneAreaController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneArea"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_area"
                ],
                "description": "update the FortuneArea",
                "operationId": "FortuneAreaController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneArea content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneArea"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneArea"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_area"
                ],
                "description": "delete the FortuneArea",
                "operationId": "FortuneAreaController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_asset_proof/": {
            "get": {
                "tags": [
                    "fortune_asset_proof"
                ],
                "description": "get FortuneAssetProof",
                "operationId": "FortuneAssetProofController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneAssetProof"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_asset_proof"
                ],
                "description": "create FortuneAssetProof",
                "operationId": "FortuneAssetProofController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneAssetProof content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneAssetProof"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneAssetProof"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_asset_proof/{id}": {
            "get": {
                "tags": [
                    "fortune_asset_proof"
                ],
                "description": "get FortuneAssetProof by id",
                "operationId": "FortuneAssetProofController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneAssetProof"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_asset_proof"
                ],
                "description": "update the FortuneAssetProof",
                "operationId": "FortuneAssetProofController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneAssetProof content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneAssetProof"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneAssetProof"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_asset_proof"
                ],
                "description": "delete the FortuneAssetProof",
                "operationId": "FortuneAssetProofController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_asset_proof_attachment/": {
            "get": {
                "tags": [
                    "fortune_asset_proof_attachment"
                ],
                "description": "get FortuneAssetProofAttachment",
                "operationId": "FortuneAssetProofAttachmentController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneAssetProofAttachment"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_asset_proof_attachment"
                ],
                "description": "create FortuneAssetProofAttachment",
                "operationId": "FortuneAssetProofAttachmentController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneAssetProofAttachment content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneAssetProofAttachment"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneAssetProofAttachment"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_asset_proof_attachment/{id}": {
            "get": {
                "tags": [
                    "fortune_asset_proof_attachment"
                ],
                "description": "get FortuneAssetProofAttachment by id",
                "operationId": "FortuneAssetProofAttachmentController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneAssetProofAttachment"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_asset_proof_attachment"
                ],
                "description": "update the FortuneAssetProofAttachment",
                "operationId": "FortuneAssetProofAttachmentController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneAssetProofAttachment content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneAssetProofAttachment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneAssetProofAttachment"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_asset_proof_attachment"
                ],
                "description": "delete the FortuneAssetProofAttachment",
                "operationId": "FortuneAssetProofAttachmentController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_asset_proof_history/": {
            "get": {
                "tags": [
                    "fortune_asset_proof_history"
                ],
                "description": "get FortuneAssetProofHistory",
                "operationId": "FortuneAssetProofHistoryController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneAssetProofHistory"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_asset_proof_history"
                ],
                "description": "create FortuneAssetProofHistory",
                "operationId": "FortuneAssetProofHistoryController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneAssetProofHistory content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneAssetProofHistory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneAssetProofHistory"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_asset_proof_history/{id}": {
            "get": {
                "tags": [
                    "fortune_asset_proof_history"
                ],
                "description": "get FortuneAssetProofHistory by id",
                "operationId": "FortuneAssetProofHistoryController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneAssetProofHistory"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_asset_proof_history"
                ],
                "description": "update the FortuneAssetProofHistory",
                "operationId": "FortuneAssetProofHistoryController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneAssetProofHistory content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneAssetProofHistory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneAssetProofHistory"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_asset_proof_history"
                ],
                "description": "delete the FortuneAssetProofHistory",
                "operationId": "FortuneAssetProofHistoryController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_bank_auth_approve_history/": {
            "get": {
                "tags": [
                    "fortune_bank_auth_approve_history"
                ],
                "description": "get FortuneBankAuthApproveHistory",
                "operationId": "FortuneBankAuthApproveHistoryController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneBankAuthApproveHistory"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_bank_auth_approve_history"
                ],
                "description": "create FortuneBankAuthApproveHistory",
                "operationId": "FortuneBankAuthApproveHistoryController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneBankAuthApproveHistory content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneBankAuthApproveHistory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneBankAuthApproveHistory"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_bank_auth_approve_history/{id}": {
            "get": {
                "tags": [
                    "fortune_bank_auth_approve_history"
                ],
                "description": "get FortuneBankAuthApproveHistory by id",
                "operationId": "FortuneBankAuthApproveHistoryController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneBankAuthApproveHistory"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_bank_auth_approve_history"
                ],
                "description": "update the FortuneBankAuthApproveHistory",
                "operationId": "FortuneBankAuthApproveHistoryController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneBankAuthApproveHistory content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneBankAuthApproveHistory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneBankAuthApproveHistory"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_bank_auth_approve_history"
                ],
                "description": "delete the FortuneBankAuthApproveHistory",
                "operationId": "FortuneBankAuthApproveHistoryController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_bank_auth_history/": {
            "get": {
                "tags": [
                    "fortune_bank_auth_history"
                ],
                "description": "get FortuneBankAuthHistory",
                "operationId": "FortuneBankAuthHistoryController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneBankAuthHistory"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_bank_auth_history"
                ],
                "description": "create FortuneBankAuthHistory",
                "operationId": "FortuneBankAuthHistoryController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneBankAuthHistory content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneBankAuthHistory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneBankAuthHistory"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_bank_auth_history/{id}": {
            "get": {
                "tags": [
                    "fortune_bank_auth_history"
                ],
                "description": "get FortuneBankAuthHistory by id",
                "operationId": "FortuneBankAuthHistoryController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneBankAuthHistory"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_bank_auth_history"
                ],
                "description": "update the FortuneBankAuthHistory",
                "operationId": "FortuneBankAuthHistoryController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneBankAuthHistory content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneBankAuthHistory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneBankAuthHistory"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_bank_auth_history"
                ],
                "description": "delete the FortuneBankAuthHistory",
                "operationId": "FortuneBankAuthHistoryController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_bank_auth_info/": {
            "get": {
                "tags": [
                    "fortune_bank_auth_info"
                ],
                "description": "get FortuneBankAuthInfo",
                "operationId": "FortuneBankAuthInfoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneBankAuthInfo"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_bank_auth_info"
                ],
                "description": "create FortuneBankAuthInfo",
                "operationId": "FortuneBankAuthInfoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneBankAuthInfo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneBankAuthInfo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneBankAuthInfo"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_bank_auth_info/{id}": {
            "get": {
                "tags": [
                    "fortune_bank_auth_info"
                ],
                "description": "get FortuneBankAuthInfo by id",
                "operationId": "FortuneBankAuthInfoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneBankAuthInfo"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_bank_auth_info"
                ],
                "description": "update the FortuneBankAuthInfo",
                "operationId": "FortuneBankAuthInfoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneBankAuthInfo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneBankAuthInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneBankAuthInfo"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_bank_auth_info"
                ],
                "description": "delete the FortuneBankAuthInfo",
                "operationId": "FortuneBankAuthInfoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_bank_auth_info_cstm/": {
            "get": {
                "tags": [
                    "fortune_bank_auth_info_cstm"
                ],
                "description": "get FortuneBankAuthInfoCstm",
                "operationId": "FortuneBankAuthInfoCstmController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneBankAuthInfoCstm"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_bank_auth_info_cstm"
                ],
                "description": "create FortuneBankAuthInfoCstm",
                "operationId": "FortuneBankAuthInfoCstmController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneBankAuthInfoCstm content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneBankAuthInfoCstm"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneBankAuthInfoCstm"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_bank_auth_info_cstm/{id}": {
            "get": {
                "tags": [
                    "fortune_bank_auth_info_cstm"
                ],
                "description": "get FortuneBankAuthInfoCstm by id",
                "operationId": "FortuneBankAuthInfoCstmController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneBankAuthInfoCstm"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_bank_auth_info_cstm"
                ],
                "description": "update the FortuneBankAuthInfoCstm",
                "operationId": "FortuneBankAuthInfoCstmController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneBankAuthInfoCstm content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneBankAuthInfoCstm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneBankAuthInfoCstm"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_bank_auth_info_cstm"
                ],
                "description": "delete the FortuneBankAuthInfoCstm",
                "operationId": "FortuneBankAuthInfoCstmController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_bank_auth_info_很危险的/": {
            "get": {
                "tags": [
                    "fortune_bank_auth_info_很危险的"
                ],
                "description": "get FortuneBankAuthInfo很危险的",
                "operationId": "FortuneBankAuthInfo很危险的Controller.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneBankAuthInfo很危险的"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_bank_auth_info_很危险的"
                ],
                "description": "create FortuneBankAuthInfo很危险的",
                "operationId": "FortuneBankAuthInfo很危险的Controller.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneBankAuthInfo很危险的 content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneBankAuthInfo很危险的"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneBankAuthInfo很危险的"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_bank_auth_info_很危险的/{id}": {
            "get": {
                "tags": [
                    "fortune_bank_auth_info_很危险的"
                ],
                "description": "get FortuneBankAuthInfo很危险的 by id",
                "operationId": "FortuneBankAuthInfo很危险的Controller.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneBankAuthInfo很危险的"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_bank_auth_info_很危险的"
                ],
                "description": "update the FortuneBankAuthInfo很危险的",
                "operationId": "FortuneBankAuthInfo很危险的Controller.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneBankAuthInfo很危险的 content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneBankAuthInfo很危险的"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneBankAuthInfo很危险的"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_bank_auth_info_很危险的"
                ],
                "description": "delete the FortuneBankAuthInfo很危险的",
                "operationId": "FortuneBankAuthInfo很危险的Controller.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_bank_list/": {
            "get": {
                "tags": [
                    "fortune_bank_list"
                ],
                "description": "get FortuneBankList",
                "operationId": "FortuneBankListController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneBankList"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_bank_list"
                ],
                "description": "create FortuneBankList",
                "operationId": "FortuneBankListController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneBankList content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneBankList"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneBankList"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_bank_list/{id}": {
            "get": {
                "tags": [
                    "fortune_bank_list"
                ],
                "description": "get FortuneBankList by id",
                "operationId": "FortuneBankListController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneBankList"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_bank_list"
                ],
                "description": "update the FortuneBankList",
                "operationId": "FortuneBankListController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneBankList content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneBankList"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneBankList"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_bank_list"
                ],
                "description": "delete the FortuneBankList",
                "operationId": "FortuneBankListController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_batch_change_task/": {
            "get": {
                "tags": [
                    "fortune_batch_change_task"
                ],
                "description": "get FortuneBatchChangeTask",
                "operationId": "FortuneBatchChangeTaskController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneBatchChangeTask"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_batch_change_task"
                ],
                "description": "create FortuneBatchChangeTask",
                "operationId": "FortuneBatchChangeTaskController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneBatchChangeTask content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneBatchChangeTask"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneBatchChangeTask"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_batch_change_task/{id}": {
            "get": {
                "tags": [
                    "fortune_batch_change_task"
                ],
                "description": "get FortuneBatchChangeTask by id",
                "operationId": "FortuneBatchChangeTaskController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneBatchChangeTask"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_batch_change_task"
                ],
                "description": "update the FortuneBatchChangeTask",
                "operationId": "FortuneBatchChangeTaskController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneBatchChangeTask content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneBatchChangeTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneBatchChangeTask"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_batch_change_task"
                ],
                "description": "delete the FortuneBatchChangeTask",
                "operationId": "FortuneBatchChangeTaskController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_batch_change_task_detail/": {
            "get": {
                "tags": [
                    "fortune_batch_change_task_detail"
                ],
                "description": "get FortuneBatchChangeTaskDetail",
                "operationId": "FortuneBatchChangeTaskDetailController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneBatchChangeTaskDetail"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_batch_change_task_detail"
                ],
                "description": "create FortuneBatchChangeTaskDetail",
                "operationId": "FortuneBatchChangeTaskDetailController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneBatchChangeTaskDetail content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneBatchChangeTaskDetail"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneBatchChangeTaskDetail"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_batch_change_task_detail/{id}": {
            "get": {
                "tags": [
                    "fortune_batch_change_task_detail"
                ],
                "description": "get FortuneBatchChangeTaskDetail by id",
                "operationId": "FortuneBatchChangeTaskDetailController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneBatchChangeTaskDetail"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_batch_change_task_detail"
                ],
                "description": "update the FortuneBatchChangeTaskDetail",
                "operationId": "FortuneBatchChangeTaskDetailController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneBatchChangeTaskDetail content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneBatchChangeTaskDetail"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneBatchChangeTaskDetail"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_batch_change_task_detail"
                ],
                "description": "delete the FortuneBatchChangeTaskDetail",
                "operationId": "FortuneBatchChangeTaskDetailController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_call_history_attachment_info/": {
            "get": {
                "tags": [
                    "fortune_call_history_attachment_info"
                ],
                "description": "get FortuneCallHistoryAttachmentInfo",
                "operationId": "FortuneCallHistoryAttachmentInfoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCallHistoryAttachmentInfo"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_call_history_attachment_info"
                ],
                "description": "create FortuneCallHistoryAttachmentInfo",
                "operationId": "FortuneCallHistoryAttachmentInfoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCallHistoryAttachmentInfo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCallHistoryAttachmentInfo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneCallHistoryAttachmentInfo"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_call_history_attachment_info/{id}": {
            "get": {
                "tags": [
                    "fortune_call_history_attachment_info"
                ],
                "description": "get FortuneCallHistoryAttachmentInfo by id",
                "operationId": "FortuneCallHistoryAttachmentInfoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCallHistoryAttachmentInfo"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_call_history_attachment_info"
                ],
                "description": "update the FortuneCallHistoryAttachmentInfo",
                "operationId": "FortuneCallHistoryAttachmentInfoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCallHistoryAttachmentInfo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCallHistoryAttachmentInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCallHistoryAttachmentInfo"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_call_history_attachment_info"
                ],
                "description": "delete the FortuneCallHistoryAttachmentInfo",
                "operationId": "FortuneCallHistoryAttachmentInfoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_canal_subscribe/": {
            "get": {
                "tags": [
                    "fortune_canal_subscribe"
                ],
                "description": "get FortuneCanalSubscribe",
                "operationId": "FortuneCanalSubscribeController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCanalSubscribe"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_canal_subscribe"
                ],
                "description": "create FortuneCanalSubscribe",
                "operationId": "FortuneCanalSubscribeController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCanalSubscribe content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCanalSubscribe"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneCanalSubscribe"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_canal_subscribe/{id}": {
            "get": {
                "tags": [
                    "fortune_canal_subscribe"
                ],
                "description": "get FortuneCanalSubscribe by id",
                "operationId": "FortuneCanalSubscribeController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCanalSubscribe"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_canal_subscribe"
                ],
                "description": "update the FortuneCanalSubscribe",
                "operationId": "FortuneCanalSubscribeController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCanalSubscribe content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCanalSubscribe"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCanalSubscribe"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_canal_subscribe"
                ],
                "description": "delete the FortuneCanalSubscribe",
                "operationId": "FortuneCanalSubscribeController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_canal_subscribe_allot_record/": {
            "get": {
                "tags": [
                    "fortune_canal_subscribe_allot_record"
                ],
                "description": "get FortuneCanalSubscribeAllotRecord",
                "operationId": "FortuneCanalSubscribeAllotRecordController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCanalSubscribeAllotRecord"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_canal_subscribe_allot_record"
                ],
                "description": "create FortuneCanalSubscribeAllotRecord",
                "operationId": "FortuneCanalSubscribeAllotRecordController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCanalSubscribeAllotRecord content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCanalSubscribeAllotRecord"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneCanalSubscribeAllotRecord"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_canal_subscribe_allot_record/{id}": {
            "get": {
                "tags": [
                    "fortune_canal_subscribe_allot_record"
                ],
                "description": "get FortuneCanalSubscribeAllotRecord by id",
                "operationId": "FortuneCanalSubscribeAllotRecordController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCanalSubscribeAllotRecord"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_canal_subscribe_allot_record"
                ],
                "description": "update the FortuneCanalSubscribeAllotRecord",
                "operationId": "FortuneCanalSubscribeAllotRecordController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCanalSubscribeAllotRecord content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCanalSubscribeAllotRecord"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCanalSubscribeAllotRecord"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_canal_subscribe_allot_record"
                ],
                "description": "delete the FortuneCanalSubscribeAllotRecord",
                "operationId": "FortuneCanalSubscribeAllotRecordController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_change_official_history/": {
            "get": {
                "tags": [
                    "fortune_change_official_history"
                ],
                "description": "get FortuneChangeOfficialHistory",
                "operationId": "FortuneChangeOfficialHistoryController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneChangeOfficialHistory"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_change_official_history"
                ],
                "description": "create FortuneChangeOfficialHistory",
                "operationId": "FortuneChangeOfficialHistoryController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneChangeOfficialHistory content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneChangeOfficialHistory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneChangeOfficialHistory"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_change_official_history/{id}": {
            "get": {
                "tags": [
                    "fortune_change_official_history"
                ],
                "description": "get FortuneChangeOfficialHistory by id",
                "operationId": "FortuneChangeOfficialHistoryController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneChangeOfficialHistory"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_change_official_history"
                ],
                "description": "update the FortuneChangeOfficialHistory",
                "operationId": "FortuneChangeOfficialHistoryController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneChangeOfficialHistory content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneChangeOfficialHistory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneChangeOfficialHistory"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_change_official_history"
                ],
                "description": "delete the FortuneChangeOfficialHistory",
                "operationId": "FortuneChangeOfficialHistoryController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_classify_cycle_associate/": {
            "get": {
                "tags": [
                    "fortune_classify_cycle_associate"
                ],
                "description": "get FortuneClassifyCycleAssociate",
                "operationId": "FortuneClassifyCycleAssociateController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyCycleAssociate"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_classify_cycle_associate"
                ],
                "description": "create FortuneClassifyCycleAssociate",
                "operationId": "FortuneClassifyCycleAssociateController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneClassifyCycleAssociate content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyCycleAssociate"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneClassifyCycleAssociate"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_classify_cycle_associate/{id}": {
            "get": {
                "tags": [
                    "fortune_classify_cycle_associate"
                ],
                "description": "get FortuneClassifyCycleAssociate by id",
                "operationId": "FortuneClassifyCycleAssociateController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyCycleAssociate"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_classify_cycle_associate"
                ],
                "description": "update the FortuneClassifyCycleAssociate",
                "operationId": "FortuneClassifyCycleAssociateController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneClassifyCycleAssociate content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyCycleAssociate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyCycleAssociate"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_classify_cycle_associate"
                ],
                "description": "delete the FortuneClassifyCycleAssociate",
                "operationId": "FortuneClassifyCycleAssociateController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_classify_cycle_task/": {
            "get": {
                "tags": [
                    "fortune_classify_cycle_task"
                ],
                "description": "get FortuneClassifyCycleTask",
                "operationId": "FortuneClassifyCycleTaskController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyCycleTask"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_classify_cycle_task"
                ],
                "description": "create FortuneClassifyCycleTask",
                "operationId": "FortuneClassifyCycleTaskController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneClassifyCycleTask content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyCycleTask"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneClassifyCycleTask"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_classify_cycle_task/{id}": {
            "get": {
                "tags": [
                    "fortune_classify_cycle_task"
                ],
                "description": "get FortuneClassifyCycleTask by id",
                "operationId": "FortuneClassifyCycleTaskController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyCycleTask"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_classify_cycle_task"
                ],
                "description": "update the FortuneClassifyCycleTask",
                "operationId": "FortuneClassifyCycleTaskController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneClassifyCycleTask content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyCycleTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyCycleTask"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_classify_cycle_task"
                ],
                "description": "delete the FortuneClassifyCycleTask",
                "operationId": "FortuneClassifyCycleTaskController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_classify_task/": {
            "get": {
                "tags": [
                    "fortune_classify_task"
                ],
                "description": "get FortuneClassifyTask",
                "operationId": "FortuneClassifyTaskController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyTask"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_classify_task"
                ],
                "description": "create FortuneClassifyTask",
                "operationId": "FortuneClassifyTaskController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneClassifyTask content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyTask"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneClassifyTask"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_classify_task/{id}": {
            "get": {
                "tags": [
                    "fortune_classify_task"
                ],
                "description": "get FortuneClassifyTask by id",
                "operationId": "FortuneClassifyTaskController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyTask"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_classify_task"
                ],
                "description": "update the FortuneClassifyTask",
                "operationId": "FortuneClassifyTaskController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneClassifyTask content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyTask"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_classify_task"
                ],
                "description": "delete the FortuneClassifyTask",
                "operationId": "FortuneClassifyTaskController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_classify_task_record_info/": {
            "get": {
                "tags": [
                    "fortune_classify_task_record_info"
                ],
                "description": "get FortuneClassifyTaskRecordInfo",
                "operationId": "FortuneClassifyTaskRecordInfoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyTaskRecordInfo"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_classify_task_record_info"
                ],
                "description": "create FortuneClassifyTaskRecordInfo",
                "operationId": "FortuneClassifyTaskRecordInfoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneClassifyTaskRecordInfo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyTaskRecordInfo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneClassifyTaskRecordInfo"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_classify_task_record_info/{id}": {
            "get": {
                "tags": [
                    "fortune_classify_task_record_info"
                ],
                "description": "get FortuneClassifyTaskRecordInfo by id",
                "operationId": "FortuneClassifyTaskRecordInfoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyTaskRecordInfo"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_classify_task_record_info"
                ],
                "description": "update the FortuneClassifyTaskRecordInfo",
                "operationId": "FortuneClassifyTaskRecordInfoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneClassifyTaskRecordInfo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyTaskRecordInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyTaskRecordInfo"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_classify_task_record_info"
                ],
                "description": "delete the FortuneClassifyTaskRecordInfo",
                "operationId": "FortuneClassifyTaskRecordInfoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_classify_task_record_info_201808/": {
            "get": {
                "tags": [
                    "fortune_classify_task_record_info_201808"
                ],
                "description": "get FortuneClassifyTaskRecordInfo201808",
                "operationId": "FortuneClassifyTaskRecordInfo201808Controller.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyTaskRecordInfo201808"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_classify_task_record_info_201808"
                ],
                "description": "create FortuneClassifyTaskRecordInfo201808",
                "operationId": "FortuneClassifyTaskRecordInfo201808Controller.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneClassifyTaskRecordInfo201808 content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyTaskRecordInfo201808"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneClassifyTaskRecordInfo201808"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_classify_task_record_info_201808/{id}": {
            "get": {
                "tags": [
                    "fortune_classify_task_record_info_201808"
                ],
                "description": "get FortuneClassifyTaskRecordInfo201808 by id",
                "operationId": "FortuneClassifyTaskRecordInfo201808Controller.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyTaskRecordInfo201808"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_classify_task_record_info_201808"
                ],
                "description": "update the FortuneClassifyTaskRecordInfo201808",
                "operationId": "FortuneClassifyTaskRecordInfo201808Controller.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneClassifyTaskRecordInfo201808 content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyTaskRecordInfo201808"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyTaskRecordInfo201808"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_classify_task_record_info_201808"
                ],
                "description": "delete the FortuneClassifyTaskRecordInfo201808",
                "operationId": "FortuneClassifyTaskRecordInfo201808Controller.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_classify_task_record_info_201809/": {
            "get": {
                "tags": [
                    "fortune_classify_task_record_info_201809"
                ],
                "description": "get FortuneClassifyTaskRecordInfo201809",
                "operationId": "FortuneClassifyTaskRecordInfo201809Controller.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyTaskRecordInfo201809"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_classify_task_record_info_201809"
                ],
                "description": "create FortuneClassifyTaskRecordInfo201809",
                "operationId": "FortuneClassifyTaskRecordInfo201809Controller.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneClassifyTaskRecordInfo201809 content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyTaskRecordInfo201809"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneClassifyTaskRecordInfo201809"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_classify_task_record_info_201809/{id}": {
            "get": {
                "tags": [
                    "fortune_classify_task_record_info_201809"
                ],
                "description": "get FortuneClassifyTaskRecordInfo201809 by id",
                "operationId": "FortuneClassifyTaskRecordInfo201809Controller.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyTaskRecordInfo201809"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_classify_task_record_info_201809"
                ],
                "description": "update the FortuneClassifyTaskRecordInfo201809",
                "operationId": "FortuneClassifyTaskRecordInfo201809Controller.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneClassifyTaskRecordInfo201809 content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyTaskRecordInfo201809"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyTaskRecordInfo201809"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_classify_task_record_info_201809"
                ],
                "description": "delete the FortuneClassifyTaskRecordInfo201809",
                "operationId": "FortuneClassifyTaskRecordInfo201809Controller.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_classify_task_record_info_201810/": {
            "get": {
                "tags": [
                    "fortune_classify_task_record_info_201810"
                ],
                "description": "get FortuneClassifyTaskRecordInfo201810",
                "operationId": "FortuneClassifyTaskRecordInfo201810Controller.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyTaskRecordInfo201810"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_classify_task_record_info_201810"
                ],
                "description": "create FortuneClassifyTaskRecordInfo201810",
                "operationId": "FortuneClassifyTaskRecordInfo201810Controller.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneClassifyTaskRecordInfo201810 content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyTaskRecordInfo201810"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneClassifyTaskRecordInfo201810"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_classify_task_record_info_201810/{id}": {
            "get": {
                "tags": [
                    "fortune_classify_task_record_info_201810"
                ],
                "description": "get FortuneClassifyTaskRecordInfo201810 by id",
                "operationId": "FortuneClassifyTaskRecordInfo201810Controller.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyTaskRecordInfo201810"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_classify_task_record_info_201810"
                ],
                "description": "update the FortuneClassifyTaskRecordInfo201810",
                "operationId": "FortuneClassifyTaskRecordInfo201810Controller.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneClassifyTaskRecordInfo201810 content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyTaskRecordInfo201810"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyTaskRecordInfo201810"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_classify_task_record_info_201810"
                ],
                "description": "delete the FortuneClassifyTaskRecordInfo201810",
                "operationId": "FortuneClassifyTaskRecordInfo201810Controller.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_classify_task_record_info_201811/": {
            "get": {
                "tags": [
                    "fortune_classify_task_record_info_201811"
                ],
                "description": "get FortuneClassifyTaskRecordInfo201811",
                "operationId": "FortuneClassifyTaskRecordInfo201811Controller.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyTaskRecordInfo201811"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_classify_task_record_info_201811"
                ],
                "description": "create FortuneClassifyTaskRecordInfo201811",
                "operationId": "FortuneClassifyTaskRecordInfo201811Controller.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneClassifyTaskRecordInfo201811 content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyTaskRecordInfo201811"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneClassifyTaskRecordInfo201811"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_classify_task_record_info_201811/{id}": {
            "get": {
                "tags": [
                    "fortune_classify_task_record_info_201811"
                ],
                "description": "get FortuneClassifyTaskRecordInfo201811 by id",
                "operationId": "FortuneClassifyTaskRecordInfo201811Controller.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyTaskRecordInfo201811"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_classify_task_record_info_201811"
                ],
                "description": "update the FortuneClassifyTaskRecordInfo201811",
                "operationId": "FortuneClassifyTaskRecordInfo201811Controller.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneClassifyTaskRecordInfo201811 content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyTaskRecordInfo201811"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyTaskRecordInfo201811"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_classify_task_record_info_201811"
                ],
                "description": "delete the FortuneClassifyTaskRecordInfo201811",
                "operationId": "FortuneClassifyTaskRecordInfo201811Controller.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_classify_task_record_info_201812/": {
            "get": {
                "tags": [
                    "fortune_classify_task_record_info_201812"
                ],
                "description": "get FortuneClassifyTaskRecordInfo201812",
                "operationId": "FortuneClassifyTaskRecordInfo201812Controller.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyTaskRecordInfo201812"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_classify_task_record_info_201812"
                ],
                "description": "create FortuneClassifyTaskRecordInfo201812",
                "operationId": "FortuneClassifyTaskRecordInfo201812Controller.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneClassifyTaskRecordInfo201812 content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyTaskRecordInfo201812"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneClassifyTaskRecordInfo201812"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_classify_task_record_info_201812/{id}": {
            "get": {
                "tags": [
                    "fortune_classify_task_record_info_201812"
                ],
                "description": "get FortuneClassifyTaskRecordInfo201812 by id",
                "operationId": "FortuneClassifyTaskRecordInfo201812Controller.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyTaskRecordInfo201812"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_classify_task_record_info_201812"
                ],
                "description": "update the FortuneClassifyTaskRecordInfo201812",
                "operationId": "FortuneClassifyTaskRecordInfo201812Controller.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneClassifyTaskRecordInfo201812 content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyTaskRecordInfo201812"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyTaskRecordInfo201812"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_classify_task_record_info_201812"
                ],
                "description": "delete the FortuneClassifyTaskRecordInfo201812",
                "operationId": "FortuneClassifyTaskRecordInfo201812Controller.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_classify_task_record_info_201901/": {
            "get": {
                "tags": [
                    "fortune_classify_task_record_info_201901"
                ],
                "description": "get FortuneClassifyTaskRecordInfo201901",
                "operationId": "FortuneClassifyTaskRecordInfo201901Controller.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyTaskRecordInfo201901"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_classify_task_record_info_201901"
                ],
                "description": "create FortuneClassifyTaskRecordInfo201901",
                "operationId": "FortuneClassifyTaskRecordInfo201901Controller.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneClassifyTaskRecordInfo201901 content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyTaskRecordInfo201901"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneClassifyTaskRecordInfo201901"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_classify_task_record_info_201901/{id}": {
            "get": {
                "tags": [
                    "fortune_classify_task_record_info_201901"
                ],
                "description": "get FortuneClassifyTaskRecordInfo201901 by id",
                "operationId": "FortuneClassifyTaskRecordInfo201901Controller.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyTaskRecordInfo201901"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_classify_task_record_info_201901"
                ],
                "description": "update the FortuneClassifyTaskRecordInfo201901",
                "operationId": "FortuneClassifyTaskRecordInfo201901Controller.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneClassifyTaskRecordInfo201901 content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyTaskRecordInfo201901"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyTaskRecordInfo201901"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_classify_task_record_info_201901"
                ],
                "description": "delete the FortuneClassifyTaskRecordInfo201901",
                "operationId": "FortuneClassifyTaskRecordInfo201901Controller.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_classify_task_record_info_201902/": {
            "get": {
                "tags": [
                    "fortune_classify_task_record_info_201902"
                ],
                "description": "get FortuneClassifyTaskRecordInfo201902",
                "operationId": "FortuneClassifyTaskRecordInfo201902Controller.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyTaskRecordInfo201902"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_classify_task_record_info_201902"
                ],
                "description": "create FortuneClassifyTaskRecordInfo201902",
                "operationId": "FortuneClassifyTaskRecordInfo201902Controller.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneClassifyTaskRecordInfo201902 content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyTaskRecordInfo201902"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneClassifyTaskRecordInfo201902"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_classify_task_record_info_201902/{id}": {
            "get": {
                "tags": [
                    "fortune_classify_task_record_info_201902"
                ],
                "description": "get FortuneClassifyTaskRecordInfo201902 by id",
                "operationId": "FortuneClassifyTaskRecordInfo201902Controller.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyTaskRecordInfo201902"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_classify_task_record_info_201902"
                ],
                "description": "update the FortuneClassifyTaskRecordInfo201902",
                "operationId": "FortuneClassifyTaskRecordInfo201902Controller.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneClassifyTaskRecordInfo201902 content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyTaskRecordInfo201902"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyTaskRecordInfo201902"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_classify_task_record_info_201902"
                ],
                "description": "delete the FortuneClassifyTaskRecordInfo201902",
                "operationId": "FortuneClassifyTaskRecordInfo201902Controller.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_classify_task_record_info_201906/": {
            "get": {
                "tags": [
                    "fortune_classify_task_record_info_201906"
                ],
                "description": "get FortuneClassifyTaskRecordInfo201906",
                "operationId": "FortuneClassifyTaskRecordInfo201906Controller.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyTaskRecordInfo201906"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_classify_task_record_info_201906"
                ],
                "description": "create FortuneClassifyTaskRecordInfo201906",
                "operationId": "FortuneClassifyTaskRecordInfo201906Controller.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneClassifyTaskRecordInfo201906 content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyTaskRecordInfo201906"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneClassifyTaskRecordInfo201906"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_classify_task_record_info_201906/{id}": {
            "get": {
                "tags": [
                    "fortune_classify_task_record_info_201906"
                ],
                "description": "get FortuneClassifyTaskRecordInfo201906 by id",
                "operationId": "FortuneClassifyTaskRecordInfo201906Controller.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyTaskRecordInfo201906"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_classify_task_record_info_201906"
                ],
                "description": "update the FortuneClassifyTaskRecordInfo201906",
                "operationId": "FortuneClassifyTaskRecordInfo201906Controller.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneClassifyTaskRecordInfo201906 content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyTaskRecordInfo201906"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyTaskRecordInfo201906"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_classify_task_record_info_201906"
                ],
                "description": "delete the FortuneClassifyTaskRecordInfo201906",
                "operationId": "FortuneClassifyTaskRecordInfo201906Controller.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_classify_user_int_id/": {
            "get": {
                "tags": [
                    "fortune_classify_user_int_id"
                ],
                "description": "get FortuneClassifyUserIntId",
                "operationId": "FortuneClassifyUserIntIdController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyUserIntId"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_classify_user_int_id"
                ],
                "description": "create FortuneClassifyUserIntId",
                "operationId": "FortuneClassifyUserIntIdController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneClassifyUserIntId content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyUserIntId"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneClassifyUserIntId"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_classify_user_int_id/{id}": {
            "get": {
                "tags": [
                    "fortune_classify_user_int_id"
                ],
                "description": "get FortuneClassifyUserIntId by id",
                "operationId": "FortuneClassifyUserIntIdController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyUserIntId"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_classify_user_int_id"
                ],
                "description": "update the FortuneClassifyUserIntId",
                "operationId": "FortuneClassifyUserIntIdController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneClassifyUserIntId content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyUserIntId"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyUserIntId"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_classify_user_int_id"
                ],
                "description": "delete the FortuneClassifyUserIntId",
                "operationId": "FortuneClassifyUserIntIdController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_classify_user_int_id_min/": {
            "get": {
                "tags": [
                    "fortune_classify_user_int_id_min"
                ],
                "description": "get FortuneClassifyUserIntIdMin",
                "operationId": "FortuneClassifyUserIntIdMinController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyUserIntIdMin"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_classify_user_int_id_min"
                ],
                "description": "create FortuneClassifyUserIntIdMin",
                "operationId": "FortuneClassifyUserIntIdMinController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneClassifyUserIntIdMin content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyUserIntIdMin"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneClassifyUserIntIdMin"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_classify_user_int_id_min/{id}": {
            "get": {
                "tags": [
                    "fortune_classify_user_int_id_min"
                ],
                "description": "get FortuneClassifyUserIntIdMin by id",
                "operationId": "FortuneClassifyUserIntIdMinController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyUserIntIdMin"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_classify_user_int_id_min"
                ],
                "description": "update the FortuneClassifyUserIntIdMin",
                "operationId": "FortuneClassifyUserIntIdMinController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneClassifyUserIntIdMin content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyUserIntIdMin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneClassifyUserIntIdMin"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_classify_user_int_id_min"
                ],
                "description": "delete the FortuneClassifyUserIntIdMin",
                "operationId": "FortuneClassifyUserIntIdMinController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_company/": {
            "get": {
                "tags": [
                    "fortune_company"
                ],
                "description": "get FortuneCompany",
                "operationId": "FortuneCompanyController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCompany"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_company"
                ],
                "description": "create FortuneCompany",
                "operationId": "FortuneCompanyController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCompany content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCompany"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneCompany"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_company/{id}": {
            "get": {
                "tags": [
                    "fortune_company"
                ],
                "description": "get FortuneCompany by id",
                "operationId": "FortuneCompanyController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCompany"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_company"
                ],
                "description": "update the FortuneCompany",
                "operationId": "FortuneCompanyController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCompany content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCompany"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCompany"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_company"
                ],
                "description": "delete the FortuneCompany",
                "operationId": "FortuneCompanyController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_company_info/": {
            "get": {
                "tags": [
                    "fortune_company_info"
                ],
                "description": "get FortuneCompanyInfo",
                "operationId": "FortuneCompanyInfoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCompanyInfo"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_company_info"
                ],
                "description": "create FortuneCompanyInfo",
                "operationId": "FortuneCompanyInfoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCompanyInfo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCompanyInfo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneCompanyInfo"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_company_info/{id}": {
            "get": {
                "tags": [
                    "fortune_company_info"
                ],
                "description": "get FortuneCompanyInfo by id",
                "operationId": "FortuneCompanyInfoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCompanyInfo"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_company_info"
                ],
                "description": "update the FortuneCompanyInfo",
                "operationId": "FortuneCompanyInfoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCompanyInfo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCompanyInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCompanyInfo"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_company_info"
                ],
                "description": "delete the FortuneCompanyInfo",
                "operationId": "FortuneCompanyInfoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_company_info_attach/": {
            "get": {
                "tags": [
                    "fortune_company_info_attach"
                ],
                "description": "get FortuneCompanyInfoAttach",
                "operationId": "FortuneCompanyInfoAttachController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCompanyInfoAttach"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_company_info_attach"
                ],
                "description": "create FortuneCompanyInfoAttach",
                "operationId": "FortuneCompanyInfoAttachController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCompanyInfoAttach content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCompanyInfoAttach"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneCompanyInfoAttach"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_company_info_attach/{id}": {
            "get": {
                "tags": [
                    "fortune_company_info_attach"
                ],
                "description": "get FortuneCompanyInfoAttach by id",
                "operationId": "FortuneCompanyInfoAttachController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCompanyInfoAttach"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_company_info_attach"
                ],
                "description": "update the FortuneCompanyInfoAttach",
                "operationId": "FortuneCompanyInfoAttachController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCompanyInfoAttach content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCompanyInfoAttach"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCompanyInfoAttach"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_company_info_attach"
                ],
                "description": "delete the FortuneCompanyInfoAttach",
                "operationId": "FortuneCompanyInfoAttachController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_customer_book/": {
            "get": {
                "tags": [
                    "fortune_customer_book"
                ],
                "description": "get FortuneCustomerBook",
                "operationId": "FortuneCustomerBookController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBook"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_customer_book"
                ],
                "description": "create FortuneCustomerBook",
                "operationId": "FortuneCustomerBookController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerBook content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBook"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneCustomerBook"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_customer_book/{id}": {
            "get": {
                "tags": [
                    "fortune_customer_book"
                ],
                "description": "get FortuneCustomerBook by id",
                "operationId": "FortuneCustomerBookController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBook"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_customer_book"
                ],
                "description": "update the FortuneCustomerBook",
                "operationId": "FortuneCustomerBookController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerBook content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBook"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBook"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_customer_book"
                ],
                "description": "delete the FortuneCustomerBook",
                "operationId": "FortuneCustomerBookController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_customer_book_2010614/": {
            "get": {
                "tags": [
                    "fortune_customer_book_2010614"
                ],
                "description": "get FortuneCustomerBook2010614",
                "operationId": "FortuneCustomerBook2010614Controller.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBook2010614"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_customer_book_2010614"
                ],
                "description": "create FortuneCustomerBook2010614",
                "operationId": "FortuneCustomerBook2010614Controller.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerBook2010614 content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBook2010614"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneCustomerBook2010614"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_customer_book_2010614/{id}": {
            "get": {
                "tags": [
                    "fortune_customer_book_2010614"
                ],
                "description": "get FortuneCustomerBook2010614 by id",
                "operationId": "FortuneCustomerBook2010614Controller.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBook2010614"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_customer_book_2010614"
                ],
                "description": "update the FortuneCustomerBook2010614",
                "operationId": "FortuneCustomerBook2010614Controller.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerBook2010614 content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBook2010614"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBook2010614"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_customer_book_2010614"
                ],
                "description": "delete the FortuneCustomerBook2010614",
                "operationId": "FortuneCustomerBook2010614Controller.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_customer_book_20180201/": {
            "get": {
                "tags": [
                    "fortune_customer_book_20180201"
                ],
                "description": "get FortuneCustomerBook20180201",
                "operationId": "FortuneCustomerBook20180201Controller.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBook20180201"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_customer_book_20180201"
                ],
                "description": "create FortuneCustomerBook20180201",
                "operationId": "FortuneCustomerBook20180201Controller.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerBook20180201 content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBook20180201"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneCustomerBook20180201"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_customer_book_20180201/{id}": {
            "get": {
                "tags": [
                    "fortune_customer_book_20180201"
                ],
                "description": "get FortuneCustomerBook20180201 by id",
                "operationId": "FortuneCustomerBook20180201Controller.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBook20180201"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_customer_book_20180201"
                ],
                "description": "update the FortuneCustomerBook20180201",
                "operationId": "FortuneCustomerBook20180201Controller.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerBook20180201 content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBook20180201"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBook20180201"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_customer_book_20180201"
                ],
                "description": "delete the FortuneCustomerBook20180201",
                "operationId": "FortuneCustomerBook20180201Controller.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_customer_book_20180621/": {
            "get": {
                "tags": [
                    "fortune_customer_book_20180621"
                ],
                "description": "get FortuneCustomerBook20180621",
                "operationId": "FortuneCustomerBook20180621Controller.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBook20180621"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_customer_book_20180621"
                ],
                "description": "create FortuneCustomerBook20180621",
                "operationId": "FortuneCustomerBook20180621Controller.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerBook20180621 content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBook20180621"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneCustomerBook20180621"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_customer_book_20180621/{id}": {
            "get": {
                "tags": [
                    "fortune_customer_book_20180621"
                ],
                "description": "get FortuneCustomerBook20180621 by id",
                "operationId": "FortuneCustomerBook20180621Controller.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBook20180621"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_customer_book_20180621"
                ],
                "description": "update the FortuneCustomerBook20180621",
                "operationId": "FortuneCustomerBook20180621Controller.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerBook20180621 content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBook20180621"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBook20180621"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_customer_book_20180621"
                ],
                "description": "delete the FortuneCustomerBook20180621",
                "operationId": "FortuneCustomerBook20180621Controller.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_customer_book_20180704/": {
            "get": {
                "tags": [
                    "fortune_customer_book_20180704"
                ],
                "description": "get FortuneCustomerBook20180704",
                "operationId": "FortuneCustomerBook20180704Controller.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBook20180704"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_customer_book_20180704"
                ],
                "description": "create FortuneCustomerBook20180704",
                "operationId": "FortuneCustomerBook20180704Controller.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerBook20180704 content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBook20180704"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneCustomerBook20180704"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_customer_book_20180704/{id}": {
            "get": {
                "tags": [
                    "fortune_customer_book_20180704"
                ],
                "description": "get FortuneCustomerBook20180704 by id",
                "operationId": "FortuneCustomerBook20180704Controller.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBook20180704"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_customer_book_20180704"
                ],
                "description": "update the FortuneCustomerBook20180704",
                "operationId": "FortuneCustomerBook20180704Controller.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerBook20180704 content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBook20180704"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBook20180704"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_customer_book_20180704"
                ],
                "description": "delete the FortuneCustomerBook20180704",
                "operationId": "FortuneCustomerBook20180704Controller.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_customer_book_20181011/": {
            "get": {
                "tags": [
                    "fortune_customer_book_20181011"
                ],
                "description": "get FortuneCustomerBook20181011",
                "operationId": "FortuneCustomerBook20181011Controller.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBook20181011"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_customer_book_20181011"
                ],
                "description": "create FortuneCustomerBook20181011",
                "operationId": "FortuneCustomerBook20181011Controller.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerBook20181011 content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBook20181011"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneCustomerBook20181011"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_customer_book_20181011/{id}": {
            "get": {
                "tags": [
                    "fortune_customer_book_20181011"
                ],
                "description": "get FortuneCustomerBook20181011 by id",
                "operationId": "FortuneCustomerBook20181011Controller.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBook20181011"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_customer_book_20181011"
                ],
                "description": "update the FortuneCustomerBook20181011",
                "operationId": "FortuneCustomerBook20181011Controller.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerBook20181011 content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBook20181011"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBook20181011"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_customer_book_20181011"
                ],
                "description": "delete the FortuneCustomerBook20181011",
                "operationId": "FortuneCustomerBook20181011Controller.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_customer_book_20181015/": {
            "get": {
                "tags": [
                    "fortune_customer_book_20181015"
                ],
                "description": "get FortuneCustomerBook20181015",
                "operationId": "FortuneCustomerBook20181015Controller.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBook20181015"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_customer_book_20181015"
                ],
                "description": "create FortuneCustomerBook20181015",
                "operationId": "FortuneCustomerBook20181015Controller.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerBook20181015 content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBook20181015"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneCustomerBook20181015"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_customer_book_20181015/{id}": {
            "get": {
                "tags": [
                    "fortune_customer_book_20181015"
                ],
                "description": "get FortuneCustomerBook20181015 by id",
                "operationId": "FortuneCustomerBook20181015Controller.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBook20181015"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_customer_book_20181015"
                ],
                "description": "update the FortuneCustomerBook20181015",
                "operationId": "FortuneCustomerBook20181015Controller.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerBook20181015 content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBook20181015"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBook20181015"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_customer_book_20181015"
                ],
                "description": "delete the FortuneCustomerBook20181015",
                "operationId": "FortuneCustomerBook20181015Controller.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_customer_book_20190306/": {
            "get": {
                "tags": [
                    "fortune_customer_book_20190306"
                ],
                "description": "get FortuneCustomerBook20190306",
                "operationId": "FortuneCustomerBook20190306Controller.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBook20190306"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_customer_book_20190306"
                ],
                "description": "create FortuneCustomerBook20190306",
                "operationId": "FortuneCustomerBook20190306Controller.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerBook20190306 content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBook20190306"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneCustomerBook20190306"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_customer_book_20190306/{id}": {
            "get": {
                "tags": [
                    "fortune_customer_book_20190306"
                ],
                "description": "get FortuneCustomerBook20190306 by id",
                "operationId": "FortuneCustomerBook20190306Controller.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBook20190306"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_customer_book_20190306"
                ],
                "description": "update the FortuneCustomerBook20190306",
                "operationId": "FortuneCustomerBook20190306Controller.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerBook20190306 content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBook20190306"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBook20190306"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_customer_book_20190306"
                ],
                "description": "delete the FortuneCustomerBook20190306",
                "operationId": "FortuneCustomerBook20190306Controller.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_customer_book_allocation_hisotory/": {
            "get": {
                "tags": [
                    "fortune_customer_book_allocation_hisotory"
                ],
                "description": "get FortuneCustomerBookAllocationHisotory",
                "operationId": "FortuneCustomerBookAllocationHisotoryController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBookAllocationHisotory"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_customer_book_allocation_hisotory"
                ],
                "description": "create FortuneCustomerBookAllocationHisotory",
                "operationId": "FortuneCustomerBookAllocationHisotoryController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerBookAllocationHisotory content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBookAllocationHisotory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneCustomerBookAllocationHisotory"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_customer_book_allocation_hisotory/{id}": {
            "get": {
                "tags": [
                    "fortune_customer_book_allocation_hisotory"
                ],
                "description": "get FortuneCustomerBookAllocationHisotory by id",
                "operationId": "FortuneCustomerBookAllocationHisotoryController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBookAllocationHisotory"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_customer_book_allocation_hisotory"
                ],
                "description": "update the FortuneCustomerBookAllocationHisotory",
                "operationId": "FortuneCustomerBookAllocationHisotoryController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerBookAllocationHisotory content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBookAllocationHisotory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBookAllocationHisotory"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_customer_book_allocation_hisotory"
                ],
                "description": "delete the FortuneCustomerBookAllocationHisotory",
                "operationId": "FortuneCustomerBookAllocationHisotoryController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_customer_book_allot_record/": {
            "get": {
                "tags": [
                    "fortune_customer_book_allot_record"
                ],
                "description": "get FortuneCustomerBookAllotRecord",
                "operationId": "FortuneCustomerBookAllotRecordController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBookAllotRecord"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_customer_book_allot_record"
                ],
                "description": "create FortuneCustomerBookAllotRecord",
                "operationId": "FortuneCustomerBookAllotRecordController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerBookAllotRecord content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBookAllotRecord"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneCustomerBookAllotRecord"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_customer_book_allot_record/{id}": {
            "get": {
                "tags": [
                    "fortune_customer_book_allot_record"
                ],
                "description": "get FortuneCustomerBookAllotRecord by id",
                "operationId": "FortuneCustomerBookAllotRecordController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBookAllotRecord"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_customer_book_allot_record"
                ],
                "description": "update the FortuneCustomerBookAllotRecord",
                "operationId": "FortuneCustomerBookAllotRecordController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerBookAllotRecord content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBookAllotRecord"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBookAllotRecord"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_customer_book_allot_record"
                ],
                "description": "delete the FortuneCustomerBookAllotRecord",
                "operationId": "FortuneCustomerBookAllotRecordController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_customer_book_history/": {
            "get": {
                "tags": [
                    "fortune_customer_book_history"
                ],
                "description": "get FortuneCustomerBookHistory",
                "operationId": "FortuneCustomerBookHistoryController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBookHistory"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_customer_book_history"
                ],
                "description": "create FortuneCustomerBookHistory",
                "operationId": "FortuneCustomerBookHistoryController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerBookHistory content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBookHistory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneCustomerBookHistory"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_customer_book_history/{id}": {
            "get": {
                "tags": [
                    "fortune_customer_book_history"
                ],
                "description": "get FortuneCustomerBookHistory by id",
                "operationId": "FortuneCustomerBookHistoryController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBookHistory"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_customer_book_history"
                ],
                "description": "update the FortuneCustomerBookHistory",
                "operationId": "FortuneCustomerBookHistoryController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerBookHistory content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBookHistory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerBookHistory"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_customer_book_history"
                ],
                "description": "delete the FortuneCustomerBookHistory",
                "operationId": "FortuneCustomerBookHistoryController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_customer_call_history/": {
            "get": {
                "tags": [
                    "fortune_customer_call_history"
                ],
                "description": "get FortuneCustomerCallHistory",
                "operationId": "FortuneCustomerCallHistoryController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerCallHistory"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_customer_call_history"
                ],
                "description": "create FortuneCustomerCallHistory",
                "operationId": "FortuneCustomerCallHistoryController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerCallHistory content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerCallHistory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneCustomerCallHistory"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_customer_call_history/{id}": {
            "get": {
                "tags": [
                    "fortune_customer_call_history"
                ],
                "description": "get FortuneCustomerCallHistory by id",
                "operationId": "FortuneCustomerCallHistoryController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerCallHistory"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_customer_call_history"
                ],
                "description": "update the FortuneCustomerCallHistory",
                "operationId": "FortuneCustomerCallHistoryController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerCallHistory content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerCallHistory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerCallHistory"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_customer_call_history"
                ],
                "description": "delete the FortuneCustomerCallHistory",
                "operationId": "FortuneCustomerCallHistoryController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_customer_call_history_20180201/": {
            "get": {
                "tags": [
                    "fortune_customer_call_history_20180201"
                ],
                "description": "get FortuneCustomerCallHistory20180201",
                "operationId": "FortuneCustomerCallHistory20180201Controller.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerCallHistory20180201"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_customer_call_history_20180201"
                ],
                "description": "create FortuneCustomerCallHistory20180201",
                "operationId": "FortuneCustomerCallHistory20180201Controller.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerCallHistory20180201 content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerCallHistory20180201"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneCustomerCallHistory20180201"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_customer_call_history_20180201/{id}": {
            "get": {
                "tags": [
                    "fortune_customer_call_history_20180201"
                ],
                "description": "get FortuneCustomerCallHistory20180201 by id",
                "operationId": "FortuneCustomerCallHistory20180201Controller.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerCallHistory20180201"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_customer_call_history_20180201"
                ],
                "description": "update the FortuneCustomerCallHistory20180201",
                "operationId": "FortuneCustomerCallHistory20180201Controller.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerCallHistory20180201 content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerCallHistory20180201"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerCallHistory20180201"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_customer_call_history_20180201"
                ],
                "description": "delete the FortuneCustomerCallHistory20180201",
                "operationId": "FortuneCustomerCallHistory20180201Controller.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_customer_call_plan/": {
            "get": {
                "tags": [
                    "fortune_customer_call_plan"
                ],
                "description": "get FortuneCustomerCallPlan",
                "operationId": "FortuneCustomerCallPlanController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerCallPlan"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_customer_call_plan"
                ],
                "description": "create FortuneCustomerCallPlan",
                "operationId": "FortuneCustomerCallPlanController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerCallPlan content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerCallPlan"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneCustomerCallPlan"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_customer_call_plan/{id}": {
            "get": {
                "tags": [
                    "fortune_customer_call_plan"
                ],
                "description": "get FortuneCustomerCallPlan by id",
                "operationId": "FortuneCustomerCallPlanController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerCallPlan"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_customer_call_plan"
                ],
                "description": "update the FortuneCustomerCallPlan",
                "operationId": "FortuneCustomerCallPlanController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerCallPlan content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerCallPlan"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerCallPlan"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_customer_call_plan"
                ],
                "description": "delete the FortuneCustomerCallPlan",
                "operationId": "FortuneCustomerCallPlanController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_customer_call_plan_attach/": {
            "get": {
                "tags": [
                    "fortune_customer_call_plan_attach"
                ],
                "description": "get FortuneCustomerCallPlanAttach",
                "operationId": "FortuneCustomerCallPlanAttachController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerCallPlanAttach"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_customer_call_plan_attach"
                ],
                "description": "create FortuneCustomerCallPlanAttach",
                "operationId": "FortuneCustomerCallPlanAttachController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerCallPlanAttach content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerCallPlanAttach"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneCustomerCallPlanAttach"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_customer_call_plan_attach/{id}": {
            "get": {
                "tags": [
                    "fortune_customer_call_plan_attach"
                ],
                "description": "get FortuneCustomerCallPlanAttach by id",
                "operationId": "FortuneCustomerCallPlanAttachController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerCallPlanAttach"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_customer_call_plan_attach"
                ],
                "description": "update the FortuneCustomerCallPlanAttach",
                "operationId": "FortuneCustomerCallPlanAttachController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerCallPlanAttach content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerCallPlanAttach"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerCallPlanAttach"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_customer_call_plan_attach"
                ],
                "description": "delete the FortuneCustomerCallPlanAttach",
                "operationId": "FortuneCustomerCallPlanAttachController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_customer_change_relation_history/": {
            "get": {
                "tags": [
                    "fortune_customer_change_relation_history"
                ],
                "description": "get FortuneCustomerChangeRelationHistory",
                "operationId": "FortuneCustomerChangeRelationHistoryController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerChangeRelationHistory"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_customer_change_relation_history"
                ],
                "description": "create FortuneCustomerChangeRelationHistory",
                "operationId": "FortuneCustomerChangeRelationHistoryController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerChangeRelationHistory content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerChangeRelationHistory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneCustomerChangeRelationHistory"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_customer_change_relation_history/{id}": {
            "get": {
                "tags": [
                    "fortune_customer_change_relation_history"
                ],
                "description": "get FortuneCustomerChangeRelationHistory by id",
                "operationId": "FortuneCustomerChangeRelationHistoryController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerChangeRelationHistory"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_customer_change_relation_history"
                ],
                "description": "update the FortuneCustomerChangeRelationHistory",
                "operationId": "FortuneCustomerChangeRelationHistoryController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerChangeRelationHistory content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerChangeRelationHistory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerChangeRelationHistory"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_customer_change_relation_history"
                ],
                "description": "delete the FortuneCustomerChangeRelationHistory",
                "operationId": "FortuneCustomerChangeRelationHistoryController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_customer_change_relation_history_copy/": {
            "get": {
                "tags": [
                    "fortune_customer_change_relation_history_copy"
                ],
                "description": "get FortuneCustomerChangeRelationHistoryCopy",
                "operationId": "FortuneCustomerChangeRelationHistoryCopyController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerChangeRelationHistoryCopy"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_customer_change_relation_history_copy"
                ],
                "description": "create FortuneCustomerChangeRelationHistoryCopy",
                "operationId": "FortuneCustomerChangeRelationHistoryCopyController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerChangeRelationHistoryCopy content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerChangeRelationHistoryCopy"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneCustomerChangeRelationHistoryCopy"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_customer_change_relation_history_copy/{id}": {
            "get": {
                "tags": [
                    "fortune_customer_change_relation_history_copy"
                ],
                "description": "get FortuneCustomerChangeRelationHistoryCopy by id",
                "operationId": "FortuneCustomerChangeRelationHistoryCopyController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerChangeRelationHistoryCopy"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_customer_change_relation_history_copy"
                ],
                "description": "update the FortuneCustomerChangeRelationHistoryCopy",
                "operationId": "FortuneCustomerChangeRelationHistoryCopyController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerChangeRelationHistoryCopy content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerChangeRelationHistoryCopy"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerChangeRelationHistoryCopy"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_customer_change_relation_history_copy"
                ],
                "description": "delete the FortuneCustomerChangeRelationHistoryCopy",
                "operationId": "FortuneCustomerChangeRelationHistoryCopyController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_customer_change_relation_history_tools/": {
            "get": {
                "tags": [
                    "fortune_customer_change_relation_history_tools"
                ],
                "description": "get FortuneCustomerChangeRelationHistoryTools",
                "operationId": "FortuneCustomerChangeRelationHistoryToolsController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerChangeRelationHistoryTools"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_customer_change_relation_history_tools"
                ],
                "description": "create FortuneCustomerChangeRelationHistoryTools",
                "operationId": "FortuneCustomerChangeRelationHistoryToolsController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerChangeRelationHistoryTools content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerChangeRelationHistoryTools"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneCustomerChangeRelationHistoryTools"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_customer_change_relation_history_tools/{id}": {
            "get": {
                "tags": [
                    "fortune_customer_change_relation_history_tools"
                ],
                "description": "get FortuneCustomerChangeRelationHistoryTools by id",
                "operationId": "FortuneCustomerChangeRelationHistoryToolsController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerChangeRelationHistoryTools"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_customer_change_relation_history_tools"
                ],
                "description": "update the FortuneCustomerChangeRelationHistoryTools",
                "operationId": "FortuneCustomerChangeRelationHistoryToolsController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerChangeRelationHistoryTools content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerChangeRelationHistoryTools"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerChangeRelationHistoryTools"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_customer_change_relation_history_tools"
                ],
                "description": "delete the FortuneCustomerChangeRelationHistoryTools",
                "operationId": "FortuneCustomerChangeRelationHistoryToolsController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_customer_subscribe/": {
            "get": {
                "tags": [
                    "fortune_customer_subscribe"
                ],
                "description": "get FortuneCustomerSubscribe",
                "operationId": "FortuneCustomerSubscribeController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerSubscribe"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_customer_subscribe"
                ],
                "description": "create FortuneCustomerSubscribe",
                "operationId": "FortuneCustomerSubscribeController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerSubscribe content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerSubscribe"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneCustomerSubscribe"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_customer_subscribe/{id}": {
            "get": {
                "tags": [
                    "fortune_customer_subscribe"
                ],
                "description": "get FortuneCustomerSubscribe by id",
                "operationId": "FortuneCustomerSubscribeController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerSubscribe"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_customer_subscribe"
                ],
                "description": "update the FortuneCustomerSubscribe",
                "operationId": "FortuneCustomerSubscribeController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerSubscribe content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerSubscribe"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerSubscribe"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_customer_subscribe"
                ],
                "description": "delete the FortuneCustomerSubscribe",
                "operationId": "FortuneCustomerSubscribeController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_customer_subscribe_allot_history/": {
            "get": {
                "tags": [
                    "fortune_customer_subscribe_allot_history"
                ],
                "description": "get FortuneCustomerSubscribeAllotHistory",
                "operationId": "FortuneCustomerSubscribeAllotHistoryController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerSubscribeAllotHistory"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_customer_subscribe_allot_history"
                ],
                "description": "create FortuneCustomerSubscribeAllotHistory",
                "operationId": "FortuneCustomerSubscribeAllotHistoryController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerSubscribeAllotHistory content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerSubscribeAllotHistory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneCustomerSubscribeAllotHistory"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_customer_subscribe_allot_history/{id}": {
            "get": {
                "tags": [
                    "fortune_customer_subscribe_allot_history"
                ],
                "description": "get FortuneCustomerSubscribeAllotHistory by id",
                "operationId": "FortuneCustomerSubscribeAllotHistoryController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerSubscribeAllotHistory"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_customer_subscribe_allot_history"
                ],
                "description": "update the FortuneCustomerSubscribeAllotHistory",
                "operationId": "FortuneCustomerSubscribeAllotHistoryController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerSubscribeAllotHistory content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerSubscribeAllotHistory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerSubscribeAllotHistory"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_customer_subscribe_allot_history"
                ],
                "description": "delete the FortuneCustomerSubscribeAllotHistory",
                "operationId": "FortuneCustomerSubscribeAllotHistoryController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_customer_subscribe_copy/": {
            "get": {
                "tags": [
                    "fortune_customer_subscribe_copy"
                ],
                "description": "get FortuneCustomerSubscribeCopy",
                "operationId": "FortuneCustomerSubscribeCopyController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerSubscribeCopy"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_customer_subscribe_copy"
                ],
                "description": "create FortuneCustomerSubscribeCopy",
                "operationId": "FortuneCustomerSubscribeCopyController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerSubscribeCopy content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerSubscribeCopy"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneCustomerSubscribeCopy"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_customer_subscribe_copy/{id}": {
            "get": {
                "tags": [
                    "fortune_customer_subscribe_copy"
                ],
                "description": "get FortuneCustomerSubscribeCopy by id",
                "operationId": "FortuneCustomerSubscribeCopyController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerSubscribeCopy"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_customer_subscribe_copy"
                ],
                "description": "update the FortuneCustomerSubscribeCopy",
                "operationId": "FortuneCustomerSubscribeCopyController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerSubscribeCopy content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerSubscribeCopy"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerSubscribeCopy"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_customer_subscribe_copy"
                ],
                "description": "delete the FortuneCustomerSubscribeCopy",
                "operationId": "FortuneCustomerSubscribeCopyController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_customer_task/": {
            "get": {
                "tags": [
                    "fortune_customer_task"
                ],
                "description": "get FortuneCustomerTask",
                "operationId": "FortuneCustomerTaskController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerTask"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_customer_task"
                ],
                "description": "create FortuneCustomerTask",
                "operationId": "FortuneCustomerTaskController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerTask content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerTask"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneCustomerTask"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_customer_task/{id}": {
            "get": {
                "tags": [
                    "fortune_customer_task"
                ],
                "description": "get FortuneCustomerTask by id",
                "operationId": "FortuneCustomerTaskController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerTask"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_customer_task"
                ],
                "description": "update the FortuneCustomerTask",
                "operationId": "FortuneCustomerTaskController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerTask content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerTask"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_customer_task"
                ],
                "description": "delete the FortuneCustomerTask",
                "operationId": "FortuneCustomerTaskController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_customer_task_anomaly/": {
            "get": {
                "tags": [
                    "fortune_customer_task_anomaly"
                ],
                "description": "get FortuneCustomerTaskAnomaly",
                "operationId": "FortuneCustomerTaskAnomalyController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerTaskAnomaly"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_customer_task_anomaly"
                ],
                "description": "create FortuneCustomerTaskAnomaly",
                "operationId": "FortuneCustomerTaskAnomalyController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerTaskAnomaly content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerTaskAnomaly"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneCustomerTaskAnomaly"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_customer_task_anomaly/{id}": {
            "get": {
                "tags": [
                    "fortune_customer_task_anomaly"
                ],
                "description": "get FortuneCustomerTaskAnomaly by id",
                "operationId": "FortuneCustomerTaskAnomalyController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerTaskAnomaly"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_customer_task_anomaly"
                ],
                "description": "update the FortuneCustomerTaskAnomaly",
                "operationId": "FortuneCustomerTaskAnomalyController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerTaskAnomaly content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerTaskAnomaly"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerTaskAnomaly"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_customer_task_anomaly"
                ],
                "description": "delete the FortuneCustomerTaskAnomaly",
                "operationId": "FortuneCustomerTaskAnomalyController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_customer_task_anomaly_copy/": {
            "get": {
                "tags": [
                    "fortune_customer_task_anomaly_copy"
                ],
                "description": "get FortuneCustomerTaskAnomalyCopy",
                "operationId": "FortuneCustomerTaskAnomalyCopyController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerTaskAnomalyCopy"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_customer_task_anomaly_copy"
                ],
                "description": "create FortuneCustomerTaskAnomalyCopy",
                "operationId": "FortuneCustomerTaskAnomalyCopyController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerTaskAnomalyCopy content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerTaskAnomalyCopy"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneCustomerTaskAnomalyCopy"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_customer_task_anomaly_copy/{id}": {
            "get": {
                "tags": [
                    "fortune_customer_task_anomaly_copy"
                ],
                "description": "get FortuneCustomerTaskAnomalyCopy by id",
                "operationId": "FortuneCustomerTaskAnomalyCopyController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerTaskAnomalyCopy"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_customer_task_anomaly_copy"
                ],
                "description": "update the FortuneCustomerTaskAnomalyCopy",
                "operationId": "FortuneCustomerTaskAnomalyCopyController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerTaskAnomalyCopy content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerTaskAnomalyCopy"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerTaskAnomalyCopy"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_customer_task_anomaly_copy"
                ],
                "description": "delete the FortuneCustomerTaskAnomalyCopy",
                "operationId": "FortuneCustomerTaskAnomalyCopyController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_customer_task_copy/": {
            "get": {
                "tags": [
                    "fortune_customer_task_copy"
                ],
                "description": "get FortuneCustomerTaskCopy",
                "operationId": "FortuneCustomerTaskCopyController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerTaskCopy"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_customer_task_copy"
                ],
                "description": "create FortuneCustomerTaskCopy",
                "operationId": "FortuneCustomerTaskCopyController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerTaskCopy content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerTaskCopy"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneCustomerTaskCopy"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_customer_task_copy/{id}": {
            "get": {
                "tags": [
                    "fortune_customer_task_copy"
                ],
                "description": "get FortuneCustomerTaskCopy by id",
                "operationId": "FortuneCustomerTaskCopyController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerTaskCopy"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_customer_task_copy"
                ],
                "description": "update the FortuneCustomerTaskCopy",
                "operationId": "FortuneCustomerTaskCopyController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerTaskCopy content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerTaskCopy"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerTaskCopy"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_customer_task_copy"
                ],
                "description": "delete the FortuneCustomerTaskCopy",
                "operationId": "FortuneCustomerTaskCopyController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_customer_wealth_planne/": {
            "get": {
                "tags": [
                    "fortune_customer_wealth_planne"
                ],
                "description": "get FortuneCustomerWealthPlanne",
                "operationId": "FortuneCustomerWealthPlanneController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerWealthPlanne"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_customer_wealth_planne"
                ],
                "description": "create FortuneCustomerWealthPlanne",
                "operationId": "FortuneCustomerWealthPlanneController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerWealthPlanne content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerWealthPlanne"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneCustomerWealthPlanne"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_customer_wealth_planne/{id}": {
            "get": {
                "tags": [
                    "fortune_customer_wealth_planne"
                ],
                "description": "get FortuneCustomerWealthPlanne by id",
                "operationId": "FortuneCustomerWealthPlanneController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerWealthPlanne"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_customer_wealth_planne"
                ],
                "description": "update the FortuneCustomerWealthPlanne",
                "operationId": "FortuneCustomerWealthPlanneController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerWealthPlanne content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerWealthPlanne"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerWealthPlanne"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_customer_wealth_planne"
                ],
                "description": "delete the FortuneCustomerWealthPlanne",
                "operationId": "FortuneCustomerWealthPlanneController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_customer_wealth_planne_allot_record/": {
            "get": {
                "tags": [
                    "fortune_customer_wealth_planne_allot_record"
                ],
                "description": "get FortuneCustomerWealthPlanneAllotRecord",
                "operationId": "FortuneCustomerWealthPlanneAllotRecordController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerWealthPlanneAllotRecord"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_customer_wealth_planne_allot_record"
                ],
                "description": "create FortuneCustomerWealthPlanneAllotRecord",
                "operationId": "FortuneCustomerWealthPlanneAllotRecordController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerWealthPlanneAllotRecord content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerWealthPlanneAllotRecord"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneCustomerWealthPlanneAllotRecord"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_customer_wealth_planne_allot_record/{id}": {
            "get": {
                "tags": [
                    "fortune_customer_wealth_planne_allot_record"
                ],
                "description": "get FortuneCustomerWealthPlanneAllotRecord by id",
                "operationId": "FortuneCustomerWealthPlanneAllotRecordController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerWealthPlanneAllotRecord"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_customer_wealth_planne_allot_record"
                ],
                "description": "update the FortuneCustomerWealthPlanneAllotRecord",
                "operationId": "FortuneCustomerWealthPlanneAllotRecordController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomerWealthPlanneAllotRecord content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerWealthPlanneAllotRecord"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomerWealthPlanneAllotRecord"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_customer_wealth_planne_allot_record"
                ],
                "description": "delete the FortuneCustomerWealthPlanneAllotRecord",
                "operationId": "FortuneCustomerWealthPlanneAllotRecordController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_customers/": {
            "get": {
                "tags": [
                    "fortune_customers"
                ],
                "description": "get FortuneCustomers",
                "operationId": "FortuneCustomersController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomers"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_customers"
                ],
                "description": "create FortuneCustomers",
                "operationId": "FortuneCustomersController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomers content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomers"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneCustomers"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_customers/{id}": {
            "get": {
                "tags": [
                    "fortune_customers"
                ],
                "description": "get FortuneCustomers by id",
                "operationId": "FortuneCustomersController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomers"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_customers"
                ],
                "description": "update the FortuneCustomers",
                "operationId": "FortuneCustomersController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomers content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomers"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomers"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_customers"
                ],
                "description": "delete the FortuneCustomers",
                "operationId": "FortuneCustomersController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_customers_address/": {
            "get": {
                "tags": [
                    "fortune_customers_address"
                ],
                "description": "get FortuneCustomersAddress",
                "operationId": "FortuneCustomersAddressController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomersAddress"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_customers_address"
                ],
                "description": "create FortuneCustomersAddress",
                "operationId": "FortuneCustomersAddressController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomersAddress content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomersAddress"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneCustomersAddress"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_customers_address/{id}": {
            "get": {
                "tags": [
                    "fortune_customers_address"
                ],
                "description": "get FortuneCustomersAddress by id",
                "operationId": "FortuneCustomersAddressController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomersAddress"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_customers_address"
                ],
                "description": "update the FortuneCustomersAddress",
                "operationId": "FortuneCustomersAddressController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomersAddress content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomersAddress"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomersAddress"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_customers_address"
                ],
                "description": "delete the FortuneCustomersAddress",
                "operationId": "FortuneCustomersAddressController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_customers_copy/": {
            "get": {
                "tags": [
                    "fortune_customers_copy"
                ],
                "description": "get FortuneCustomersCopy",
                "operationId": "FortuneCustomersCopyController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomersCopy"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_customers_copy"
                ],
                "description": "create FortuneCustomersCopy",
                "operationId": "FortuneCustomersCopyController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomersCopy content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomersCopy"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneCustomersCopy"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_customers_copy/{id}": {
            "get": {
                "tags": [
                    "fortune_customers_copy"
                ],
                "description": "get FortuneCustomersCopy by id",
                "operationId": "FortuneCustomersCopyController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomersCopy"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_customers_copy"
                ],
                "description": "update the FortuneCustomersCopy",
                "operationId": "FortuneCustomersCopyController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomersCopy content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomersCopy"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomersCopy"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_customers_copy"
                ],
                "description": "delete the FortuneCustomersCopy",
                "operationId": "FortuneCustomersCopyController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_customers_copy20180718/": {
            "get": {
                "tags": [
                    "fortune_customers_copy20180718"
                ],
                "description": "get FortuneCustomersCopy20180718",
                "operationId": "FortuneCustomersCopy20180718Controller.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomersCopy20180718"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_customers_copy20180718"
                ],
                "description": "create FortuneCustomersCopy20180718",
                "operationId": "FortuneCustomersCopy20180718Controller.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomersCopy20180718 content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomersCopy20180718"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneCustomersCopy20180718"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_customers_copy20180718/{id}": {
            "get": {
                "tags": [
                    "fortune_customers_copy20180718"
                ],
                "description": "get FortuneCustomersCopy20180718 by id",
                "operationId": "FortuneCustomersCopy20180718Controller.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomersCopy20180718"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_customers_copy20180718"
                ],
                "description": "update the FortuneCustomersCopy20180718",
                "operationId": "FortuneCustomersCopy20180718Controller.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomersCopy20180718 content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomersCopy20180718"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomersCopy20180718"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_customers_copy20180718"
                ],
                "description": "delete the FortuneCustomersCopy20180718",
                "operationId": "FortuneCustomersCopy20180718Controller.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_customers_cstm/": {
            "get": {
                "tags": [
                    "fortune_customers_cstm"
                ],
                "description": "get FortuneCustomersCstm",
                "operationId": "FortuneCustomersCstmController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomersCstm"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_customers_cstm"
                ],
                "description": "create FortuneCustomersCstm",
                "operationId": "FortuneCustomersCstmController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomersCstm content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomersCstm"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneCustomersCstm"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_customers_cstm/{id}": {
            "get": {
                "tags": [
                    "fortune_customers_cstm"
                ],
                "description": "get FortuneCustomersCstm by id",
                "operationId": "FortuneCustomersCstmController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomersCstm"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_customers_cstm"
                ],
                "description": "update the FortuneCustomersCstm",
                "operationId": "FortuneCustomersCstmController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomersCstm content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomersCstm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomersCstm"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_customers_cstm"
                ],
                "description": "delete the FortuneCustomersCstm",
                "operationId": "FortuneCustomersCstmController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_customers_tools/": {
            "get": {
                "tags": [
                    "fortune_customers_tools"
                ],
                "description": "get FortuneCustomersTools",
                "operationId": "FortuneCustomersToolsController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomersTools"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_customers_tools"
                ],
                "description": "create FortuneCustomersTools",
                "operationId": "FortuneCustomersToolsController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomersTools content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomersTools"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneCustomersTools"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_customers_tools/{id}": {
            "get": {
                "tags": [
                    "fortune_customers_tools"
                ],
                "description": "get FortuneCustomersTools by id",
                "operationId": "FortuneCustomersToolsController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomersTools"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_customers_tools"
                ],
                "description": "update the FortuneCustomersTools",
                "operationId": "FortuneCustomersToolsController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomersTools content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomersTools"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomersTools"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_customers_tools"
                ],
                "description": "delete the FortuneCustomersTools",
                "operationId": "FortuneCustomersToolsController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_customers_xxx/": {
            "get": {
                "tags": [
                    "fortune_customers_xxx"
                ],
                "description": "get FortuneCustomersXxx",
                "operationId": "FortuneCustomersXxxController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomersXxx"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_customers_xxx"
                ],
                "description": "create FortuneCustomersXxx",
                "operationId": "FortuneCustomersXxxController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomersXxx content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomersXxx"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneCustomersXxx"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_customers_xxx/{id}": {
            "get": {
                "tags": [
                    "fortune_customers_xxx"
                ],
                "description": "get FortuneCustomersXxx by id",
                "operationId": "FortuneCustomersXxxController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomersXxx"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_customers_xxx"
                ],
                "description": "update the FortuneCustomersXxx",
                "operationId": "FortuneCustomersXxxController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomersXxx content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomersXxx"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomersXxx"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_customers_xxx"
                ],
                "description": "delete the FortuneCustomersXxx",
                "operationId": "FortuneCustomersXxxController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_customize_subscribe/": {
            "get": {
                "tags": [
                    "fortune_customize_subscribe"
                ],
                "description": "get FortuneCustomizeSubscribe",
                "operationId": "FortuneCustomizeSubscribeController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomizeSubscribe"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_customize_subscribe"
                ],
                "description": "create FortuneCustomizeSubscribe",
                "operationId": "FortuneCustomizeSubscribeController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomizeSubscribe content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomizeSubscribe"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneCustomizeSubscribe"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_customize_subscribe/{id}": {
            "get": {
                "tags": [
                    "fortune_customize_subscribe"
                ],
                "description": "get FortuneCustomizeSubscribe by id",
                "operationId": "FortuneCustomizeSubscribeController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomizeSubscribe"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_customize_subscribe"
                ],
                "description": "update the FortuneCustomizeSubscribe",
                "operationId": "FortuneCustomizeSubscribeController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomizeSubscribe content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomizeSubscribe"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomizeSubscribe"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_customize_subscribe"
                ],
                "description": "delete the FortuneCustomizeSubscribe",
                "operationId": "FortuneCustomizeSubscribeController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_customize_subscribe_allot_record/": {
            "get": {
                "tags": [
                    "fortune_customize_subscribe_allot_record"
                ],
                "description": "get FortuneCustomizeSubscribeAllotRecord",
                "operationId": "FortuneCustomizeSubscribeAllotRecordController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomizeSubscribeAllotRecord"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_customize_subscribe_allot_record"
                ],
                "description": "create FortuneCustomizeSubscribeAllotRecord",
                "operationId": "FortuneCustomizeSubscribeAllotRecordController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomizeSubscribeAllotRecord content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomizeSubscribeAllotRecord"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneCustomizeSubscribeAllotRecord"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_customize_subscribe_allot_record/{id}": {
            "get": {
                "tags": [
                    "fortune_customize_subscribe_allot_record"
                ],
                "description": "get FortuneCustomizeSubscribeAllotRecord by id",
                "operationId": "FortuneCustomizeSubscribeAllotRecordController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomizeSubscribeAllotRecord"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_customize_subscribe_allot_record"
                ],
                "description": "update the FortuneCustomizeSubscribeAllotRecord",
                "operationId": "FortuneCustomizeSubscribeAllotRecordController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneCustomizeSubscribeAllotRecord content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomizeSubscribeAllotRecord"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneCustomizeSubscribeAllotRecord"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_customize_subscribe_allot_record"
                ],
                "description": "delete the FortuneCustomizeSubscribeAllotRecord",
                "operationId": "FortuneCustomizeSubscribeAllotRecordController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_evaluation_history/": {
            "get": {
                "tags": [
                    "fortune_evaluation_history"
                ],
                "description": "get FortuneEvaluationHistory",
                "operationId": "FortuneEvaluationHistoryController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneEvaluationHistory"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_evaluation_history"
                ],
                "description": "create FortuneEvaluationHistory",
                "operationId": "FortuneEvaluationHistoryController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneEvaluationHistory content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneEvaluationHistory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneEvaluationHistory"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_evaluation_history/{id}": {
            "get": {
                "tags": [
                    "fortune_evaluation_history"
                ],
                "description": "get FortuneEvaluationHistory by id",
                "operationId": "FortuneEvaluationHistoryController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneEvaluationHistory"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_evaluation_history"
                ],
                "description": "update the FortuneEvaluationHistory",
                "operationId": "FortuneEvaluationHistoryController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneEvaluationHistory content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneEvaluationHistory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneEvaluationHistory"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_evaluation_history"
                ],
                "description": "delete the FortuneEvaluationHistory",
                "operationId": "FortuneEvaluationHistoryController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_evaluation_new/": {
            "get": {
                "tags": [
                    "fortune_evaluation_new"
                ],
                "description": "get FortuneEvaluationNew",
                "operationId": "FortuneEvaluationNewController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneEvaluationNew"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_evaluation_new"
                ],
                "description": "create FortuneEvaluationNew",
                "operationId": "FortuneEvaluationNewController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneEvaluationNew content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneEvaluationNew"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneEvaluationNew"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_evaluation_new/{id}": {
            "get": {
                "tags": [
                    "fortune_evaluation_new"
                ],
                "description": "get FortuneEvaluationNew by id",
                "operationId": "FortuneEvaluationNewController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneEvaluationNew"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_evaluation_new"
                ],
                "description": "update the FortuneEvaluationNew",
                "operationId": "FortuneEvaluationNewController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneEvaluationNew content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneEvaluationNew"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneEvaluationNew"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_evaluation_new"
                ],
                "description": "delete the FortuneEvaluationNew",
                "operationId": "FortuneEvaluationNewController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_group/": {
            "get": {
                "tags": [
                    "fortune_group"
                ],
                "description": "get FortuneGroup",
                "operationId": "FortuneGroupController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneGroup"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_group"
                ],
                "description": "create FortuneGroup",
                "operationId": "FortuneGroupController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneGroup content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneGroup"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneGroup"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_group/{id}": {
            "get": {
                "tags": [
                    "fortune_group"
                ],
                "description": "get FortuneGroup by id",
                "operationId": "FortuneGroupController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneGroup"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_group"
                ],
                "description": "update the FortuneGroup",
                "operationId": "FortuneGroupController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneGroup content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneGroup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneGroup"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_group"
                ],
                "description": "delete the FortuneGroup",
                "operationId": "FortuneGroupController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_ident_sign/": {
            "get": {
                "tags": [
                    "fortune_ident_sign"
                ],
                "description": "get FortuneIdentSign",
                "operationId": "FortuneIdentSignController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneIdentSign"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_ident_sign"
                ],
                "description": "create FortuneIdentSign",
                "operationId": "FortuneIdentSignController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneIdentSign content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneIdentSign"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneIdentSign"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_ident_sign/{id}": {
            "get": {
                "tags": [
                    "fortune_ident_sign"
                ],
                "description": "get FortuneIdentSign by id",
                "operationId": "FortuneIdentSignController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneIdentSign"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_ident_sign"
                ],
                "description": "update the FortuneIdentSign",
                "operationId": "FortuneIdentSignController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneIdentSign content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneIdentSign"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneIdentSign"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_ident_sign"
                ],
                "description": "delete the FortuneIdentSign",
                "operationId": "FortuneIdentSignController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_intl_account_info/": {
            "get": {
                "tags": [
                    "fortune_intl_account_info"
                ],
                "description": "get FortuneIntlAccountInfo",
                "operationId": "FortuneIntlAccountInfoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneIntlAccountInfo"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_intl_account_info"
                ],
                "description": "create FortuneIntlAccountInfo",
                "operationId": "FortuneIntlAccountInfoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneIntlAccountInfo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneIntlAccountInfo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneIntlAccountInfo"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_intl_account_info/{id}": {
            "get": {
                "tags": [
                    "fortune_intl_account_info"
                ],
                "description": "get FortuneIntlAccountInfo by id",
                "operationId": "FortuneIntlAccountInfoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneIntlAccountInfo"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_intl_account_info"
                ],
                "description": "update the FortuneIntlAccountInfo",
                "operationId": "FortuneIntlAccountInfoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneIntlAccountInfo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneIntlAccountInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneIntlAccountInfo"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_intl_account_info"
                ],
                "description": "delete the FortuneIntlAccountInfo",
                "operationId": "FortuneIntlAccountInfoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_loan/": {
            "get": {
                "tags": [
                    "fortune_loan"
                ],
                "description": "get FortuneLoan",
                "operationId": "FortuneLoanController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoan"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_loan"
                ],
                "description": "create FortuneLoan",
                "operationId": "FortuneLoanController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneLoan content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoan"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneLoan"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_loan/{id}": {
            "get": {
                "tags": [
                    "fortune_loan"
                ],
                "description": "get FortuneLoan by id",
                "operationId": "FortuneLoanController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoan"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_loan"
                ],
                "description": "update the FortuneLoan",
                "operationId": "FortuneLoanController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneLoan content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoan"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoan"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_loan"
                ],
                "description": "delete the FortuneLoan",
                "operationId": "FortuneLoanController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_loan_achievement_datum/": {
            "get": {
                "tags": [
                    "fortune_loan_achievement_datum"
                ],
                "description": "get FortuneLoanAchievementDatum",
                "operationId": "FortuneLoanAchievementDatumController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanAchievementDatum"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_loan_achievement_datum"
                ],
                "description": "create FortuneLoanAchievementDatum",
                "operationId": "FortuneLoanAchievementDatumController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneLoanAchievementDatum content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanAchievementDatum"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneLoanAchievementDatum"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_loan_achievement_datum/{id}": {
            "get": {
                "tags": [
                    "fortune_loan_achievement_datum"
                ],
                "description": "get FortuneLoanAchievementDatum by id",
                "operationId": "FortuneLoanAchievementDatumController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanAchievementDatum"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_loan_achievement_datum"
                ],
                "description": "update the FortuneLoanAchievementDatum",
                "operationId": "FortuneLoanAchievementDatumController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneLoanAchievementDatum content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanAchievementDatum"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanAchievementDatum"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_loan_achievement_datum"
                ],
                "description": "delete the FortuneLoanAchievementDatum",
                "operationId": "FortuneLoanAchievementDatumController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_loan_attachment_info/": {
            "get": {
                "tags": [
                    "fortune_loan_attachment_info"
                ],
                "description": "get FortuneLoanAttachmentInfo",
                "operationId": "FortuneLoanAttachmentInfoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanAttachmentInfo"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_loan_attachment_info"
                ],
                "description": "create FortuneLoanAttachmentInfo",
                "operationId": "FortuneLoanAttachmentInfoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneLoanAttachmentInfo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanAttachmentInfo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneLoanAttachmentInfo"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_loan_attachment_info/{id}": {
            "get": {
                "tags": [
                    "fortune_loan_attachment_info"
                ],
                "description": "get FortuneLoanAttachmentInfo by id",
                "operationId": "FortuneLoanAttachmentInfoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanAttachmentInfo"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_loan_attachment_info"
                ],
                "description": "update the FortuneLoanAttachmentInfo",
                "operationId": "FortuneLoanAttachmentInfoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneLoanAttachmentInfo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanAttachmentInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanAttachmentInfo"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_loan_attachment_info"
                ],
                "description": "delete the FortuneLoanAttachmentInfo",
                "operationId": "FortuneLoanAttachmentInfoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_loan_bak/": {
            "get": {
                "tags": [
                    "fortune_loan_bak"
                ],
                "description": "get FortuneLoanBak",
                "operationId": "FortuneLoanBakController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanBak"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_loan_bak"
                ],
                "description": "create FortuneLoanBak",
                "operationId": "FortuneLoanBakController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneLoanBak content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanBak"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneLoanBak"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_loan_bak/{id}": {
            "get": {
                "tags": [
                    "fortune_loan_bak"
                ],
                "description": "get FortuneLoanBak by id",
                "operationId": "FortuneLoanBakController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanBak"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_loan_bak"
                ],
                "description": "update the FortuneLoanBak",
                "operationId": "FortuneLoanBakController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneLoanBak content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanBak"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanBak"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_loan_bak"
                ],
                "description": "delete the FortuneLoanBak",
                "operationId": "FortuneLoanBakController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_loan_bak_20180428/": {
            "get": {
                "tags": [
                    "fortune_loan_bak_20180428"
                ],
                "description": "get FortuneLoanBak20180428",
                "operationId": "FortuneLoanBak20180428Controller.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanBak20180428"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_loan_bak_20180428"
                ],
                "description": "create FortuneLoanBak20180428",
                "operationId": "FortuneLoanBak20180428Controller.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneLoanBak20180428 content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanBak20180428"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneLoanBak20180428"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_loan_bak_20180428/{id}": {
            "get": {
                "tags": [
                    "fortune_loan_bak_20180428"
                ],
                "description": "get FortuneLoanBak20180428 by id",
                "operationId": "FortuneLoanBak20180428Controller.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanBak20180428"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_loan_bak_20180428"
                ],
                "description": "update the FortuneLoanBak20180428",
                "operationId": "FortuneLoanBak20180428Controller.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneLoanBak20180428 content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanBak20180428"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanBak20180428"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_loan_bak_20180428"
                ],
                "description": "delete the FortuneLoanBak20180428",
                "operationId": "FortuneLoanBak20180428Controller.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_loan_bak_copy/": {
            "get": {
                "tags": [
                    "fortune_loan_bak_copy"
                ],
                "description": "get FortuneLoanBakCopy",
                "operationId": "FortuneLoanBakCopyController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanBakCopy"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_loan_bak_copy"
                ],
                "description": "create FortuneLoanBakCopy",
                "operationId": "FortuneLoanBakCopyController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneLoanBakCopy content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanBakCopy"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneLoanBakCopy"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_loan_bak_copy/{id}": {
            "get": {
                "tags": [
                    "fortune_loan_bak_copy"
                ],
                "description": "get FortuneLoanBakCopy by id",
                "operationId": "FortuneLoanBakCopyController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanBakCopy"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_loan_bak_copy"
                ],
                "description": "update the FortuneLoanBakCopy",
                "operationId": "FortuneLoanBakCopyController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneLoanBakCopy content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanBakCopy"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanBakCopy"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_loan_bak_copy"
                ],
                "description": "delete the FortuneLoanBakCopy",
                "operationId": "FortuneLoanBakCopyController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_loan_contract_queue/": {
            "get": {
                "tags": [
                    "fortune_loan_contract_queue"
                ],
                "description": "get FortuneLoanContractQueue",
                "operationId": "FortuneLoanContractQueueController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanContractQueue"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_loan_contract_queue"
                ],
                "description": "create FortuneLoanContractQueue",
                "operationId": "FortuneLoanContractQueueController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneLoanContractQueue content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanContractQueue"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneLoanContractQueue"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_loan_contract_queue/{id}": {
            "get": {
                "tags": [
                    "fortune_loan_contract_queue"
                ],
                "description": "get FortuneLoanContractQueue by id",
                "operationId": "FortuneLoanContractQueueController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanContractQueue"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_loan_contract_queue"
                ],
                "description": "update the FortuneLoanContractQueue",
                "operationId": "FortuneLoanContractQueueController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneLoanContractQueue content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanContractQueue"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanContractQueue"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_loan_contract_queue"
                ],
                "description": "delete the FortuneLoanContractQueue",
                "operationId": "FortuneLoanContractQueueController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_loan_copy11111/": {
            "get": {
                "tags": [
                    "fortune_loan_copy11111"
                ],
                "description": "get FortuneLoanCopy11111",
                "operationId": "FortuneLoanCopy11111Controller.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanCopy11111"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_loan_copy11111"
                ],
                "description": "create FortuneLoanCopy11111",
                "operationId": "FortuneLoanCopy11111Controller.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneLoanCopy11111 content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanCopy11111"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneLoanCopy11111"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_loan_copy11111/{id}": {
            "get": {
                "tags": [
                    "fortune_loan_copy11111"
                ],
                "description": "get FortuneLoanCopy11111 by id",
                "operationId": "FortuneLoanCopy11111Controller.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanCopy11111"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_loan_copy11111"
                ],
                "description": "update the FortuneLoanCopy11111",
                "operationId": "FortuneLoanCopy11111Controller.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneLoanCopy11111 content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanCopy11111"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanCopy11111"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_loan_copy11111"
                ],
                "description": "delete the FortuneLoanCopy11111",
                "operationId": "FortuneLoanCopy11111Controller.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_loan_cstm/": {
            "get": {
                "tags": [
                    "fortune_loan_cstm"
                ],
                "description": "get FortuneLoanCstm",
                "operationId": "FortuneLoanCstmController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanCstm"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_loan_cstm"
                ],
                "description": "create FortuneLoanCstm",
                "operationId": "FortuneLoanCstmController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneLoanCstm content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanCstm"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneLoanCstm"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_loan_cstm/{id}": {
            "get": {
                "tags": [
                    "fortune_loan_cstm"
                ],
                "description": "get FortuneLoanCstm by id",
                "operationId": "FortuneLoanCstmController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanCstm"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_loan_cstm"
                ],
                "description": "update the FortuneLoanCstm",
                "operationId": "FortuneLoanCstmController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneLoanCstm content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanCstm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanCstm"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_loan_cstm"
                ],
                "description": "delete the FortuneLoanCstm",
                "operationId": "FortuneLoanCstmController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_loan_history/": {
            "get": {
                "tags": [
                    "fortune_loan_history"
                ],
                "description": "get FortuneLoanHistory",
                "operationId": "FortuneLoanHistoryController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanHistory"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_loan_history"
                ],
                "description": "create FortuneLoanHistory",
                "operationId": "FortuneLoanHistoryController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneLoanHistory content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanHistory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneLoanHistory"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_loan_history/{id}": {
            "get": {
                "tags": [
                    "fortune_loan_history"
                ],
                "description": "get FortuneLoanHistory by id",
                "operationId": "FortuneLoanHistoryController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanHistory"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_loan_history"
                ],
                "description": "update the FortuneLoanHistory",
                "operationId": "FortuneLoanHistoryController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneLoanHistory content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanHistory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanHistory"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_loan_history"
                ],
                "description": "delete the FortuneLoanHistory",
                "operationId": "FortuneLoanHistoryController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_loan_period/": {
            "get": {
                "tags": [
                    "fortune_loan_period"
                ],
                "description": "get FortuneLoanPeriod",
                "operationId": "FortuneLoanPeriodController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanPeriod"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_loan_period"
                ],
                "description": "create FortuneLoanPeriod",
                "operationId": "FortuneLoanPeriodController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneLoanPeriod content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanPeriod"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneLoanPeriod"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_loan_period/{id}": {
            "get": {
                "tags": [
                    "fortune_loan_period"
                ],
                "description": "get FortuneLoanPeriod by id",
                "operationId": "FortuneLoanPeriodController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanPeriod"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_loan_period"
                ],
                "description": "update the FortuneLoanPeriod",
                "operationId": "FortuneLoanPeriodController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneLoanPeriod content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanPeriod"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanPeriod"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_loan_period"
                ],
                "description": "delete the FortuneLoanPeriod",
                "operationId": "FortuneLoanPeriodController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_loan_period_bak/": {
            "get": {
                "tags": [
                    "fortune_loan_period_bak"
                ],
                "description": "get FortuneLoanPeriodBak",
                "operationId": "FortuneLoanPeriodBakController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanPeriodBak"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_loan_period_bak"
                ],
                "description": "create FortuneLoanPeriodBak",
                "operationId": "FortuneLoanPeriodBakController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneLoanPeriodBak content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanPeriodBak"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneLoanPeriodBak"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_loan_period_bak/{id}": {
            "get": {
                "tags": [
                    "fortune_loan_period_bak"
                ],
                "description": "get FortuneLoanPeriodBak by id",
                "operationId": "FortuneLoanPeriodBakController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanPeriodBak"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_loan_period_bak"
                ],
                "description": "update the FortuneLoanPeriodBak",
                "operationId": "FortuneLoanPeriodBakController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneLoanPeriodBak content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanPeriodBak"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanPeriodBak"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_loan_period_bak"
                ],
                "description": "delete the FortuneLoanPeriodBak",
                "operationId": "FortuneLoanPeriodBakController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_loan_period_calculate_info/": {
            "get": {
                "tags": [
                    "fortune_loan_period_calculate_info"
                ],
                "description": "get FortuneLoanPeriodCalculateInfo",
                "operationId": "FortuneLoanPeriodCalculateInfoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanPeriodCalculateInfo"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_loan_period_calculate_info"
                ],
                "description": "create FortuneLoanPeriodCalculateInfo",
                "operationId": "FortuneLoanPeriodCalculateInfoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneLoanPeriodCalculateInfo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanPeriodCalculateInfo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneLoanPeriodCalculateInfo"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_loan_period_calculate_info/{id}": {
            "get": {
                "tags": [
                    "fortune_loan_period_calculate_info"
                ],
                "description": "get FortuneLoanPeriodCalculateInfo by id",
                "operationId": "FortuneLoanPeriodCalculateInfoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanPeriodCalculateInfo"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_loan_period_calculate_info"
                ],
                "description": "update the FortuneLoanPeriodCalculateInfo",
                "operationId": "FortuneLoanPeriodCalculateInfoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneLoanPeriodCalculateInfo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanPeriodCalculateInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanPeriodCalculateInfo"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_loan_period_calculate_info"
                ],
                "description": "delete the FortuneLoanPeriodCalculateInfo",
                "operationId": "FortuneLoanPeriodCalculateInfoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_loan_period_calculate_info_bak/": {
            "get": {
                "tags": [
                    "fortune_loan_period_calculate_info_bak"
                ],
                "description": "get FortuneLoanPeriodCalculateInfoBak",
                "operationId": "FortuneLoanPeriodCalculateInfoBakController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanPeriodCalculateInfoBak"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_loan_period_calculate_info_bak"
                ],
                "description": "create FortuneLoanPeriodCalculateInfoBak",
                "operationId": "FortuneLoanPeriodCalculateInfoBakController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneLoanPeriodCalculateInfoBak content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanPeriodCalculateInfoBak"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneLoanPeriodCalculateInfoBak"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_loan_period_calculate_info_bak/{id}": {
            "get": {
                "tags": [
                    "fortune_loan_period_calculate_info_bak"
                ],
                "description": "get FortuneLoanPeriodCalculateInfoBak by id",
                "operationId": "FortuneLoanPeriodCalculateInfoBakController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanPeriodCalculateInfoBak"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_loan_period_calculate_info_bak"
                ],
                "description": "update the FortuneLoanPeriodCalculateInfoBak",
                "operationId": "FortuneLoanPeriodCalculateInfoBakController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneLoanPeriodCalculateInfoBak content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanPeriodCalculateInfoBak"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanPeriodCalculateInfoBak"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_loan_period_calculate_info_bak"
                ],
                "description": "delete the FortuneLoanPeriodCalculateInfoBak",
                "operationId": "FortuneLoanPeriodCalculateInfoBakController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_loan_reorder_manage/": {
            "get": {
                "tags": [
                    "fortune_loan_reorder_manage"
                ],
                "description": "get FortuneLoanReorderManage",
                "operationId": "FortuneLoanReorderManageController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanReorderManage"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_loan_reorder_manage"
                ],
                "description": "create FortuneLoanReorderManage",
                "operationId": "FortuneLoanReorderManageController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneLoanReorderManage content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanReorderManage"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneLoanReorderManage"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_loan_reorder_manage/{id}": {
            "get": {
                "tags": [
                    "fortune_loan_reorder_manage"
                ],
                "description": "get FortuneLoanReorderManage by id",
                "operationId": "FortuneLoanReorderManageController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanReorderManage"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_loan_reorder_manage"
                ],
                "description": "update the FortuneLoanReorderManage",
                "operationId": "FortuneLoanReorderManageController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneLoanReorderManage content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanReorderManage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLoanReorderManage"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_loan_reorder_manage"
                ],
                "description": "delete the FortuneLoanReorderManage",
                "operationId": "FortuneLoanReorderManageController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_log_oversea_join_golden/": {
            "get": {
                "tags": [
                    "fortune_log_oversea_join_golden"
                ],
                "description": "get FortuneLogOverseaJoinGolden",
                "operationId": "FortuneLogOverseaJoinGoldenController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLogOverseaJoinGolden"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_log_oversea_join_golden"
                ],
                "description": "create FortuneLogOverseaJoinGolden",
                "operationId": "FortuneLogOverseaJoinGoldenController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneLogOverseaJoinGolden content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLogOverseaJoinGolden"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneLogOverseaJoinGolden"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_log_oversea_join_golden/{id}": {
            "get": {
                "tags": [
                    "fortune_log_oversea_join_golden"
                ],
                "description": "get FortuneLogOverseaJoinGolden by id",
                "operationId": "FortuneLogOverseaJoinGoldenController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLogOverseaJoinGolden"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_log_oversea_join_golden"
                ],
                "description": "update the FortuneLogOverseaJoinGolden",
                "operationId": "FortuneLogOverseaJoinGoldenController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneLogOverseaJoinGolden content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLogOverseaJoinGolden"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLogOverseaJoinGolden"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_log_oversea_join_golden"
                ],
                "description": "delete the FortuneLogOverseaJoinGolden",
                "operationId": "FortuneLogOverseaJoinGoldenController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_log_oversea_join_loan/": {
            "get": {
                "tags": [
                    "fortune_log_oversea_join_loan"
                ],
                "description": "get FortuneLogOverseaJoinLoan",
                "operationId": "FortuneLogOverseaJoinLoanController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLogOverseaJoinLoan"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_log_oversea_join_loan"
                ],
                "description": "create FortuneLogOverseaJoinLoan",
                "operationId": "FortuneLogOverseaJoinLoanController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneLogOverseaJoinLoan content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLogOverseaJoinLoan"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneLogOverseaJoinLoan"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_log_oversea_join_loan/{id}": {
            "get": {
                "tags": [
                    "fortune_log_oversea_join_loan"
                ],
                "description": "get FortuneLogOverseaJoinLoan by id",
                "operationId": "FortuneLogOverseaJoinLoanController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLogOverseaJoinLoan"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_log_oversea_join_loan"
                ],
                "description": "update the FortuneLogOverseaJoinLoan",
                "operationId": "FortuneLogOverseaJoinLoanController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneLogOverseaJoinLoan content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLogOverseaJoinLoan"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLogOverseaJoinLoan"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_log_oversea_join_loan"
                ],
                "description": "delete the FortuneLogOverseaJoinLoan",
                "operationId": "FortuneLogOverseaJoinLoanController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_log_oversea_reserve/": {
            "get": {
                "tags": [
                    "fortune_log_oversea_reserve"
                ],
                "description": "get FortuneLogOverseaReserve",
                "operationId": "FortuneLogOverseaReserveController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLogOverseaReserve"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_log_oversea_reserve"
                ],
                "description": "create FortuneLogOverseaReserve",
                "operationId": "FortuneLogOverseaReserveController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneLogOverseaReserve content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLogOverseaReserve"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneLogOverseaReserve"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_log_oversea_reserve/{id}": {
            "get": {
                "tags": [
                    "fortune_log_oversea_reserve"
                ],
                "description": "get FortuneLogOverseaReserve by id",
                "operationId": "FortuneLogOverseaReserveController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLogOverseaReserve"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_log_oversea_reserve"
                ],
                "description": "update the FortuneLogOverseaReserve",
                "operationId": "FortuneLogOverseaReserveController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneLogOverseaReserve content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLogOverseaReserve"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneLogOverseaReserve"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_log_oversea_reserve"
                ],
                "description": "delete the FortuneLogOverseaReserve",
                "operationId": "FortuneLogOverseaReserveController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_mail/": {
            "get": {
                "tags": [
                    "fortune_mail"
                ],
                "description": "get FortuneMail",
                "operationId": "FortuneMailController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneMail"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_mail"
                ],
                "description": "create FortuneMail",
                "operationId": "FortuneMailController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneMail content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneMail"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneMail"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_mail/{id}": {
            "get": {
                "tags": [
                    "fortune_mail"
                ],
                "description": "get FortuneMail by id",
                "operationId": "FortuneMailController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneMail"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_mail"
                ],
                "description": "update the FortuneMail",
                "operationId": "FortuneMailController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneMail content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneMail"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneMail"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_mail"
                ],
                "description": "delete the FortuneMail",
                "operationId": "FortuneMailController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_market_bind_workorder/": {
            "get": {
                "tags": [
                    "fortune_market_bind_workorder"
                ],
                "description": "get FortuneMarketBindWorkorder",
                "operationId": "FortuneMarketBindWorkorderController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneMarketBindWorkorder"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_market_bind_workorder"
                ],
                "description": "create FortuneMarketBindWorkorder",
                "operationId": "FortuneMarketBindWorkorderController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneMarketBindWorkorder content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneMarketBindWorkorder"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneMarketBindWorkorder"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_market_bind_workorder/{id}": {
            "get": {
                "tags": [
                    "fortune_market_bind_workorder"
                ],
                "description": "get FortuneMarketBindWorkorder by id",
                "operationId": "FortuneMarketBindWorkorderController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneMarketBindWorkorder"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_market_bind_workorder"
                ],
                "description": "update the FortuneMarketBindWorkorder",
                "operationId": "FortuneMarketBindWorkorderController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneMarketBindWorkorder content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneMarketBindWorkorder"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneMarketBindWorkorder"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_market_bind_workorder"
                ],
                "description": "delete the FortuneMarketBindWorkorder",
                "operationId": "FortuneMarketBindWorkorderController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_market_bind_workorder_report/": {
            "get": {
                "tags": [
                    "fortune_market_bind_workorder_report"
                ],
                "description": "get FortuneMarketBindWorkorderReport",
                "operationId": "FortuneMarketBindWorkorderReportController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneMarketBindWorkorderReport"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_market_bind_workorder_report"
                ],
                "description": "create FortuneMarketBindWorkorderReport",
                "operationId": "FortuneMarketBindWorkorderReportController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneMarketBindWorkorderReport content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneMarketBindWorkorderReport"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneMarketBindWorkorderReport"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_market_bind_workorder_report/{id}": {
            "get": {
                "tags": [
                    "fortune_market_bind_workorder_report"
                ],
                "description": "get FortuneMarketBindWorkorderReport by id",
                "operationId": "FortuneMarketBindWorkorderReportController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneMarketBindWorkorderReport"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_market_bind_workorder_report"
                ],
                "description": "update the FortuneMarketBindWorkorderReport",
                "operationId": "FortuneMarketBindWorkorderReportController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneMarketBindWorkorderReport content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneMarketBindWorkorderReport"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneMarketBindWorkorderReport"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_market_bind_workorder_report"
                ],
                "description": "delete the FortuneMarketBindWorkorderReport",
                "operationId": "FortuneMarketBindWorkorderReportController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_market_unbind_workorder/": {
            "get": {
                "tags": [
                    "fortune_market_unbind_workorder"
                ],
                "description": "get FortuneMarketUnbindWorkorder",
                "operationId": "FortuneMarketUnbindWorkorderController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneMarketUnbindWorkorder"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_market_unbind_workorder"
                ],
                "description": "create FortuneMarketUnbindWorkorder",
                "operationId": "FortuneMarketUnbindWorkorderController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneMarketUnbindWorkorder content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneMarketUnbindWorkorder"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneMarketUnbindWorkorder"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_market_unbind_workorder/{id}": {
            "get": {
                "tags": [
                    "fortune_market_unbind_workorder"
                ],
                "description": "get FortuneMarketUnbindWorkorder by id",
                "operationId": "FortuneMarketUnbindWorkorderController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneMarketUnbindWorkorder"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_market_unbind_workorder"
                ],
                "description": "update the FortuneMarketUnbindWorkorder",
                "operationId": "FortuneMarketUnbindWorkorderController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneMarketUnbindWorkorder content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneMarketUnbindWorkorder"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneMarketUnbindWorkorder"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_market_unbind_workorder"
                ],
                "description": "delete the FortuneMarketUnbindWorkorder",
                "operationId": "FortuneMarketUnbindWorkorderController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_market_unbind_workorder_allot_record/": {
            "get": {
                "tags": [
                    "fortune_market_unbind_workorder_allot_record"
                ],
                "description": "get FortuneMarketUnbindWorkorderAllotRecord",
                "operationId": "FortuneMarketUnbindWorkorderAllotRecordController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneMarketUnbindWorkorderAllotRecord"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_market_unbind_workorder_allot_record"
                ],
                "description": "create FortuneMarketUnbindWorkorderAllotRecord",
                "operationId": "FortuneMarketUnbindWorkorderAllotRecordController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneMarketUnbindWorkorderAllotRecord content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneMarketUnbindWorkorderAllotRecord"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneMarketUnbindWorkorderAllotRecord"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_market_unbind_workorder_allot_record/{id}": {
            "get": {
                "tags": [
                    "fortune_market_unbind_workorder_allot_record"
                ],
                "description": "get FortuneMarketUnbindWorkorderAllotRecord by id",
                "operationId": "FortuneMarketUnbindWorkorderAllotRecordController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneMarketUnbindWorkorderAllotRecord"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_market_unbind_workorder_allot_record"
                ],
                "description": "update the FortuneMarketUnbindWorkorderAllotRecord",
                "operationId": "FortuneMarketUnbindWorkorderAllotRecordController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneMarketUnbindWorkorderAllotRecord content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneMarketUnbindWorkorderAllotRecord"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneMarketUnbindWorkorderAllotRecord"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_market_unbind_workorder_allot_record"
                ],
                "description": "delete the FortuneMarketUnbindWorkorderAllotRecord",
                "operationId": "FortuneMarketUnbindWorkorderAllotRecordController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_market_unbind_workorder_report/": {
            "get": {
                "tags": [
                    "fortune_market_unbind_workorder_report"
                ],
                "description": "get FortuneMarketUnbindWorkorderReport",
                "operationId": "FortuneMarketUnbindWorkorderReportController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneMarketUnbindWorkorderReport"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_market_unbind_workorder_report"
                ],
                "description": "create FortuneMarketUnbindWorkorderReport",
                "operationId": "FortuneMarketUnbindWorkorderReportController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneMarketUnbindWorkorderReport content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneMarketUnbindWorkorderReport"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneMarketUnbindWorkorderReport"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_market_unbind_workorder_report/{id}": {
            "get": {
                "tags": [
                    "fortune_market_unbind_workorder_report"
                ],
                "description": "get FortuneMarketUnbindWorkorderReport by id",
                "operationId": "FortuneMarketUnbindWorkorderReportController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneMarketUnbindWorkorderReport"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_market_unbind_workorder_report"
                ],
                "description": "update the FortuneMarketUnbindWorkorderReport",
                "operationId": "FortuneMarketUnbindWorkorderReportController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneMarketUnbindWorkorderReport content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneMarketUnbindWorkorderReport"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneMarketUnbindWorkorderReport"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_market_unbind_workorder_report"
                ],
                "description": "delete the FortuneMarketUnbindWorkorderReport",
                "operationId": "FortuneMarketUnbindWorkorderReportController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_msg/": {
            "get": {
                "tags": [
                    "fortune_msg"
                ],
                "description": "get FortuneMsg",
                "operationId": "FortuneMsgController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneMsg"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_msg"
                ],
                "description": "create FortuneMsg",
                "operationId": "FortuneMsgController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneMsg content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneMsg"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneMsg"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_msg/{id}": {
            "get": {
                "tags": [
                    "fortune_msg"
                ],
                "description": "get FortuneMsg by id",
                "operationId": "FortuneMsgController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneMsg"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_msg"
                ],
                "description": "update the FortuneMsg",
                "operationId": "FortuneMsgController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneMsg content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneMsg"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneMsg"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_msg"
                ],
                "description": "delete the FortuneMsg",
                "operationId": "FortuneMsgController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_msg_sendrecord/": {
            "get": {
                "tags": [
                    "fortune_msg_sendrecord"
                ],
                "description": "get FortuneMsgSendrecord",
                "operationId": "FortuneMsgSendrecordController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneMsgSendrecord"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_msg_sendrecord"
                ],
                "description": "create FortuneMsgSendrecord",
                "operationId": "FortuneMsgSendrecordController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneMsgSendrecord content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneMsgSendrecord"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneMsgSendrecord"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_msg_sendrecord/{id}": {
            "get": {
                "tags": [
                    "fortune_msg_sendrecord"
                ],
                "description": "get FortuneMsgSendrecord by id",
                "operationId": "FortuneMsgSendrecordController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneMsgSendrecord"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_msg_sendrecord"
                ],
                "description": "update the FortuneMsgSendrecord",
                "operationId": "FortuneMsgSendrecordController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneMsgSendrecord content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneMsgSendrecord"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneMsgSendrecord"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_msg_sendrecord"
                ],
                "description": "delete the FortuneMsgSendrecord",
                "operationId": "FortuneMsgSendrecordController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_node/": {
            "get": {
                "tags": [
                    "fortune_node"
                ],
                "description": "get FortuneNode",
                "operationId": "FortuneNodeController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneNode"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_node"
                ],
                "description": "create FortuneNode",
                "operationId": "FortuneNodeController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneNode content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneNode"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneNode"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_node/{id}": {
            "get": {
                "tags": [
                    "fortune_node"
                ],
                "description": "get FortuneNode by id",
                "operationId": "FortuneNodeController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneNode"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_node"
                ],
                "description": "update the FortuneNode",
                "operationId": "FortuneNodeController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneNode content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneNode"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneNode"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_node"
                ],
                "description": "delete the FortuneNode",
                "operationId": "FortuneNodeController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_node_button/": {
            "get": {
                "tags": [
                    "fortune_node_button"
                ],
                "description": "get FortuneNodeButton",
                "operationId": "FortuneNodeButtonController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneNodeButton"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_node_button"
                ],
                "description": "create FortuneNodeButton",
                "operationId": "FortuneNodeButtonController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneNodeButton content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneNodeButton"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneNodeButton"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_node_button/{id}": {
            "get": {
                "tags": [
                    "fortune_node_button"
                ],
                "description": "get FortuneNodeButton by id",
                "operationId": "FortuneNodeButtonController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneNodeButton"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_node_button"
                ],
                "description": "update the FortuneNodeButton",
                "operationId": "FortuneNodeButtonController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneNodeButton content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneNodeButton"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneNodeButton"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_node_button"
                ],
                "description": "delete the FortuneNodeButton",
                "operationId": "FortuneNodeButtonController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_order_detail/": {
            "get": {
                "tags": [
                    "fortune_order_detail"
                ],
                "description": "get FortuneOrderDetail",
                "operationId": "FortuneOrderDetailController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneOrderDetail"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_order_detail"
                ],
                "description": "create FortuneOrderDetail",
                "operationId": "FortuneOrderDetailController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneOrderDetail content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneOrderDetail"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneOrderDetail"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_order_detail/{id}": {
            "get": {
                "tags": [
                    "fortune_order_detail"
                ],
                "description": "get FortuneOrderDetail by id",
                "operationId": "FortuneOrderDetailController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneOrderDetail"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_order_detail"
                ],
                "description": "update the FortuneOrderDetail",
                "operationId": "FortuneOrderDetailController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneOrderDetail content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneOrderDetail"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneOrderDetail"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_order_detail"
                ],
                "description": "delete the FortuneOrderDetail",
                "operationId": "FortuneOrderDetailController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_overseas_register/": {
            "get": {
                "tags": [
                    "fortune_overseas_register"
                ],
                "description": "get FortuneOverseasRegister",
                "operationId": "FortuneOverseasRegisterController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneOverseasRegister"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_overseas_register"
                ],
                "description": "create FortuneOverseasRegister",
                "operationId": "FortuneOverseasRegisterController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneOverseasRegister content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneOverseasRegister"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneOverseasRegister"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_overseas_register/{id}": {
            "get": {
                "tags": [
                    "fortune_overseas_register"
                ],
                "description": "get FortuneOverseasRegister by id",
                "operationId": "FortuneOverseasRegisterController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneOverseasRegister"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_overseas_register"
                ],
                "description": "update the FortuneOverseasRegister",
                "operationId": "FortuneOverseasRegisterController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneOverseasRegister content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneOverseasRegister"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneOverseasRegister"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_overseas_register"
                ],
                "description": "delete the FortuneOverseasRegister",
                "operationId": "FortuneOverseasRegisterController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_pay_report/": {
            "get": {
                "tags": [
                    "fortune_pay_report"
                ],
                "description": "get FortunePayReport",
                "operationId": "FortunePayReportController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortunePayReport"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_pay_report"
                ],
                "description": "create FortunePayReport",
                "operationId": "FortunePayReportController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortunePayReport content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortunePayReport"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortunePayReport"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_pay_report/{id}": {
            "get": {
                "tags": [
                    "fortune_pay_report"
                ],
                "description": "get FortunePayReport by id",
                "operationId": "FortunePayReportController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortunePayReport"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_pay_report"
                ],
                "description": "update the FortunePayReport",
                "operationId": "FortunePayReportController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortunePayReport content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortunePayReport"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortunePayReport"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_pay_report"
                ],
                "description": "delete the FortunePayReport",
                "operationId": "FortunePayReportController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_pay_report_attachment_download_task/": {
            "get": {
                "tags": [
                    "fortune_pay_report_attachment_download_task"
                ],
                "description": "get FortunePayReportAttachmentDownloadTask",
                "operationId": "FortunePayReportAttachmentDownloadTaskController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortunePayReportAttachmentDownloadTask"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_pay_report_attachment_download_task"
                ],
                "description": "create FortunePayReportAttachmentDownloadTask",
                "operationId": "FortunePayReportAttachmentDownloadTaskController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortunePayReportAttachmentDownloadTask content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortunePayReportAttachmentDownloadTask"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortunePayReportAttachmentDownloadTask"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_pay_report_attachment_download_task/{id}": {
            "get": {
                "tags": [
                    "fortune_pay_report_attachment_download_task"
                ],
                "description": "get FortunePayReportAttachmentDownloadTask by id",
                "operationId": "FortunePayReportAttachmentDownloadTaskController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortunePayReportAttachmentDownloadTask"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_pay_report_attachment_download_task"
                ],
                "description": "update the FortunePayReportAttachmentDownloadTask",
                "operationId": "FortunePayReportAttachmentDownloadTaskController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortunePayReportAttachmentDownloadTask content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortunePayReportAttachmentDownloadTask"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortunePayReportAttachmentDownloadTask"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_pay_report_attachment_download_task"
                ],
                "description": "delete the FortunePayReportAttachmentDownloadTask",
                "operationId": "FortunePayReportAttachmentDownloadTaskController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_pay_report_attachment_info/": {
            "get": {
                "tags": [
                    "fortune_pay_report_attachment_info"
                ],
                "description": "get FortunePayReportAttachmentInfo",
                "operationId": "FortunePayReportAttachmentInfoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortunePayReportAttachmentInfo"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_pay_report_attachment_info"
                ],
                "description": "create FortunePayReportAttachmentInfo",
                "operationId": "FortunePayReportAttachmentInfoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortunePayReportAttachmentInfo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortunePayReportAttachmentInfo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortunePayReportAttachmentInfo"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_pay_report_attachment_info/{id}": {
            "get": {
                "tags": [
                    "fortune_pay_report_attachment_info"
                ],
                "description": "get FortunePayReportAttachmentInfo by id",
                "operationId": "FortunePayReportAttachmentInfoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortunePayReportAttachmentInfo"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_pay_report_attachment_info"
                ],
                "description": "update the FortunePayReportAttachmentInfo",
                "operationId": "FortunePayReportAttachmentInfoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortunePayReportAttachmentInfo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortunePayReportAttachmentInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortunePayReportAttachmentInfo"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_pay_report_attachment_info"
                ],
                "description": "delete the FortunePayReportAttachmentInfo",
                "operationId": "FortunePayReportAttachmentInfoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_pay_report_zip_archive/": {
            "get": {
                "tags": [
                    "fortune_pay_report_zip_archive"
                ],
                "description": "get FortunePayReportZipArchive",
                "operationId": "FortunePayReportZipArchiveController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortunePayReportZipArchive"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_pay_report_zip_archive"
                ],
                "description": "create FortunePayReportZipArchive",
                "operationId": "FortunePayReportZipArchiveController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortunePayReportZipArchive content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortunePayReportZipArchive"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortunePayReportZipArchive"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_pay_report_zip_archive/{id}": {
            "get": {
                "tags": [
                    "fortune_pay_report_zip_archive"
                ],
                "description": "get FortunePayReportZipArchive by id",
                "operationId": "FortunePayReportZipArchiveController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortunePayReportZipArchive"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_pay_report_zip_archive"
                ],
                "description": "update the FortunePayReportZipArchive",
                "operationId": "FortunePayReportZipArchiveController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortunePayReportZipArchive content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortunePayReportZipArchive"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortunePayReportZipArchive"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_pay_report_zip_archive"
                ],
                "description": "delete the FortunePayReportZipArchive",
                "operationId": "FortunePayReportZipArchiveController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_pf_question_evaluation/": {
            "get": {
                "tags": [
                    "fortune_pf_question_evaluation"
                ],
                "description": "get FortunePfQuestionEvaluation",
                "operationId": "FortunePfQuestionEvaluationController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortunePfQuestionEvaluation"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_pf_question_evaluation"
                ],
                "description": "create FortunePfQuestionEvaluation",
                "operationId": "FortunePfQuestionEvaluationController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortunePfQuestionEvaluation content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortunePfQuestionEvaluation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortunePfQuestionEvaluation"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_pf_question_evaluation/{id}": {
            "get": {
                "tags": [
                    "fortune_pf_question_evaluation"
                ],
                "description": "get FortunePfQuestionEvaluation by id",
                "operationId": "FortunePfQuestionEvaluationController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortunePfQuestionEvaluation"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_pf_question_evaluation"
                ],
                "description": "update the FortunePfQuestionEvaluation",
                "operationId": "FortunePfQuestionEvaluationController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortunePfQuestionEvaluation content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortunePfQuestionEvaluation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortunePfQuestionEvaluation"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_pf_question_evaluation"
                ],
                "description": "delete the FortunePfQuestionEvaluation",
                "operationId": "FortunePfQuestionEvaluationController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_pf_question_evaluation_copy/": {
            "get": {
                "tags": [
                    "fortune_pf_question_evaluation_copy"
                ],
                "description": "get FortunePfQuestionEvaluationCopy",
                "operationId": "FortunePfQuestionEvaluationCopyController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortunePfQuestionEvaluationCopy"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_pf_question_evaluation_copy"
                ],
                "description": "create FortunePfQuestionEvaluationCopy",
                "operationId": "FortunePfQuestionEvaluationCopyController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortunePfQuestionEvaluationCopy content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortunePfQuestionEvaluationCopy"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortunePfQuestionEvaluationCopy"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_pf_question_evaluation_copy/{id}": {
            "get": {
                "tags": [
                    "fortune_pf_question_evaluation_copy"
                ],
                "description": "get FortunePfQuestionEvaluationCopy by id",
                "operationId": "FortunePfQuestionEvaluationCopyController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortunePfQuestionEvaluationCopy"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_pf_question_evaluation_copy"
                ],
                "description": "update the FortunePfQuestionEvaluationCopy",
                "operationId": "FortunePfQuestionEvaluationCopyController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortunePfQuestionEvaluationCopy content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortunePfQuestionEvaluationCopy"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortunePfQuestionEvaluationCopy"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_pf_question_evaluation_copy"
                ],
                "description": "delete the FortunePfQuestionEvaluationCopy",
                "operationId": "FortunePfQuestionEvaluationCopyController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_pf_question_evaluation_history/": {
            "get": {
                "tags": [
                    "fortune_pf_question_evaluation_history"
                ],
                "description": "get FortunePfQuestionEvaluationHistory",
                "operationId": "FortunePfQuestionEvaluationHistoryController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortunePfQuestionEvaluationHistory"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_pf_question_evaluation_history"
                ],
                "description": "create FortunePfQuestionEvaluationHistory",
                "operationId": "FortunePfQuestionEvaluationHistoryController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortunePfQuestionEvaluationHistory content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortunePfQuestionEvaluationHistory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortunePfQuestionEvaluationHistory"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_pf_question_evaluation_history/{id}": {
            "get": {
                "tags": [
                    "fortune_pf_question_evaluation_history"
                ],
                "description": "get FortunePfQuestionEvaluationHistory by id",
                "operationId": "FortunePfQuestionEvaluationHistoryController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortunePfQuestionEvaluationHistory"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_pf_question_evaluation_history"
                ],
                "description": "update the FortunePfQuestionEvaluationHistory",
                "operationId": "FortunePfQuestionEvaluationHistoryController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortunePfQuestionEvaluationHistory content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortunePfQuestionEvaluationHistory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortunePfQuestionEvaluationHistory"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_pf_question_evaluation_history"
                ],
                "description": "delete the FortunePfQuestionEvaluationHistory",
                "operationId": "FortunePfQuestionEvaluationHistoryController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_pf_question_evaluation_history_copy/": {
            "get": {
                "tags": [
                    "fortune_pf_question_evaluation_history_copy"
                ],
                "description": "get FortunePfQuestionEvaluationHistoryCopy",
                "operationId": "FortunePfQuestionEvaluationHistoryCopyController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortunePfQuestionEvaluationHistoryCopy"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_pf_question_evaluation_history_copy"
                ],
                "description": "create FortunePfQuestionEvaluationHistoryCopy",
                "operationId": "FortunePfQuestionEvaluationHistoryCopyController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortunePfQuestionEvaluationHistoryCopy content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortunePfQuestionEvaluationHistoryCopy"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortunePfQuestionEvaluationHistoryCopy"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_pf_question_evaluation_history_copy/{id}": {
            "get": {
                "tags": [
                    "fortune_pf_question_evaluation_history_copy"
                ],
                "description": "get FortunePfQuestionEvaluationHistoryCopy by id",
                "operationId": "FortunePfQuestionEvaluationHistoryCopyController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortunePfQuestionEvaluationHistoryCopy"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_pf_question_evaluation_history_copy"
                ],
                "description": "update the FortunePfQuestionEvaluationHistoryCopy",
                "operationId": "FortunePfQuestionEvaluationHistoryCopyController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortunePfQuestionEvaluationHistoryCopy content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortunePfQuestionEvaluationHistoryCopy"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortunePfQuestionEvaluationHistoryCopy"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_pf_question_evaluation_history_copy"
                ],
                "description": "delete the FortunePfQuestionEvaluationHistoryCopy",
                "operationId": "FortunePfQuestionEvaluationHistoryCopyController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_plan_call_msg_history/": {
            "get": {
                "tags": [
                    "fortune_plan_call_msg_history"
                ],
                "description": "get FortunePlanCallMsgHistory",
                "operationId": "FortunePlanCallMsgHistoryController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortunePlanCallMsgHistory"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_plan_call_msg_history"
                ],
                "description": "create FortunePlanCallMsgHistory",
                "operationId": "FortunePlanCallMsgHistoryController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortunePlanCallMsgHistory content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortunePlanCallMsgHistory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortunePlanCallMsgHistory"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_plan_call_msg_history/{id}": {
            "get": {
                "tags": [
                    "fortune_plan_call_msg_history"
                ],
                "description": "get FortunePlanCallMsgHistory by id",
                "operationId": "FortunePlanCallMsgHistoryController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortunePlanCallMsgHistory"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_plan_call_msg_history"
                ],
                "description": "update the FortunePlanCallMsgHistory",
                "operationId": "FortunePlanCallMsgHistoryController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortunePlanCallMsgHistory content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortunePlanCallMsgHistory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortunePlanCallMsgHistory"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_plan_call_msg_history"
                ],
                "description": "delete the FortunePlanCallMsgHistory",
                "operationId": "FortunePlanCallMsgHistoryController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_position/": {
            "get": {
                "tags": [
                    "fortune_position"
                ],
                "description": "get FortunePosition",
                "operationId": "FortunePositionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortunePosition"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_position"
                ],
                "description": "create FortunePosition",
                "operationId": "FortunePositionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortunePosition content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortunePosition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortunePosition"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_position/{id}": {
            "get": {
                "tags": [
                    "fortune_position"
                ],
                "description": "get FortunePosition by id",
                "operationId": "FortunePositionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortunePosition"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_position"
                ],
                "description": "update the FortunePosition",
                "operationId": "FortunePositionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortunePosition content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortunePosition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortunePosition"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_position"
                ],
                "description": "delete the FortunePosition",
                "operationId": "FortunePositionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_qr_code_info/": {
            "get": {
                "tags": [
                    "fortune_qr_code_info"
                ],
                "description": "get FortuneQrCodeInfo",
                "operationId": "FortuneQrCodeInfoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneQrCodeInfo"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_qr_code_info"
                ],
                "description": "create FortuneQrCodeInfo",
                "operationId": "FortuneQrCodeInfoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneQrCodeInfo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneQrCodeInfo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneQrCodeInfo"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_qr_code_info/{id}": {
            "get": {
                "tags": [
                    "fortune_qr_code_info"
                ],
                "description": "get FortuneQrCodeInfo by id",
                "operationId": "FortuneQrCodeInfoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneQrCodeInfo"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_qr_code_info"
                ],
                "description": "update the FortuneQrCodeInfo",
                "operationId": "FortuneQrCodeInfoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneQrCodeInfo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneQrCodeInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneQrCodeInfo"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_qr_code_info"
                ],
                "description": "delete the FortuneQrCodeInfo",
                "operationId": "FortuneQrCodeInfoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_qualified_flag/": {
            "get": {
                "tags": [
                    "fortune_qualified_flag"
                ],
                "description": "get FortuneQualifiedFlag",
                "operationId": "FortuneQualifiedFlagController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneQualifiedFlag"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_qualified_flag"
                ],
                "description": "create FortuneQualifiedFlag",
                "operationId": "FortuneQualifiedFlagController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneQualifiedFlag content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneQualifiedFlag"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneQualifiedFlag"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_qualified_flag/{id}": {
            "get": {
                "tags": [
                    "fortune_qualified_flag"
                ],
                "description": "get FortuneQualifiedFlag by id",
                "operationId": "FortuneQualifiedFlagController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneQualifiedFlag"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_qualified_flag"
                ],
                "description": "update the FortuneQualifiedFlag",
                "operationId": "FortuneQualifiedFlagController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneQualifiedFlag content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneQualifiedFlag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneQualifiedFlag"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_qualified_flag"
                ],
                "description": "delete the FortuneQualifiedFlag",
                "operationId": "FortuneQualifiedFlagController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_question/": {
            "get": {
                "tags": [
                    "fortune_question"
                ],
                "description": "get FortuneQuestion",
                "operationId": "FortuneQuestionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneQuestion"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_question"
                ],
                "description": "create FortuneQuestion",
                "operationId": "FortuneQuestionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneQuestion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneQuestion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneQuestion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_question/{id}": {
            "get": {
                "tags": [
                    "fortune_question"
                ],
                "description": "get FortuneQuestion by id",
                "operationId": "FortuneQuestionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneQuestion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_question"
                ],
                "description": "update the FortuneQuestion",
                "operationId": "FortuneQuestionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneQuestion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneQuestion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneQuestion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_question"
                ],
                "description": "delete the FortuneQuestion",
                "operationId": "FortuneQuestionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_question_bank/": {
            "get": {
                "tags": [
                    "fortune_question_bank"
                ],
                "description": "get FortuneQuestionBank",
                "operationId": "FortuneQuestionBankController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneQuestionBank"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_question_bank"
                ],
                "description": "create FortuneQuestionBank",
                "operationId": "FortuneQuestionBankController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneQuestionBank content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneQuestionBank"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneQuestionBank"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_question_bank/{id}": {
            "get": {
                "tags": [
                    "fortune_question_bank"
                ],
                "description": "get FortuneQuestionBank by id",
                "operationId": "FortuneQuestionBankController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneQuestionBank"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_question_bank"
                ],
                "description": "update the FortuneQuestionBank",
                "operationId": "FortuneQuestionBankController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneQuestionBank content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneQuestionBank"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneQuestionBank"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_question_bank"
                ],
                "description": "delete the FortuneQuestionBank",
                "operationId": "FortuneQuestionBankController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_question_evaluation/": {
            "get": {
                "tags": [
                    "fortune_question_evaluation"
                ],
                "description": "get FortuneQuestionEvaluation",
                "operationId": "FortuneQuestionEvaluationController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneQuestionEvaluation"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_question_evaluation"
                ],
                "description": "create FortuneQuestionEvaluation",
                "operationId": "FortuneQuestionEvaluationController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneQuestionEvaluation content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneQuestionEvaluation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneQuestionEvaluation"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_question_evaluation/{id}": {
            "get": {
                "tags": [
                    "fortune_question_evaluation"
                ],
                "description": "get FortuneQuestionEvaluation by id",
                "operationId": "FortuneQuestionEvaluationController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneQuestionEvaluation"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_question_evaluation"
                ],
                "description": "update the FortuneQuestionEvaluation",
                "operationId": "FortuneQuestionEvaluationController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneQuestionEvaluation content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneQuestionEvaluation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneQuestionEvaluation"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_question_evaluation"
                ],
                "description": "delete the FortuneQuestionEvaluation",
                "operationId": "FortuneQuestionEvaluationController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_question_evaluation_history/": {
            "get": {
                "tags": [
                    "fortune_question_evaluation_history"
                ],
                "description": "get FortuneQuestionEvaluationHistory",
                "operationId": "FortuneQuestionEvaluationHistoryController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneQuestionEvaluationHistory"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_question_evaluation_history"
                ],
                "description": "create FortuneQuestionEvaluationHistory",
                "operationId": "FortuneQuestionEvaluationHistoryController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneQuestionEvaluationHistory content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneQuestionEvaluationHistory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneQuestionEvaluationHistory"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_question_evaluation_history/{id}": {
            "get": {
                "tags": [
                    "fortune_question_evaluation_history"
                ],
                "description": "get FortuneQuestionEvaluationHistory by id",
                "operationId": "FortuneQuestionEvaluationHistoryController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneQuestionEvaluationHistory"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_question_evaluation_history"
                ],
                "description": "update the FortuneQuestionEvaluationHistory",
                "operationId": "FortuneQuestionEvaluationHistoryController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneQuestionEvaluationHistory content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneQuestionEvaluationHistory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneQuestionEvaluationHistory"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_question_evaluation_history"
                ],
                "description": "delete the FortuneQuestionEvaluationHistory",
                "operationId": "FortuneQuestionEvaluationHistoryController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_recommend_fc_setting/": {
            "get": {
                "tags": [
                    "fortune_recommend_fc_setting"
                ],
                "description": "get FortuneRecommendFcSetting",
                "operationId": "FortuneRecommendFcSettingController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneRecommendFcSetting"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_recommend_fc_setting"
                ],
                "description": "create FortuneRecommendFcSetting",
                "operationId": "FortuneRecommendFcSettingController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneRecommendFcSetting content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneRecommendFcSetting"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneRecommendFcSetting"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_recommend_fc_setting/{id}": {
            "get": {
                "tags": [
                    "fortune_recommend_fc_setting"
                ],
                "description": "get FortuneRecommendFcSetting by id",
                "operationId": "FortuneRecommendFcSettingController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneRecommendFcSetting"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_recommend_fc_setting"
                ],
                "description": "update the FortuneRecommendFcSetting",
                "operationId": "FortuneRecommendFcSettingController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneRecommendFcSetting content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneRecommendFcSetting"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneRecommendFcSetting"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_recommend_fc_setting"
                ],
                "description": "delete the FortuneRecommendFcSetting",
                "operationId": "FortuneRecommendFcSettingController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_recommend_fc_setting_detail/": {
            "get": {
                "tags": [
                    "fortune_recommend_fc_setting_detail"
                ],
                "description": "get FortuneRecommendFcSettingDetail",
                "operationId": "FortuneRecommendFcSettingDetailController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneRecommendFcSettingDetail"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_recommend_fc_setting_detail"
                ],
                "description": "create FortuneRecommendFcSettingDetail",
                "operationId": "FortuneRecommendFcSettingDetailController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneRecommendFcSettingDetail content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneRecommendFcSettingDetail"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneRecommendFcSettingDetail"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_recommend_fc_setting_detail/{id}": {
            "get": {
                "tags": [
                    "fortune_recommend_fc_setting_detail"
                ],
                "description": "get FortuneRecommendFcSettingDetail by id",
                "operationId": "FortuneRecommendFcSettingDetailController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneRecommendFcSettingDetail"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_recommend_fc_setting_detail"
                ],
                "description": "update the FortuneRecommendFcSettingDetail",
                "operationId": "FortuneRecommendFcSettingDetailController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneRecommendFcSettingDetail content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneRecommendFcSettingDetail"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneRecommendFcSettingDetail"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_recommend_fc_setting_detail"
                ],
                "description": "delete the FortuneRecommendFcSettingDetail",
                "operationId": "FortuneRecommendFcSettingDetailController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_recommend_fc_setting_detail_deal/": {
            "get": {
                "tags": [
                    "fortune_recommend_fc_setting_detail_deal"
                ],
                "description": "get FortuneRecommendFcSettingDetailDeal",
                "operationId": "FortuneRecommendFcSettingDetailDealController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneRecommendFcSettingDetailDeal"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_recommend_fc_setting_detail_deal"
                ],
                "description": "create FortuneRecommendFcSettingDetailDeal",
                "operationId": "FortuneRecommendFcSettingDetailDealController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneRecommendFcSettingDetailDeal content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneRecommendFcSettingDetailDeal"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneRecommendFcSettingDetailDeal"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_recommend_fc_setting_detail_deal/{id}": {
            "get": {
                "tags": [
                    "fortune_recommend_fc_setting_detail_deal"
                ],
                "description": "get FortuneRecommendFcSettingDetailDeal by id",
                "operationId": "FortuneRecommendFcSettingDetailDealController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneRecommendFcSettingDetailDeal"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_recommend_fc_setting_detail_deal"
                ],
                "description": "update the FortuneRecommendFcSettingDetailDeal",
                "operationId": "FortuneRecommendFcSettingDetailDealController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneRecommendFcSettingDetailDeal content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneRecommendFcSettingDetailDeal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneRecommendFcSettingDetailDeal"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_recommend_fc_setting_detail_deal"
                ],
                "description": "delete the FortuneRecommendFcSettingDetailDeal",
                "operationId": "FortuneRecommendFcSettingDetailDealController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_record_approval_biz/": {
            "get": {
                "tags": [
                    "fortune_record_approval_biz"
                ],
                "description": "get FortuneRecordApprovalBiz",
                "operationId": "FortuneRecordApprovalBizController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneRecordApprovalBiz"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_record_approval_biz"
                ],
                "description": "create FortuneRecordApprovalBiz",
                "operationId": "FortuneRecordApprovalBizController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneRecordApprovalBiz content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneRecordApprovalBiz"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneRecordApprovalBiz"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_record_approval_biz/{id}": {
            "get": {
                "tags": [
                    "fortune_record_approval_biz"
                ],
                "description": "get FortuneRecordApprovalBiz by id",
                "operationId": "FortuneRecordApprovalBizController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneRecordApprovalBiz"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_record_approval_biz"
                ],
                "description": "update the FortuneRecordApprovalBiz",
                "operationId": "FortuneRecordApprovalBizController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneRecordApprovalBiz content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneRecordApprovalBiz"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneRecordApprovalBiz"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_record_approval_biz"
                ],
                "description": "delete the FortuneRecordApprovalBiz",
                "operationId": "FortuneRecordApprovalBizController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_report_import_service/": {
            "get": {
                "tags": [
                    "fortune_report_import_service"
                ],
                "description": "get FortuneReportImportService",
                "operationId": "FortuneReportImportServiceController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneReportImportService"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_report_import_service"
                ],
                "description": "create FortuneReportImportService",
                "operationId": "FortuneReportImportServiceController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneReportImportService content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneReportImportService"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneReportImportService"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_report_import_service/{id}": {
            "get": {
                "tags": [
                    "fortune_report_import_service"
                ],
                "description": "get FortuneReportImportService by id",
                "operationId": "FortuneReportImportServiceController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneReportImportService"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_report_import_service"
                ],
                "description": "update the FortuneReportImportService",
                "operationId": "FortuneReportImportServiceController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneReportImportService content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneReportImportService"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneReportImportService"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_report_import_service"
                ],
                "description": "delete the FortuneReportImportService",
                "operationId": "FortuneReportImportServiceController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_role/": {
            "get": {
                "tags": [
                    "fortune_role"
                ],
                "description": "get FortuneRole",
                "operationId": "FortuneRoleController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneRole"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_role"
                ],
                "description": "create FortuneRole",
                "operationId": "FortuneRoleController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneRole content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneRole"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneRole"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_role/{id}": {
            "get": {
                "tags": [
                    "fortune_role"
                ],
                "description": "get FortuneRole by id",
                "operationId": "FortuneRoleController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneRole"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_role"
                ],
                "description": "update the FortuneRole",
                "operationId": "FortuneRoleController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneRole content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneRole"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneRole"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_role"
                ],
                "description": "delete the FortuneRole",
                "operationId": "FortuneRoleController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_subscribe_approval_biz/": {
            "get": {
                "tags": [
                    "fortune_subscribe_approval_biz"
                ],
                "description": "get FortuneSubscribeApprovalBiz",
                "operationId": "FortuneSubscribeApprovalBizController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneSubscribeApprovalBiz"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_subscribe_approval_biz"
                ],
                "description": "create FortuneSubscribeApprovalBiz",
                "operationId": "FortuneSubscribeApprovalBizController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneSubscribeApprovalBiz content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneSubscribeApprovalBiz"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneSubscribeApprovalBiz"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_subscribe_approval_biz/{id}": {
            "get": {
                "tags": [
                    "fortune_subscribe_approval_biz"
                ],
                "description": "get FortuneSubscribeApprovalBiz by id",
                "operationId": "FortuneSubscribeApprovalBizController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneSubscribeApprovalBiz"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_subscribe_approval_biz"
                ],
                "description": "update the FortuneSubscribeApprovalBiz",
                "operationId": "FortuneSubscribeApprovalBizController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneSubscribeApprovalBiz content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneSubscribeApprovalBiz"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneSubscribeApprovalBiz"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_subscribe_approval_biz"
                ],
                "description": "delete the FortuneSubscribeApprovalBiz",
                "operationId": "FortuneSubscribeApprovalBizController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_sundry_config/": {
            "get": {
                "tags": [
                    "fortune_sundry_config"
                ],
                "description": "get FortuneSundryConfig",
                "operationId": "FortuneSundryConfigController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneSundryConfig"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_sundry_config"
                ],
                "description": "create FortuneSundryConfig",
                "operationId": "FortuneSundryConfigController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneSundryConfig content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneSundryConfig"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneSundryConfig"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_sundry_config/{id}": {
            "get": {
                "tags": [
                    "fortune_sundry_config"
                ],
                "description": "get FortuneSundryConfig by id",
                "operationId": "FortuneSundryConfigController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneSundryConfig"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_sundry_config"
                ],
                "description": "update the FortuneSundryConfig",
                "operationId": "FortuneSundryConfigController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneSundryConfig content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneSundryConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneSundryConfig"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_sundry_config"
                ],
                "description": "delete the FortuneSundryConfig",
                "operationId": "FortuneSundryConfigController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_temp/": {
            "get": {
                "tags": [
                    "fortune_temp"
                ],
                "description": "get FortuneTemp",
                "operationId": "FortuneTempController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneTemp"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_temp"
                ],
                "description": "create FortuneTemp",
                "operationId": "FortuneTempController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneTemp content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneTemp"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneTemp"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_temp/{id}": {
            "get": {
                "tags": [
                    "fortune_temp"
                ],
                "description": "get FortuneTemp by id",
                "operationId": "FortuneTempController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneTemp"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_temp"
                ],
                "description": "update the FortuneTemp",
                "operationId": "FortuneTempController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneTemp content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneTemp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneTemp"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_temp"
                ],
                "description": "delete the FortuneTemp",
                "operationId": "FortuneTempController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_temp_cstm/": {
            "get": {
                "tags": [
                    "fortune_temp_cstm"
                ],
                "description": "get FortuneTempCstm",
                "operationId": "FortuneTempCstmController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneTempCstm"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_temp_cstm"
                ],
                "description": "create FortuneTempCstm",
                "operationId": "FortuneTempCstmController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneTempCstm content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneTempCstm"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneTempCstm"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_temp_cstm/{id}": {
            "get": {
                "tags": [
                    "fortune_temp_cstm"
                ],
                "description": "get FortuneTempCstm by id",
                "operationId": "FortuneTempCstmController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneTempCstm"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_temp_cstm"
                ],
                "description": "update the FortuneTempCstm",
                "operationId": "FortuneTempCstmController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneTempCstm content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneTempCstm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneTempCstm"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_temp_cstm"
                ],
                "description": "delete the FortuneTempCstm",
                "operationId": "FortuneTempCstmController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_usa_account_info/": {
            "get": {
                "tags": [
                    "fortune_usa_account_info"
                ],
                "description": "get FortuneUsaAccountInfo",
                "operationId": "FortuneUsaAccountInfoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneUsaAccountInfo"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_usa_account_info"
                ],
                "description": "create FortuneUsaAccountInfo",
                "operationId": "FortuneUsaAccountInfoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneUsaAccountInfo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneUsaAccountInfo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneUsaAccountInfo"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_usa_account_info/{id}": {
            "get": {
                "tags": [
                    "fortune_usa_account_info"
                ],
                "description": "get FortuneUsaAccountInfo by id",
                "operationId": "FortuneUsaAccountInfoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneUsaAccountInfo"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_usa_account_info"
                ],
                "description": "update the FortuneUsaAccountInfo",
                "operationId": "FortuneUsaAccountInfoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneUsaAccountInfo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneUsaAccountInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneUsaAccountInfo"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_usa_account_info"
                ],
                "description": "delete the FortuneUsaAccountInfo",
                "operationId": "FortuneUsaAccountInfoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_user/": {
            "get": {
                "tags": [
                    "fortune_user"
                ],
                "description": "get FortuneUser",
                "operationId": "FortuneUserController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneUser"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_user"
                ],
                "description": "create FortuneUser",
                "operationId": "FortuneUserController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneUser content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneUser"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneUser"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_user/{id}": {
            "get": {
                "tags": [
                    "fortune_user"
                ],
                "description": "get FortuneUser by id",
                "operationId": "FortuneUserController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneUser"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_user"
                ],
                "description": "update the FortuneUser",
                "operationId": "FortuneUserController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneUser content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneUser"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_user"
                ],
                "description": "delete the FortuneUser",
                "operationId": "FortuneUserController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_user_subscription_approve_info/": {
            "get": {
                "tags": [
                    "fortune_user_subscription_approve_info"
                ],
                "description": "get FortuneUserSubscriptionApproveInfo",
                "operationId": "FortuneUserSubscriptionApproveInfoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneUserSubscriptionApproveInfo"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_user_subscription_approve_info"
                ],
                "description": "create FortuneUserSubscriptionApproveInfo",
                "operationId": "FortuneUserSubscriptionApproveInfoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneUserSubscriptionApproveInfo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneUserSubscriptionApproveInfo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneUserSubscriptionApproveInfo"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_user_subscription_approve_info/{id}": {
            "get": {
                "tags": [
                    "fortune_user_subscription_approve_info"
                ],
                "description": "get FortuneUserSubscriptionApproveInfo by id",
                "operationId": "FortuneUserSubscriptionApproveInfoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneUserSubscriptionApproveInfo"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_user_subscription_approve_info"
                ],
                "description": "update the FortuneUserSubscriptionApproveInfo",
                "operationId": "FortuneUserSubscriptionApproveInfoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneUserSubscriptionApproveInfo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneUserSubscriptionApproveInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneUserSubscriptionApproveInfo"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_user_subscription_approve_info"
                ],
                "description": "delete the FortuneUserSubscriptionApproveInfo",
                "operationId": "FortuneUserSubscriptionApproveInfoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_user_subscription_attachment_info/": {
            "get": {
                "tags": [
                    "fortune_user_subscription_attachment_info"
                ],
                "description": "get FortuneUserSubscriptionAttachmentInfo",
                "operationId": "FortuneUserSubscriptionAttachmentInfoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneUserSubscriptionAttachmentInfo"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_user_subscription_attachment_info"
                ],
                "description": "create FortuneUserSubscriptionAttachmentInfo",
                "operationId": "FortuneUserSubscriptionAttachmentInfoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneUserSubscriptionAttachmentInfo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneUserSubscriptionAttachmentInfo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneUserSubscriptionAttachmentInfo"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_user_subscription_attachment_info/{id}": {
            "get": {
                "tags": [
                    "fortune_user_subscription_attachment_info"
                ],
                "description": "get FortuneUserSubscriptionAttachmentInfo by id",
                "operationId": "FortuneUserSubscriptionAttachmentInfoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneUserSubscriptionAttachmentInfo"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_user_subscription_attachment_info"
                ],
                "description": "update the FortuneUserSubscriptionAttachmentInfo",
                "operationId": "FortuneUserSubscriptionAttachmentInfoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneUserSubscriptionAttachmentInfo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneUserSubscriptionAttachmentInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneUserSubscriptionAttachmentInfo"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_user_subscription_attachment_info"
                ],
                "description": "delete the FortuneUserSubscriptionAttachmentInfo",
                "operationId": "FortuneUserSubscriptionAttachmentInfoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_user_subscription_attachment_info_bak/": {
            "get": {
                "tags": [
                    "fortune_user_subscription_attachment_info_bak"
                ],
                "description": "get FortuneUserSubscriptionAttachmentInfoBak",
                "operationId": "FortuneUserSubscriptionAttachmentInfoBakController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneUserSubscriptionAttachmentInfoBak"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_user_subscription_attachment_info_bak"
                ],
                "description": "create FortuneUserSubscriptionAttachmentInfoBak",
                "operationId": "FortuneUserSubscriptionAttachmentInfoBakController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneUserSubscriptionAttachmentInfoBak content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneUserSubscriptionAttachmentInfoBak"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneUserSubscriptionAttachmentInfoBak"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_user_subscription_attachment_info_bak/{id}": {
            "get": {
                "tags": [
                    "fortune_user_subscription_attachment_info_bak"
                ],
                "description": "get FortuneUserSubscriptionAttachmentInfoBak by id",
                "operationId": "FortuneUserSubscriptionAttachmentInfoBakController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneUserSubscriptionAttachmentInfoBak"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_user_subscription_attachment_info_bak"
                ],
                "description": "update the FortuneUserSubscriptionAttachmentInfoBak",
                "operationId": "FortuneUserSubscriptionAttachmentInfoBakController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneUserSubscriptionAttachmentInfoBak content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneUserSubscriptionAttachmentInfoBak"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneUserSubscriptionAttachmentInfoBak"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_user_subscription_attachment_info_bak"
                ],
                "description": "delete the FortuneUserSubscriptionAttachmentInfoBak",
                "operationId": "FortuneUserSubscriptionAttachmentInfoBakController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_user_subscription_info/": {
            "get": {
                "tags": [
                    "fortune_user_subscription_info"
                ],
                "description": "get FortuneUserSubscriptionInfo",
                "operationId": "FortuneUserSubscriptionInfoController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneUserSubscriptionInfo"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_user_subscription_info"
                ],
                "description": "create FortuneUserSubscriptionInfo",
                "operationId": "FortuneUserSubscriptionInfoController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneUserSubscriptionInfo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneUserSubscriptionInfo"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneUserSubscriptionInfo"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_user_subscription_info/{id}": {
            "get": {
                "tags": [
                    "fortune_user_subscription_info"
                ],
                "description": "get FortuneUserSubscriptionInfo by id",
                "operationId": "FortuneUserSubscriptionInfoController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneUserSubscriptionInfo"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_user_subscription_info"
                ],
                "description": "update the FortuneUserSubscriptionInfo",
                "operationId": "FortuneUserSubscriptionInfoController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneUserSubscriptionInfo content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneUserSubscriptionInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneUserSubscriptionInfo"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_user_subscription_info"
                ],
                "description": "delete the FortuneUserSubscriptionInfo",
                "operationId": "FortuneUserSubscriptionInfoController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_user_subscription_info_bak/": {
            "get": {
                "tags": [
                    "fortune_user_subscription_info_bak"
                ],
                "description": "get FortuneUserSubscriptionInfoBak",
                "operationId": "FortuneUserSubscriptionInfoBakController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneUserSubscriptionInfoBak"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_user_subscription_info_bak"
                ],
                "description": "create FortuneUserSubscriptionInfoBak",
                "operationId": "FortuneUserSubscriptionInfoBakController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneUserSubscriptionInfoBak content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneUserSubscriptionInfoBak"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneUserSubscriptionInfoBak"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_user_subscription_info_bak/{id}": {
            "get": {
                "tags": [
                    "fortune_user_subscription_info_bak"
                ],
                "description": "get FortuneUserSubscriptionInfoBak by id",
                "operationId": "FortuneUserSubscriptionInfoBakController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneUserSubscriptionInfoBak"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_user_subscription_info_bak"
                ],
                "description": "update the FortuneUserSubscriptionInfoBak",
                "operationId": "FortuneUserSubscriptionInfoBakController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneUserSubscriptionInfoBak content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneUserSubscriptionInfoBak"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneUserSubscriptionInfoBak"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_user_subscription_info_bak"
                ],
                "description": "delete the FortuneUserSubscriptionInfoBak",
                "operationId": "FortuneUserSubscriptionInfoBakController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_user_subscription_info_bak_20180509/": {
            "get": {
                "tags": [
                    "fortune_user_subscription_info_bak_20180509"
                ],
                "description": "get FortuneUserSubscriptionInfoBak20180509",
                "operationId": "FortuneUserSubscriptionInfoBak20180509Controller.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneUserSubscriptionInfoBak20180509"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_user_subscription_info_bak_20180509"
                ],
                "description": "create FortuneUserSubscriptionInfoBak20180509",
                "operationId": "FortuneUserSubscriptionInfoBak20180509Controller.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneUserSubscriptionInfoBak20180509 content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneUserSubscriptionInfoBak20180509"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneUserSubscriptionInfoBak20180509"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_user_subscription_info_bak_20180509/{id}": {
            "get": {
                "tags": [
                    "fortune_user_subscription_info_bak_20180509"
                ],
                "description": "get FortuneUserSubscriptionInfoBak20180509 by id",
                "operationId": "FortuneUserSubscriptionInfoBak20180509Controller.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneUserSubscriptionInfoBak20180509"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_user_subscription_info_bak_20180509"
                ],
                "description": "update the FortuneUserSubscriptionInfoBak20180509",
                "operationId": "FortuneUserSubscriptionInfoBak20180509Controller.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneUserSubscriptionInfoBak20180509 content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneUserSubscriptionInfoBak20180509"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneUserSubscriptionInfoBak20180509"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_user_subscription_info_bak_20180509"
                ],
                "description": "delete the FortuneUserSubscriptionInfoBak20180509",
                "operationId": "FortuneUserSubscriptionInfoBak20180509Controller.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_user_subscription_info_copy/": {
            "get": {
                "tags": [
                    "fortune_user_subscription_info_copy"
                ],
                "description": "get FortuneUserSubscriptionInfoCopy",
                "operationId": "FortuneUserSubscriptionInfoCopyController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneUserSubscriptionInfoCopy"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_user_subscription_info_copy"
                ],
                "description": "create FortuneUserSubscriptionInfoCopy",
                "operationId": "FortuneUserSubscriptionInfoCopyController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneUserSubscriptionInfoCopy content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneUserSubscriptionInfoCopy"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneUserSubscriptionInfoCopy"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_user_subscription_info_copy/{id}": {
            "get": {
                "tags": [
                    "fortune_user_subscription_info_copy"
                ],
                "description": "get FortuneUserSubscriptionInfoCopy by id",
                "operationId": "FortuneUserSubscriptionInfoCopyController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneUserSubscriptionInfoCopy"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_user_subscription_info_copy"
                ],
                "description": "update the FortuneUserSubscriptionInfoCopy",
                "operationId": "FortuneUserSubscriptionInfoCopyController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneUserSubscriptionInfoCopy content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneUserSubscriptionInfoCopy"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneUserSubscriptionInfoCopy"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_user_subscription_info_copy"
                ],
                "description": "delete the FortuneUserSubscriptionInfoCopy",
                "operationId": "FortuneUserSubscriptionInfoCopyController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_user_tools/": {
            "get": {
                "tags": [
                    "fortune_user_tools"
                ],
                "description": "get FortuneUserTools",
                "operationId": "FortuneUserToolsController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneUserTools"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_user_tools"
                ],
                "description": "create FortuneUserTools",
                "operationId": "FortuneUserToolsController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneUserTools content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneUserTools"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneUserTools"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_user_tools/{id}": {
            "get": {
                "tags": [
                    "fortune_user_tools"
                ],
                "description": "get FortuneUserTools by id",
                "operationId": "FortuneUserToolsController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneUserTools"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_user_tools"
                ],
                "description": "update the FortuneUserTools",
                "operationId": "FortuneUserToolsController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneUserTools content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneUserTools"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneUserTools"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_user_tools"
                ],
                "description": "delete the FortuneUserTools",
                "operationId": "FortuneUserToolsController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_vars/": {
            "get": {
                "tags": [
                    "fortune_vars"
                ],
                "description": "get FortuneVars",
                "operationId": "FortuneVarsController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneVars"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_vars"
                ],
                "description": "create FortuneVars",
                "operationId": "FortuneVarsController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneVars content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneVars"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneVars"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_vars/{id}": {
            "get": {
                "tags": [
                    "fortune_vars"
                ],
                "description": "get FortuneVars by id",
                "operationId": "FortuneVarsController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneVars"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_vars"
                ],
                "description": "update the FortuneVars",
                "operationId": "FortuneVarsController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneVars content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneVars"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneVars"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_vars"
                ],
                "description": "delete the FortuneVars",
                "operationId": "FortuneVarsController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_video_records/": {
            "get": {
                "tags": [
                    "fortune_video_records"
                ],
                "description": "get FortuneVideoRecords",
                "operationId": "FortuneVideoRecordsController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneVideoRecords"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_video_records"
                ],
                "description": "create FortuneVideoRecords",
                "operationId": "FortuneVideoRecordsController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneVideoRecords content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneVideoRecords"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneVideoRecords"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_video_records/{id}": {
            "get": {
                "tags": [
                    "fortune_video_records"
                ],
                "description": "get FortuneVideoRecords by id",
                "operationId": "FortuneVideoRecordsController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneVideoRecords"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_video_records"
                ],
                "description": "update the FortuneVideoRecords",
                "operationId": "FortuneVideoRecordsController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneVideoRecords content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneVideoRecords"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneVideoRecords"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_video_records"
                ],
                "description": "delete the FortuneVideoRecords",
                "operationId": "FortuneVideoRecordsController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_video_records_history/": {
            "get": {
                "tags": [
                    "fortune_video_records_history"
                ],
                "description": "get FortuneVideoRecordsHistory",
                "operationId": "FortuneVideoRecordsHistoryController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneVideoRecordsHistory"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_video_records_history"
                ],
                "description": "create FortuneVideoRecordsHistory",
                "operationId": "FortuneVideoRecordsHistoryController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneVideoRecordsHistory content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneVideoRecordsHistory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneVideoRecordsHistory"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_video_records_history/{id}": {
            "get": {
                "tags": [
                    "fortune_video_records_history"
                ],
                "description": "get FortuneVideoRecordsHistory by id",
                "operationId": "FortuneVideoRecordsHistoryController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneVideoRecordsHistory"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_video_records_history"
                ],
                "description": "update the FortuneVideoRecordsHistory",
                "operationId": "FortuneVideoRecordsHistoryController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneVideoRecordsHistory content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneVideoRecordsHistory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneVideoRecordsHistory"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_video_records_history"
                ],
                "description": "delete the FortuneVideoRecordsHistory",
                "operationId": "FortuneVideoRecordsHistoryController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_video_records_work_orders/": {
            "get": {
                "tags": [
                    "fortune_video_records_work_orders"
                ],
                "description": "get FortuneVideoRecordsWorkOrders",
                "operationId": "FortuneVideoRecordsWorkOrdersController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneVideoRecordsWorkOrders"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_video_records_work_orders"
                ],
                "description": "create FortuneVideoRecordsWorkOrders",
                "operationId": "FortuneVideoRecordsWorkOrdersController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneVideoRecordsWorkOrders content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneVideoRecordsWorkOrders"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneVideoRecordsWorkOrders"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_video_records_work_orders/{id}": {
            "get": {
                "tags": [
                    "fortune_video_records_work_orders"
                ],
                "description": "get FortuneVideoRecordsWorkOrders by id",
                "operationId": "FortuneVideoRecordsWorkOrdersController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneVideoRecordsWorkOrders"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_video_records_work_orders"
                ],
                "description": "update the FortuneVideoRecordsWorkOrders",
                "operationId": "FortuneVideoRecordsWorkOrdersController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneVideoRecordsWorkOrders content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneVideoRecordsWorkOrders"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneVideoRecordsWorkOrders"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_video_records_work_orders"
                ],
                "description": "delete the FortuneVideoRecordsWorkOrders",
                "operationId": "FortuneVideoRecordsWorkOrdersController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/fortune_work_hours/": {
            "get": {
                "tags": [
                    "fortune_work_hours"
                ],
                "description": "get FortuneWorkHours",
                "operationId": "FortuneWorkHoursController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneWorkHours"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "fortune_work_hours"
                ],
                "description": "create FortuneWorkHours",
                "operationId": "FortuneWorkHoursController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneWorkHours content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneWorkHours"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.FortuneWorkHours"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/fortune_work_hours/{id}": {
            "get": {
                "tags": [
                    "fortune_work_hours"
                ],
                "description": "get FortuneWorkHours by id",
                "operationId": "FortuneWorkHoursController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneWorkHours"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "fortune_work_hours"
                ],
                "description": "update the FortuneWorkHours",
                "operationId": "FortuneWorkHoursController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for FortuneWorkHours content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.FortuneWorkHours"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FortuneWorkHours"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "fortune_work_hours"
                ],
                "description": "delete the FortuneWorkHours",
                "operationId": "FortuneWorkHoursController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/global_region/": {
            "get": {
                "tags": [
                    "global_region"
                ],
                "description": "get GlobalRegion",
                "operationId": "GlobalRegionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GlobalRegion"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "global_region"
                ],
                "description": "create GlobalRegion",
                "operationId": "GlobalRegionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for GlobalRegion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GlobalRegion"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.GlobalRegion"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/global_region/{id}": {
            "get": {
                "tags": [
                    "global_region"
                ],
                "description": "get GlobalRegion by id",
                "operationId": "GlobalRegionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GlobalRegion"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "global_region"
                ],
                "description": "update the GlobalRegion",
                "operationId": "GlobalRegionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for GlobalRegion content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.GlobalRegion"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GlobalRegion"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "global_region"
                ],
                "description": "delete the GlobalRegion",
                "operationId": "GlobalRegionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/make_unique_id/": {
            "get": {
                "tags": [
                    "make_unique_id"
                ],
                "description": "get MakeUniqueId",
                "operationId": "MakeUniqueIdController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.MakeUniqueId"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "make_unique_id"
                ],
                "description": "create MakeUniqueId",
                "operationId": "MakeUniqueIdController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for MakeUniqueId content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MakeUniqueId"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.MakeUniqueId"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/make_unique_id/{id}": {
            "get": {
                "tags": [
                    "make_unique_id"
                ],
                "description": "get MakeUniqueId by id",
                "operationId": "MakeUniqueIdController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.MakeUniqueId"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "make_unique_id"
                ],
                "description": "update the MakeUniqueId",
                "operationId": "MakeUniqueIdController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for MakeUniqueId content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.MakeUniqueId"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.MakeUniqueId"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "make_unique_id"
                ],
                "description": "delete the MakeUniqueId",
                "operationId": "MakeUniqueIdController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/test_tb1/": {
            "get": {
                "tags": [
                    "test_tb1"
                ],
                "description": "get TestTb1",
                "operationId": "TestTb1Controller.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TestTb1"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "test_tb1"
                ],
                "description": "create TestTb1",
                "operationId": "TestTb1Controller.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TestTb1 content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TestTb1"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.TestTb1"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/test_tb1/{id}": {
            "get": {
                "tags": [
                    "test_tb1"
                ],
                "description": "get TestTb1 by id",
                "operationId": "TestTb1Controller.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TestTb1"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "test_tb1"
                ],
                "description": "update the TestTb1",
                "operationId": "TestTb1Controller.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TestTb1 content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TestTb1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TestTb1"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "test_tb1"
                ],
                "description": "delete the TestTb1",
                "operationId": "TestTb1Controller.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/test_tb2/": {
            "get": {
                "tags": [
                    "test_tb2"
                ],
                "description": "get TestTb2",
                "operationId": "TestTb2Controller.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TestTb2"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "test_tb2"
                ],
                "description": "create TestTb2",
                "operationId": "TestTb2Controller.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TestTb2 content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TestTb2"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.TestTb2"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/test_tb2/{id}": {
            "get": {
                "tags": [
                    "test_tb2"
                ],
                "description": "get TestTb2 by id",
                "operationId": "TestTb2Controller.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TestTb2"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "test_tb2"
                ],
                "description": "update the TestTb2",
                "operationId": "TestTb2Controller.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TestTb2 content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TestTb2"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TestTb2"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "test_tb2"
                ],
                "description": "delete the TestTb2",
                "operationId": "TestTb2Controller.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/trigger_test1/": {
            "get": {
                "tags": [
                    "trigger_test1"
                ],
                "description": "get TriggerTest1",
                "operationId": "TriggerTest1Controller.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TriggerTest1"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "trigger_test1"
                ],
                "description": "create TriggerTest1",
                "operationId": "TriggerTest1Controller.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TriggerTest1 content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TriggerTest1"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.TriggerTest1"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/trigger_test1/{id}": {
            "get": {
                "tags": [
                    "trigger_test1"
                ],
                "description": "get TriggerTest1 by id",
                "operationId": "TriggerTest1Controller.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TriggerTest1"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "trigger_test1"
                ],
                "description": "update the TriggerTest1",
                "operationId": "TriggerTest1Controller.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TriggerTest1 content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TriggerTest1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TriggerTest1"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "trigger_test1"
                ],
                "description": "delete the TriggerTest1",
                "operationId": "TriggerTest1Controller.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/trigger_test1_depart/": {
            "get": {
                "tags": [
                    "trigger_test1_depart"
                ],
                "description": "get TriggerTest1Depart",
                "operationId": "TriggerTest1DepartController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TriggerTest1Depart"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "trigger_test1_depart"
                ],
                "description": "create TriggerTest1Depart",
                "operationId": "TriggerTest1DepartController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TriggerTest1Depart content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TriggerTest1Depart"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.TriggerTest1Depart"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/trigger_test1_depart/{id}": {
            "get": {
                "tags": [
                    "trigger_test1_depart"
                ],
                "description": "get TriggerTest1Depart by id",
                "operationId": "TriggerTest1DepartController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TriggerTest1Depart"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "trigger_test1_depart"
                ],
                "description": "update the TriggerTest1Depart",
                "operationId": "TriggerTest1DepartController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TriggerTest1Depart content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TriggerTest1Depart"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TriggerTest1Depart"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "trigger_test1_depart"
                ],
                "description": "delete the TriggerTest1Depart",
                "operationId": "TriggerTest1DepartController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/trigger_test2/": {
            "get": {
                "tags": [
                    "trigger_test2"
                ],
                "description": "get TriggerTest2",
                "operationId": "TriggerTest2Controller.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TriggerTest2"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "trigger_test2"
                ],
                "description": "create TriggerTest2",
                "operationId": "TriggerTest2Controller.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TriggerTest2 content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TriggerTest2"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.TriggerTest2"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/trigger_test2/{id}": {
            "get": {
                "tags": [
                    "trigger_test2"
                ],
                "description": "get TriggerTest2 by id",
                "operationId": "TriggerTest2Controller.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TriggerTest2"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "trigger_test2"
                ],
                "description": "update the TriggerTest2",
                "operationId": "TriggerTest2Controller.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TriggerTest2 content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TriggerTest2"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TriggerTest2"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "trigger_test2"
                ],
                "description": "delete the TriggerTest2",
                "operationId": "TriggerTest2Controller.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/trigger_test_loan/": {
            "get": {
                "tags": [
                    "trigger_test_loan"
                ],
                "description": "get TriggerTestLoan",
                "operationId": "TriggerTestLoanController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TriggerTestLoan"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "trigger_test_loan"
                ],
                "description": "create TriggerTestLoan",
                "operationId": "TriggerTestLoanController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TriggerTestLoan content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TriggerTestLoan"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.TriggerTestLoan"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/trigger_test_loan/{id}": {
            "get": {
                "tags": [
                    "trigger_test_loan"
                ],
                "description": "get TriggerTestLoan by id",
                "operationId": "TriggerTestLoanController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TriggerTestLoan"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "trigger_test_loan"
                ],
                "description": "update the TriggerTestLoan",
                "operationId": "TriggerTestLoanController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TriggerTestLoan content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TriggerTestLoan"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TriggerTestLoan"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "trigger_test_loan"
                ],
                "description": "delete the TriggerTestLoan",
                "operationId": "TriggerTestLoanController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/trigger_test_order/": {
            "get": {
                "tags": [
                    "trigger_test_order"
                ],
                "description": "get TriggerTestOrder",
                "operationId": "TriggerTestOrderController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TriggerTestOrder"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "trigger_test_order"
                ],
                "description": "create TriggerTestOrder",
                "operationId": "TriggerTestOrderController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TriggerTestOrder content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TriggerTestOrder"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.TriggerTestOrder"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/trigger_test_order/{id}": {
            "get": {
                "tags": [
                    "trigger_test_order"
                ],
                "description": "get TriggerTestOrder by id",
                "operationId": "TriggerTestOrderController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TriggerTestOrder"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "trigger_test_order"
                ],
                "description": "update the TriggerTestOrder",
                "operationId": "TriggerTestOrderController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TriggerTestOrder content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TriggerTestOrder"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TriggerTestOrder"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "trigger_test_order"
                ],
                "description": "delete the TriggerTestOrder",
                "operationId": "TriggerTestOrderController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        },
        "/trigger_test_subscription/": {
            "get": {
                "tags": [
                    "trigger_test_subscription"
                ],
                "description": "get TriggerTestSubscription",
                "operationId": "TriggerTestSubscriptionController.Get All",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "description": "Filter. e.g. col1:v1,col2:v2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "fields",
                        "description": "Fields returned. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "sortby",
                        "description": "Sorted-by fields. e.g. col1,col2 ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "order",
                        "description": "Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "description": "Limit the size of result set. Must be an integer",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "offset",
                        "description": "Start position of result set. Must be an integer",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TriggerTestSubscription"
                        }
                    },
                    "403": {
                        "description": ""
                    }
                }
            },
            "post": {
                "tags": [
                    "trigger_test_subscription"
                ],
                "description": "create TriggerTestSubscription",
                "operationId": "TriggerTestSubscriptionController.Post",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TriggerTestSubscription content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TriggerTestSubscription"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "{int} models.TriggerTestSubscription"
                    },
                    "403": {
                        "description": "body is empty"
                    }
                }
            }
        },
        "/trigger_test_subscription/{id}": {
            "get": {
                "tags": [
                    "trigger_test_subscription"
                ],
                "description": "get TriggerTestSubscription by id",
                "operationId": "TriggerTestSubscriptionController.Get One",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The key for staticblock",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TriggerTestSubscription"
                        }
                    },
                    "403": {
                        "description": ":id is empty"
                    }
                }
            },
            "put": {
                "tags": [
                    "trigger_test_subscription"
                ],
                "description": "update the TriggerTestSubscription",
                "operationId": "TriggerTestSubscriptionController.Put",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to update",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "body for TriggerTestSubscription content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TriggerTestSubscription"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TriggerTestSubscription"
                        }
                    },
                    "403": {
                        "description": ":id is not int"
                    }
                }
            },
            "delete": {
                "tags": [
                    "trigger_test_subscription"
                ],
                "description": "delete the TriggerTestSubscription",
                "operationId": "TriggerTestSubscriptionController.Delete",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "description": "The id you want to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete success!"
                    },
                    "403": {
                        "description": "id is empty"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.ActivitySubdivisionUserBaseInfo": {
            "title": "ActivitySubdivisionUserBaseInfo",
            "type": "object",
            "properties": {
                "AccRechargeAmount": {
                    "description": "累计充值总额",
                    "type": "number",
                    "format": "double"
                },
                "AccRepayAmount": {
                    "description": "累计回款金额",
                    "type": "number",
                    "format": "double"
                },
                "AccountBalance": {
                    "description": "账户余额",
                    "type": "number",
                    "format": "double"
                },
                "Address": {
                    "description": "所在地",
                    "type": "string"
                },
                "Age": {
                    "description": "年龄",
                    "type": "integer",
                    "format": "int32"
                },
                "AvailablePoints": {
                    "description": "可用积分",
                    "type": "integer",
                    "format": "int64"
                },
                "BaseFields": {
                    "description": "json格式的数据 便于动态变更结果字段",
                    "type": "string"
                },
                "BindBankTime": {
                    "description": "绑定银行卡时间",
                    "type": "string",
                    "format": "datetime"
                },
                "BirthDate": {
                    "description": "出生年月",
                    "type": "string",
                    "format": "datetime"
                },
                "ChannelFirst": {
                    "description": "第一渠道",
                    "type": "string"
                },
                "ChannelSecond": {
                    "description": "第二渠道",
                    "type": "string"
                },
                "FirstRechargeTime": {
                    "description": "首次充值时间",
                    "type": "string",
                    "format": "datetime"
                },
                "FirstWithdrawTime": {
                    "description": "首次提现时间",
                    "type": "string",
                    "format": "datetime"
                },
                "FullName": {
                    "description": "姓名",
                    "type": "string"
                },
                "FundAllAmount": {
                    "description": "投资总金额",
                    "type": "number",
                    "format": "double"
                },
                "FundAllCount": {
                    "description": "投资次数",
                    "type": "integer",
                    "format": "int64"
                },
                "FundBrushstrokeMax": {
                    "description": "最高单笔投资金额",
                    "type": "number",
                    "format": "double"
                },
                "FundBrushstrokeMin": {
                    "description": "最低单笔投资金额",
                    "type": "number",
                    "format": "double"
                },
                "FundFirstTime": {
                    "description": "首次投资时间",
                    "type": "string",
                    "format": "datetime"
                },
                "FundLastestTime": {
                    "description": "最近一次投资时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Gender": {
                    "description": "性别 ",
                    "type": "string"
                },
                "Id": {
                    "description": "int型uid",
                    "type": "integer",
                    "format": "int64"
                },
                "IsBindBank": {
                    "description": "是否绑定银行卡",
                    "type": "integer",
                    "format": "int32"
                },
                "IsOpenAccount": {
                    "description": "是否开通托管账户 0否 1是",
                    "type": "integer",
                    "format": "int32"
                },
                "LastWithdrawTime": {
                    "description": "最后一次提现时间（取最近一次）",
                    "type": "string",
                    "format": "datetime"
                },
                "Level": {
                    "description": "层级 1:普通用户 2:白金用户 3:钻石用户",
                    "type": "integer",
                    "format": "int32"
                },
                "LevelName": {
                    "description": "层级名称 普通用户 白金用户 钻石用户",
                    "type": "string"
                },
                "OpenAccountTime": {
                    "description": "开通托管账户时间",
                    "type": "string",
                    "format": "datetime"
                },
                "PhoneMobile": {
                    "description": "联系电话",
                    "type": "string"
                },
                "RegisterDate": {
                    "description": "注册时间",
                    "type": "string",
                    "format": "datetime"
                },
                "TotalPoints": {
                    "description": "总积分",
                    "type": "integer",
                    "format": "int64"
                },
                "UpgradePoints": {
                    "description": "升级积分",
                    "type": "integer",
                    "format": "int64"
                },
                "UserId": {
                    "type": "string"
                },
                "UserName": {
                    "description": "用户名",
                    "type": "string"
                }
            }
        },
        "models.ActivitySubdivisionUserBaseInfoCopy": {
            "title": "ActivitySubdivisionUserBaseInfoCopy",
            "type": "object",
            "properties": {
                "AccRechargeAmount": {
                    "description": "累计充值总额",
                    "type": "number",
                    "format": "double"
                },
                "AccRepayAmount": {
                    "description": "累计回款金额",
                    "type": "number",
                    "format": "double"
                },
                "AccountBalance": {
                    "description": "账户余额",
                    "type": "number",
                    "format": "double"
                },
                "Address": {
                    "description": "所在地",
                    "type": "string"
                },
                "Age": {
                    "description": "年龄",
                    "type": "integer",
                    "format": "int32"
                },
                "AvailablePoints": {
                    "description": "可用积分",
                    "type": "integer",
                    "format": "int64"
                },
                "BaseFields": {
                    "description": "json格式的数据 便于动态变更结果字段",
                    "type": "string"
                },
                "BindBankTime": {
                    "description": "绑定银行卡时间",
                    "type": "string",
                    "format": "datetime"
                },
                "BirthDate": {
                    "description": "出生年月",
                    "type": "string",
                    "format": "datetime"
                },
                "ChannelFirst": {
                    "description": "第一渠道",
                    "type": "string"
                },
                "ChannelSecond": {
                    "description": "第二渠道",
                    "type": "string"
                },
                "FirstRechargeTime": {
                    "description": "首次充值时间",
                    "type": "string",
                    "format": "datetime"
                },
                "FirstWithdrawTime": {
                    "description": "首次提现时间",
                    "type": "string",
                    "format": "datetime"
                },
                "FullName": {
                    "description": "姓名",
                    "type": "string"
                },
                "FundAllAmount": {
                    "description": "投资总金额",
                    "type": "number",
                    "format": "double"
                },
                "FundAllCount": {
                    "description": "投资次数",
                    "type": "integer",
                    "format": "int64"
                },
                "FundBrushstrokeMax": {
                    "description": "最高单笔投资金额",
                    "type": "number",
                    "format": "double"
                },
                "FundBrushstrokeMin": {
                    "description": "最低单笔投资金额",
                    "type": "number",
                    "format": "double"
                },
                "FundFirstTime": {
                    "description": "首次投资时间",
                    "type": "string",
                    "format": "datetime"
                },
                "FundLastestTime": {
                    "description": "最近一次投资时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Gender": {
                    "description": "性别 ",
                    "type": "string"
                },
                "Id": {
                    "description": "int型uid",
                    "type": "integer",
                    "format": "int64"
                },
                "IsBindBank": {
                    "description": "是否绑定银行卡",
                    "type": "integer",
                    "format": "int32"
                },
                "IsOpenAccount": {
                    "description": "是否开通托管账户 0否 1是",
                    "type": "integer",
                    "format": "int32"
                },
                "LastWithdrawTime": {
                    "description": "最后一次提现时间（取最近一次）",
                    "type": "string",
                    "format": "datetime"
                },
                "Level": {
                    "description": "层级 1:普通用户 2:白金用户 3:钻石用户",
                    "type": "integer",
                    "format": "int32"
                },
                "LevelName": {
                    "description": "层级名称 普通用户 白金用户 钻石用户",
                    "type": "string"
                },
                "OpenAccountTime": {
                    "description": "开通托管账户时间",
                    "type": "string",
                    "format": "datetime"
                },
                "PhoneMobile": {
                    "description": "联系电话",
                    "type": "string"
                },
                "RegisterDate": {
                    "description": "注册时间",
                    "type": "string",
                    "format": "datetime"
                },
                "TotalPoints": {
                    "description": "总积分",
                    "type": "integer",
                    "format": "int64"
                },
                "UpgradePoints": {
                    "description": "升级积分",
                    "type": "integer",
                    "format": "int64"
                },
                "UserId": {
                    "type": "string"
                },
                "UserName": {
                    "description": "用户名",
                    "type": "string"
                }
            }
        },
        "models.DevPropertyConfigure": {
            "title": "DevPropertyConfigure",
            "type": "object",
            "properties": {
                "CreatedUserId": {
                    "description": "创建人ID",
                    "type": "string"
                },
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "description": "修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "Description": {
                    "description": "描述",
                    "type": "string"
                },
                "ExternType": {
                    "description": "外部类型",
                    "type": "string"
                },
                "Id": {
                    "description": "自增主健",
                    "type": "integer",
                    "format": "int64"
                },
                "ModifiedUserId": {
                    "description": "修改人ID",
                    "type": "string"
                },
                "Name": {
                    "description": "名称",
                    "type": "string"
                },
                "Sort": {
                    "description": "排序",
                    "type": "integer",
                    "format": "int64"
                },
                "Status": {
                    "description": "状态 1:正常 2:废弃",
                    "type": "integer",
                    "format": "int32"
                },
                "Type": {
                    "description": "类型",
                    "type": "string"
                },
                "Value": {
                    "description": "值",
                    "type": "string"
                }
            }
        },
        "models.FORTUNEREPAYMENTPLAN": {
            "title": "FORTUNEREPAYMENTPLAN",
            "type": "object",
            "properties": {
                "CREATETIME": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "CURRENTPERIOD": {
                    "description": "当前期数",
                    "type": "integer",
                    "format": "int64"
                },
                "CURRENTREPAYMENTDATE": {
                    "description": "本期还款日",
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "description": "ID",
                    "type": "integer",
                    "format": "int64"
                },
                "LOANID": {
                    "description": "标的ID",
                    "type": "string"
                },
                "ONLINEUSERID": {
                    "description": "线上用户ID",
                    "type": "string"
                },
                "OPENACCOUNTNAME": {
                    "description": "开户名",
                    "type": "string"
                },
                "ORDERNO": {
                    "description": "订单编号",
                    "type": "integer",
                    "format": "int64"
                },
                "PERIODID": {
                    "description": "批次号ID",
                    "type": "integer",
                    "format": "int64"
                },
                "PREDICTAMOUNTINTEREST": {
                    "description": "预计利息",
                    "type": "number",
                    "format": "double"
                },
                "PREDICTAMOUNTPRINCIPAL": {
                    "description": "预计本金",
                    "type": "number",
                    "format": "double"
                },
                "PREVIOUSREPAYMENTDATE": {
                    "description": "上一个还款日",
                    "type": "string",
                    "format": "datetime"
                },
                "REALAMOUNTINTEREST": {
                    "description": "实际利息",
                    "type": "number",
                    "format": "double"
                },
                "REALAMOUNTPRINCIPAL": {
                    "description": "实际本金",
                    "type": "number",
                    "format": "double"
                },
                "REALREPAYMENTDATE": {
                    "description": "实际还款日期",
                    "type": "string",
                    "format": "datetime"
                },
                "SUBSCRIPTIONID": {
                    "description": "认购ID",
                    "type": "string"
                },
                "TOTALPERIOD": {
                    "description": "总期数",
                    "type": "integer",
                    "format": "int64"
                },
                "UPDATETIME": {
                    "description": "更新时间",
                    "type": "string",
                    "format": "datetime"
                },
                "USERID": {
                    "description": "Customer ID",
                    "type": "string"
                }
            }
        },
        "models.FORTUNEREPAYMENTPLANEXECLOG": {
            "title": "FORTUNEREPAYMENTPLANEXECLOG",
            "type": "object",
            "properties": {
                "CREATEUSERID": {
                    "description": "创建人",
                    "type": "string"
                },
                "CREATEUSERNAME": {
                    "description": "创建人",
                    "type": "string"
                },
                "CURRENTPERIOD": {
                    "description": "当前期数",
                    "type": "integer",
                    "format": "int64"
                },
                "DATEENTERED": {
                    "description": "添加时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "description": "ID",
                    "type": "integer",
                    "format": "int64"
                },
                "LOANID": {
                    "description": "标的ID",
                    "type": "string"
                },
                "LOGS": {
                    "description": "日志信息",
                    "type": "string"
                },
                "PERIODID": {
                    "description": "批次号ID",
                    "type": "integer",
                    "format": "int64"
                },
                "SUBTYPE": {
                    "description": "类型  1:批量导入回息 2:修改回息",
                    "type": "integer",
                    "format": "int64"
                },
                "TOTALPERIOD": {
                    "description": "总期数",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "models.FortuneActivity": {
            "title": "FortuneActivity",
            "type": "object",
            "properties": {
                "ActivityName": {
                    "description": "活动名称",
                    "type": "string"
                },
                "ActivityNo": {
                    "description": "活动编号",
                    "type": "string"
                },
                "ActuallyActivityEnd": {
                    "description": "实际活动周期结束",
                    "type": "string",
                    "format": "datetime"
                },
                "ActuallyActivityStart": {
                    "description": "实际活动周期开始",
                    "type": "string",
                    "format": "datetime"
                },
                "ActuallyTotalCount": {
                    "description": "实际参与总人数（签到成功总人数）",
                    "type": "integer",
                    "format": "int64"
                },
                "Address": {
                    "description": "活动地点",
                    "type": "string"
                },
                "City": {
                    "description": "活动所在城市",
                    "type": "string"
                },
                "CityId": {
                    "description": "活动所在城市id",
                    "type": "integer",
                    "format": "int64"
                },
                "CreateTime": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Creator": {
                    "description": "创建人",
                    "type": "integer",
                    "format": "int64"
                },
                "ExpectTotalCount": {
                    "description": "预计参与总人数",
                    "type": "integer",
                    "format": "int64"
                },
                "HoldingDay": {
                    "description": "活动举办日",
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "description": "主键",
                    "type": "integer",
                    "format": "int64"
                },
                "LastUpdateTime": {
                    "description": "最后更新时间",
                    "type": "string",
                    "format": "datetime"
                },
                "PlanActivityEnd": {
                    "description": "计划活动周期结束",
                    "type": "string",
                    "format": "datetime"
                },
                "PlanActivityStart": {
                    "description": "计划活动周期开始",
                    "type": "string",
                    "format": "datetime"
                },
                "Province": {
                    "description": "活动所在省份",
                    "type": "string"
                },
                "ProvinceId": {
                    "description": "活动所在省份id",
                    "type": "integer",
                    "format": "int64"
                },
                "Schedule": {
                    "description": "活动日程",
                    "type": "string"
                },
                "Status": {
                    "description": "活动状态：1 新建；2 预热；3 活动中；4 完成；5 取消；6 暂停；",
                    "type": "integer",
                    "format": "int32"
                },
                "SurplusQuota": {
                    "description": "活动总剩余名额（预计参与总人数 - 已经报名成功的人数（审批通过））",
                    "type": "integer",
                    "format": "int64"
                },
                "TargetPerformance": {
                    "description": "目标业绩",
                    "type": "string"
                },
                "TaskId": {
                    "description": "用户组编号",
                    "type": "integer",
                    "format": "int64"
                },
                "TaskName": {
                    "description": "用户组名称",
                    "type": "string"
                },
                "Topic": {
                    "description": "活动主题",
                    "type": "string"
                },
                "Type": {
                    "description": "活动类型：1 客户转化；2 获取新客；3 品牌；",
                    "type": "integer",
                    "format": "int32"
                },
                "UserCondition": {
                    "description": "用户条件",
                    "type": "string"
                },
                "UserGroupCondition": {
                    "description": "用户条件是否存在：0 否；1 是；",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "models.FortuneActivityCustom": {
            "title": "FortuneActivityCustom",
            "type": "object",
            "properties": {
                "ActivityNo": {
                    "description": "活动编号",
                    "type": "string"
                },
                "BindSamId": {
                    "description": "绑定的客户经理ID",
                    "type": "integer",
                    "format": "int64"
                },
                "BindSamName": {
                    "description": "绑定的客户经理姓名",
                    "type": "string"
                },
                "CreateTime": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Creator": {
                    "description": "创建人",
                    "type": "integer",
                    "format": "int64"
                },
                "Id": {
                    "description": "主键",
                    "type": "integer",
                    "format": "int64"
                },
                "LastUpdateTime": {
                    "description": "最后更新时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Mobile": {
                    "description": "手机号码",
                    "type": "string"
                },
                "Name": {
                    "description": "用户姓名",
                    "type": "string"
                },
                "OwnCity": {
                    "description": "所属城市",
                    "type": "string"
                },
                "OwnCityId": {
                    "description": "所属城市id",
                    "type": "integer",
                    "format": "int64"
                },
                "OwnGroup": {
                    "description": "所属团队",
                    "type": "string"
                },
                "OwnGroupId": {
                    "description": "所属团队id",
                    "type": "integer",
                    "format": "int64"
                },
                "UserId": {
                    "description": "用户ID",
                    "type": "string"
                },
                "Username": {
                    "description": "用户名",
                    "type": "string"
                }
            }
        },
        "models.FortuneActivityExtend": {
            "title": "FortuneActivityExtend",
            "type": "object",
            "properties": {
                "ActivityNo": {
                    "description": "活动编号",
                    "type": "string"
                },
                "CreateTime": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Creator": {
                    "description": "创建人",
                    "type": "integer",
                    "format": "int64"
                },
                "ExpectMaxCount": {
                    "description": "最大预计参与人数",
                    "type": "integer",
                    "format": "int64"
                },
                "ExpectMinCount": {
                    "description": "最小预计参与人数",
                    "type": "integer",
                    "format": "int64"
                },
                "Id": {
                    "description": "主键",
                    "type": "integer",
                    "format": "int64"
                },
                "LastUpdateTime": {
                    "description": "最后更新时间",
                    "type": "string",
                    "format": "datetime"
                },
                "SponsorCity": {
                    "description": "活动主办城市",
                    "type": "string"
                },
                "SponsorCityId": {
                    "description": "活动主办城市id",
                    "type": "integer",
                    "format": "int64"
                },
                "SponsorGroup": {
                    "description": "活动主办组",
                    "type": "string"
                },
                "SponsorGroupId": {
                    "description": "活动主办组id",
                    "type": "integer",
                    "format": "int64"
                },
                "SurplusQuota": {
                    "description": "剩余名额：（预计参与总人数的最大值 - 本组已经审批通过的参加的用户人数）",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.FortuneActivityResult": {
            "title": "FortuneActivityResult",
            "type": "object",
            "properties": {
                "ActivityNo": {
                    "description": "活动编号",
                    "type": "string"
                },
                "CreateTime": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Creator": {
                    "description": "创建人",
                    "type": "integer",
                    "format": "int64"
                },
                "Editor": {
                    "description": "修改人",
                    "type": "integer",
                    "format": "int64"
                },
                "Enclosure": {
                    "description": "附件",
                    "type": "string"
                },
                "Id": {
                    "description": "主键",
                    "type": "integer",
                    "format": "int64"
                },
                "LastUpdateTime": {
                    "description": "最后更新时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Money": {
                    "description": "金额",
                    "type": "integer",
                    "format": "int64"
                },
                "Name": {
                    "description": "资料名称/费用名称",
                    "type": "string"
                },
                "Type": {
                    "description": "类型：1 活动附件管理；2 活动执行费用管理；",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "models.FortuneActivitySignin": {
            "title": "FortuneActivitySignin",
            "type": "object",
            "properties": {
                "ActivityNo": {
                    "description": "活动编号",
                    "type": "string"
                },
                "Appoint": {
                    "description": "是否为预约用户：0 否；1 是；",
                    "type": "integer",
                    "format": "int32"
                },
                "City": {
                    "description": "签到城市",
                    "type": "string"
                },
                "CreateTime": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Creator": {
                    "description": "创建人",
                    "type": "integer",
                    "format": "int64"
                },
                "Id": {
                    "description": "主键",
                    "type": "integer",
                    "format": "int64"
                },
                "InviterMobile": {
                    "description": "邀请人手机号码",
                    "type": "string"
                },
                "LastUpdateTime": {
                    "description": "最后更新时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Mobile": {
                    "description": "用户手机号",
                    "type": "string"
                },
                "Name": {
                    "description": "用户姓名",
                    "type": "string"
                },
                "Province": {
                    "description": "签到省份",
                    "type": "string"
                },
                "RmCity": {
                    "description": "绑定的RM所属城市",
                    "type": "integer",
                    "format": "int64"
                },
                "RmGroup": {
                    "description": "绑定的RM所属团队",
                    "type": "integer",
                    "format": "int64"
                },
                "RmName": {
                    "description": "绑定的RM姓名",
                    "type": "string"
                },
                "Type": {
                    "description": "签到方式：1 现场扫码；2 现场签字；",
                    "type": "integer",
                    "format": "int32"
                },
                "UserId": {
                    "description": "用户ID",
                    "type": "string"
                }
            }
        },
        "models.FortuneActivitySignup": {
            "title": "FortuneActivitySignup",
            "type": "object",
            "properties": {
                "ActivityNo": {
                    "description": "活动编号",
                    "type": "string"
                },
                "AppointmentUser": {
                    "description": "是否为预约用户：0 否；1 是；",
                    "type": "integer",
                    "format": "int32"
                },
                "ApproveTime": {
                    "description": "审批时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Approver": {
                    "description": "审批人",
                    "type": "integer",
                    "format": "int64"
                },
                "CancleTime": {
                    "description": "取消报名时间",
                    "type": "string",
                    "format": "datetime"
                },
                "CreateTime": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Creator": {
                    "description": "创建人",
                    "type": "integer",
                    "format": "int64"
                },
                "Id": {
                    "description": "主键",
                    "type": "integer",
                    "format": "int64"
                },
                "LastUpdateTime": {
                    "description": "最后更新时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Mobile": {
                    "description": "用户手机号",
                    "type": "string"
                },
                "Name": {
                    "description": "用户姓名",
                    "type": "string"
                },
                "OwnCity": {
                    "description": "所属城市",
                    "type": "string"
                },
                "OwnCityId": {
                    "description": "所属城市id",
                    "type": "integer",
                    "format": "int64"
                },
                "OwnGroup": {
                    "description": "所属团队",
                    "type": "string"
                },
                "OwnGroupId": {
                    "description": "所属团队id",
                    "type": "integer",
                    "format": "int64"
                },
                "Reason": {
                    "description": "拒绝原因：1 不符合条件；2 人数已满；3 活动暂停；4 其他；",
                    "type": "integer",
                    "format": "int32"
                },
                "Remark": {
                    "description": "说明：拒绝时必填",
                    "type": "string"
                },
                "Status": {
                    "description": "状态：1 待确认；2 已通过；3 已拒绝；4 已取消；",
                    "type": "integer",
                    "format": "int32"
                },
                "Type": {
                    "description": "是否为符合条件用户：0 否；1 是；",
                    "type": "integer",
                    "format": "int32"
                },
                "UserId": {
                    "description": "用户ID",
                    "type": "string"
                }
            }
        },
        "models.FortuneAppropriateApproveHistory": {
            "title": "FortuneAppropriateApproveHistory",
            "type": "object",
            "properties": {
                "AddTime": {
                    "type": "string",
                    "format": "datetime"
                },
                "AppropriateInfoId": {
                    "type": "integer",
                    "format": "int64"
                },
                "AuditName": {
                    "description": "审核人",
                    "type": "string"
                },
                "Deleted": {
                    "type": "integer",
                    "format": "int32"
                },
                "HistoryId": {
                    "description": "历史记录id",
                    "type": "integer",
                    "format": "int64"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Mark": {
                    "description": "备注",
                    "type": "string"
                },
                "Reason": {
                    "description": "拒绝理由",
                    "type": "integer",
                    "format": "int32"
                },
                "Status": {
                    "description": "状态 1审核通过,2审核拒绝",
                    "type": "integer",
                    "format": "int32"
                },
                "SubmitName": {
                    "description": "提交人",
                    "type": "string"
                },
                "SubmitTime": {
                    "description": "提交审核的时间",
                    "type": "string",
                    "format": "datetime"
                },
                "UpdateTime": {
                    "type": "string",
                    "format": "datetime"
                },
                "UserId": {
                    "description": "用户user_id",
                    "type": "string"
                }
            }
        },
        "models.FortuneAppropriateInfo": {
            "title": "FortuneAppropriateInfo",
            "type": "object",
            "properties": {
                "AddTime": {
                    "type": "string",
                    "format": "datetime"
                },
                "AppropriateInfo": {
                    "description": "适当性信息,json格式",
                    "type": "string"
                },
                "ApproveFlowId": {
                    "description": "审批流程ID",
                    "type": "integer",
                    "format": "int64"
                },
                "ApproveTaskId": {
                    "description": "审批任务ID",
                    "type": "integer",
                    "format": "int64"
                },
                "BindSamId": {
                    "description": "该记录提交时的id",
                    "type": "string"
                },
                "City": {
                    "description": "提交时的城市",
                    "type": "integer",
                    "format": "int32"
                },
                "CreateUser": {
                    "description": "创建人姓名",
                    "type": "string"
                },
                "CurrentBindSamCityId": {
                    "description": "当前绑定客户经理所属城市ID",
                    "type": "string"
                },
                "CurrentBindSamId": {
                    "description": "当前绑定客户经理ID",
                    "type": "string"
                },
                "Deleted": {
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IsEffective": {
                    "description": "是否有效，0是，1否",
                    "type": "integer",
                    "format": "int32"
                },
                "NowApproveHistoryId": {
                    "description": "当前任务审批节点ID",
                    "type": "integer",
                    "format": "int64"
                },
                "NowApproveProcessId": {
                    "description": "当前审批节点ID",
                    "type": "integer",
                    "format": "int64"
                },
                "PreCustomerSubscribeStatus": {
                    "description": "理财师分配预处理标识默认0,1未分配,2已分配",
                    "type": "integer",
                    "format": "int32"
                },
                "Source": {
                    "description": "来源1客户端,2rm后端,3pad端",
                    "type": "integer",
                    "format": "int32"
                },
                "Status": {
                    "description": "状态0成功,1待审核,2失败",
                    "type": "integer",
                    "format": "int32"
                },
                "UpdateTime": {
                    "type": "string",
                    "format": "datetime"
                },
                "UserId": {
                    "description": "用户userId",
                    "type": "string"
                }
            }
        },
        "models.FortuneApprovalBizIdent": {
            "title": "FortuneApprovalBizIdent",
            "type": "object",
            "properties": {
                "BizName": {
                    "description": "业务名称",
                    "type": "string"
                },
                "CreateUserId": {
                    "description": "创建人ID",
                    "type": "string"
                },
                "CustomBizTableName": {
                    "description": "自定义配置表名",
                    "type": "string"
                },
                "CustomBizUrl": {
                    "description": "自定义业务配置地址",
                    "type": "string"
                },
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "description": "修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IsRelevanceCustomBiz": {
                    "description": "是关联自定义业务 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "UniqueIdent": {
                    "description": "唯一标识",
                    "type": "string"
                }
            }
        },
        "models.FortuneApprovalFlowRelevance": {
            "title": "FortuneApprovalFlowRelevance",
            "type": "object",
            "properties": {
                "ApprovalUserId": {
                    "description": "审批人ID",
                    "type": "string"
                },
                "CreateUserId": {
                    "description": "创建人ID",
                    "type": "string"
                },
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "description": "修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "FlowStepId": {
                    "description": "流程步骤ID",
                    "type": "integer",
                    "format": "int64"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.FortuneApprovalFlowStep": {
            "title": "FortuneApprovalFlowStep",
            "type": "object",
            "properties": {
                "BizIdentId": {
                    "description": "审批业务标识ID",
                    "type": "integer",
                    "format": "int64"
                },
                "CreateUserId": {
                    "description": "创建人ID",
                    "type": "string"
                },
                "CustomBizId": {
                    "description": "自定义业务ID",
                    "type": "integer",
                    "format": "int64"
                },
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "description": "修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Level": {
                    "description": "级别",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "models.FortuneArea": {
            "title": "FortuneArea",
            "type": "object",
            "properties": {
                "CreatedUserId": {
                    "description": "创建人ID",
                    "type": "string"
                },
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "description": "修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除 0否 1是",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Json": {
                    "description": "海外门店ID相关信息",
                    "type": "string"
                },
                "ModifiedUserId": {
                    "description": "修改人ID",
                    "type": "string"
                },
                "OverseasShopId": {
                    "description": "海外门店ID",
                    "type": "integer",
                    "format": "int64"
                },
                "Pid": {
                    "description": "区ID",
                    "type": "integer",
                    "format": "int32"
                },
                "Title": {
                    "description": "名称",
                    "type": "string"
                },
                "Type": {
                    "description": "地区类型 1大区 2市",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "models.FortuneAssetProof": {
            "title": "FortuneAssetProof",
            "type": "object",
            "properties": {
                "AddTime": {
                    "type": "string",
                    "format": "datetime"
                },
                "ApproveFlowId": {
                    "description": "审批流程ID",
                    "type": "integer",
                    "format": "int64"
                },
                "ApproveTaskId": {
                    "description": "审批任务ID",
                    "type": "integer",
                    "format": "int64"
                },
                "AssetPicStatus": {
                    "description": "资产证明状态",
                    "type": "integer",
                    "format": "int32"
                },
                "Assets": {
                    "description": "1三年收入不低于50w , 2金额不低于300W，默认0",
                    "type": "integer",
                    "format": "int32"
                },
                "BindSamId": {
                    "description": "绑定理财师id",
                    "type": "string"
                },
                "City": {
                    "description": "提交时的城市",
                    "type": "integer",
                    "format": "int32"
                },
                "CreateUser": {
                    "description": "创建人",
                    "type": "string"
                },
                "CurrentBindSamCityId": {
                    "description": "当前绑定客户经理所属城市ID",
                    "type": "string"
                },
                "CurrentBindSamId": {
                    "description": "当前绑定客户经理ID",
                    "type": "string"
                },
                "Deleted": {
                    "type": "integer",
                    "format": "int32"
                },
                "ExpireTime": {
                    "description": "过期时间",
                    "type": "integer",
                    "format": "int64"
                },
                "FailRetry": {
                    "description": "0非重试,1重试",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdPicStatus": {
                    "description": "身份证图片你上传的状态",
                    "type": "integer",
                    "format": "int32"
                },
                "Mark": {
                    "description": "备注",
                    "type": "string"
                },
                "NowApproveHistoryId": {
                    "description": "当前任务审批节点ID",
                    "type": "integer",
                    "format": "int64"
                },
                "NowApproveProcessId": {
                    "description": "当前审批节点ID",
                    "type": "integer",
                    "format": "int64"
                },
                "Reason": {
                    "description": "拒绝理由",
                    "type": "integer",
                    "format": "int32"
                },
                "Source": {
                    "description": "信息来源，1客户移动端,2rm后台,3pad移动端",
                    "type": "integer",
                    "format": "int32"
                },
                "Status": {
                    "description": "状态 1待审核，2已认证，3认证失败,4认证过期",
                    "type": "integer",
                    "format": "int32"
                },
                "UpdateTime": {
                    "type": "string",
                    "format": "datetime"
                },
                "UpdateUser": {
                    "description": "修改人",
                    "type": "string"
                },
                "UserId": {
                    "description": "用户user_id",
                    "type": "string"
                }
            }
        },
        "models.FortuneAssetProofAttachment": {
            "title": "FortuneAssetProofAttachment",
            "type": "object",
            "properties": {
                "AddTime": {
                    "type": "string",
                    "format": "datetime"
                },
                "AssetProofId": {
                    "description": "合格投资者记录id",
                    "type": "integer",
                    "format": "int64"
                },
                "Deleted": {
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "PicName": {
                    "description": "图片名称",
                    "type": "string"
                },
                "PicType": {
                    "description": "图片类型,1年收入50万,2资产不低于300万，3身份证",
                    "type": "integer",
                    "format": "int32"
                },
                "PicUrl": {
                    "description": "上传图片的地址",
                    "type": "string"
                }
            }
        },
        "models.FortuneAssetProofHistory": {
            "title": "FortuneAssetProofHistory",
            "type": "object",
            "properties": {
                "AddTime": {
                    "type": "string",
                    "format": "datetime"
                },
                "AssetProofId": {
                    "type": "integer",
                    "format": "int64"
                },
                "AuditName": {
                    "description": "审核人",
                    "type": "string"
                },
                "Deleted": {
                    "type": "integer",
                    "format": "int32"
                },
                "HistoryId": {
                    "description": "审批历史id",
                    "type": "integer",
                    "format": "int64"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Mark": {
                    "description": "备注",
                    "type": "string"
                },
                "Reason": {
                    "description": "拒绝理由",
                    "type": "integer",
                    "format": "int32"
                },
                "Status": {
                    "description": "状态 1审核通过,2审核拒绝",
                    "type": "integer",
                    "format": "int32"
                },
                "SubmitTime": {
                    "description": "提交审核的时间",
                    "type": "string",
                    "format": "datetime"
                },
                "UpdateTime": {
                    "type": "string",
                    "format": "datetime"
                },
                "UserId": {
                    "description": "用户user_id",
                    "type": "string"
                }
            }
        },
        "models.FortuneBankAuthApproveHistory": {
            "title": "FortuneBankAuthApproveHistory",
            "type": "object",
            "properties": {
                "AccountName": {
                    "description": "财管用户姓名",
                    "type": "string"
                },
                "AddTime": {
                    "type": "string",
                    "format": "datetime"
                },
                "AuditName": {
                    "description": "审核人",
                    "type": "string"
                },
                "BankAuthInfoId": {
                    "type": "integer",
                    "format": "int64"
                },
                "Deleted": {
                    "type": "integer",
                    "format": "int32"
                },
                "HistoryId": {
                    "description": "流程历史id",
                    "type": "integer",
                    "format": "int64"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Mark": {
                    "description": "备注",
                    "type": "string"
                },
                "Reason": {
                    "description": "拒绝理由",
                    "type": "integer",
                    "format": "int32"
                },
                "Status": {
                    "description": "状态 1审核通过,2审核拒绝",
                    "type": "integer",
                    "format": "int32"
                },
                "SubmitName": {
                    "description": "提交人",
                    "type": "string"
                },
                "SubmitTime": {
                    "description": "提交审核的时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Type": {
                    "description": "审核类型,1开户，2增卡,3修改用户信息",
                    "type": "integer",
                    "format": "int32"
                },
                "UpdateTime": {
                    "type": "string",
                    "format": "datetime"
                },
                "UserId": {
                    "description": "用户user_id",
                    "type": "string"
                }
            }
        },
        "models.FortuneBankAuthHistory": {
            "title": "FortuneBankAuthHistory",
            "type": "object",
            "properties": {
                "AddTime": {
                    "type": "string",
                    "format": "datetime"
                },
                "Audit": {
                    "description": "审核人",
                    "type": "string"
                },
                "BankBigName": {
                    "description": "开户行",
                    "type": "string"
                },
                "BankName": {
                    "description": "开户行支行",
                    "type": "string"
                },
                "BankNum": {
                    "description": "银行卡号",
                    "type": "string"
                },
                "Deleted": {
                    "type": "integer",
                    "format": "int32"
                },
                "ExtInfo": {
                    "description": "扩展信息",
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Mark": {
                    "description": "说明",
                    "type": "string"
                },
                "OldBankBigName": {
                    "description": "更换的开户行",
                    "type": "string"
                },
                "OldBankName": {
                    "description": "更换的开户行支行",
                    "type": "string"
                },
                "OldBankNum": {
                    "description": "更换的银行卡号",
                    "type": "string"
                },
                "Reason": {
                    "description": "拒绝原因",
                    "type": "integer",
                    "format": "int32"
                },
                "Status": {
                    "description": "状态位,默认0认证完成,1更换中,2更换失败",
                    "type": "integer",
                    "format": "int32"
                },
                "SubmitTime": {
                    "description": "申请提交的时间",
                    "type": "string",
                    "format": "datetime"
                },
                "UpdateTime": {
                    "type": "string",
                    "format": "datetime"
                },
                "UserId": {
                    "description": "用户userId",
                    "type": "string"
                }
            }
        },
        "models.FortuneBankAuthInfo": {
            "title": "FortuneBankAuthInfo",
            "type": "object",
            "properties": {
                "AddTime": {
                    "type": "string",
                    "format": "datetime"
                },
                "Address": {
                    "description": "通信地址",
                    "type": "string"
                },
                "ApproveFlowId": {
                    "description": "审批流程ID",
                    "type": "integer",
                    "format": "int64"
                },
                "ApproveTaskId": {
                    "description": "审批任务ID",
                    "type": "integer",
                    "format": "int64"
                },
                "AuditStatus": {
                    "description": "为了兼容修改手机号，0通过,1审核中，2审核失败",
                    "type": "integer",
                    "format": "int32"
                },
                "BankCity": {
                    "description": "市",
                    "type": "string"
                },
                "BankId": {
                    "description": "银行对应的id",
                    "type": "integer",
                    "format": "int64"
                },
                "BankName": {
                    "description": "开户行",
                    "type": "string"
                },
                "BankNum": {
                    "description": "银行卡号",
                    "type": "string"
                },
                "BankProvince": {
                    "description": "省",
                    "type": "string"
                },
                "BindSamId": {
                    "description": "该条记录提交时的id",
                    "type": "string"
                },
                "City": {
                    "description": "提交时的城市",
                    "type": "integer",
                    "format": "int32"
                },
                "CopyId": {
                    "description": "复制的记录id",
                    "type": "integer",
                    "format": "int64"
                },
                "CreateUser": {
                    "description": "创建人",
                    "type": "string"
                },
                "CurrentBindSamCityId": {
                    "description": "当前绑定客户经理所属城市ID",
                    "type": "string"
                },
                "CurrentBindSamId": {
                    "description": "当前绑定客户经理ID",
                    "type": "string"
                },
                "Deleted": {
                    "type": "integer",
                    "format": "int32"
                },
                "FailRetry": {
                    "description": "记录失败后是否再提交",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdNum": {
                    "description": "身份证号",
                    "type": "string"
                },
                "Mark": {
                    "description": "说明",
                    "type": "string"
                },
                "Mobile": {
                    "description": "银行预留手机号",
                    "type": "string"
                },
                "Name": {
                    "description": "真实姓名",
                    "type": "string"
                },
                "NowApproveHistoryId": {
                    "description": "当前任务审批节点ID",
                    "type": "integer",
                    "format": "int64"
                },
                "NowApproveProcessId": {
                    "description": "当前审批节点ID",
                    "type": "integer",
                    "format": "int64"
                },
                "Platform": {
                    "description": "开户来源",
                    "type": "string"
                },
                "Reason": {
                    "description": "拒绝原因",
                    "type": "integer",
                    "format": "int32"
                },
                "Source": {
                    "description": "申请来源，1客户端，2后台,3pad端",
                    "type": "integer",
                    "format": "int32"
                },
                "Status": {
                    "description": "状态位,默认0认证完成,1更换中(新版本为审核中),2更换失败(新版本为审核失败),3认证中,4添加其他银行卡完成,5修改手机号",
                    "type": "integer",
                    "format": "int32"
                },
                "Type": {
                    "description": "业务类型，1开户,2绑卡，3修改手机号",
                    "type": "integer",
                    "format": "int32"
                },
                "UpdateTime": {
                    "type": "string",
                    "format": "datetime"
                },
                "UpdateUser": {
                    "description": "修改人",
                    "type": "string"
                },
                "UserId": {
                    "description": "用户userId",
                    "type": "string"
                }
            }
        },
        "models.FortuneBankAuthInfoCstm": {
            "title": "FortuneBankAuthInfoCstm",
            "type": "object",
            "properties": {
                "AddTime": {
                    "type": "string",
                    "format": "datetime"
                },
                "Attachment": {
                    "description": "附件",
                    "type": "string"
                },
                "BankAuthInfoId": {
                    "description": "bank_auth_info表id",
                    "type": "integer",
                    "format": "int64"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "NewMobile": {
                    "description": "新手机号",
                    "type": "string"
                },
                "UpdateTime": {
                    "type": "string",
                    "format": "datetime"
                }
            }
        },
        "models.FortuneBankAuthInfo很危险的": {
            "title": "FortuneBankAuthInfo很危险的",
            "type": "object",
            "properties": {
                "AddTime": {
                    "type": "string",
                    "format": "datetime"
                },
                "BankId": {
                    "description": "银行对应的id",
                    "type": "integer",
                    "format": "int64"
                },
                "BankName": {
                    "description": "开户行",
                    "type": "string"
                },
                "BankNum": {
                    "description": "银行卡号",
                    "type": "string"
                },
                "Deleted": {
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdNum": {
                    "description": "身份证号",
                    "type": "string"
                },
                "Mark": {
                    "description": "说明",
                    "type": "string"
                },
                "Mobile": {
                    "description": "银行预留手机号",
                    "type": "string"
                },
                "Name": {
                    "description": "真实姓名",
                    "type": "string"
                },
                "Reason": {
                    "description": "拒绝原因",
                    "type": "integer",
                    "format": "int32"
                },
                "Status": {
                    "description": "状态位,默认0认证完成,1更换中,2更换失败",
                    "type": "integer",
                    "format": "int32"
                },
                "UpdateTime": {
                    "type": "string",
                    "format": "datetime"
                },
                "UserId": {
                    "description": "用户userId",
                    "type": "string"
                }
            }
        },
        "models.FortuneBankList": {
            "title": "FortuneBankList",
            "type": "object",
            "properties": {
                "AgentCode": {
                    "description": "机构代码",
                    "type": "integer",
                    "format": "int64"
                },
                "BankCode": {
                    "description": "银行代码",
                    "type": "string"
                },
                "BankName": {
                    "description": "银行名称",
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.FortuneBatchChangeTask": {
            "title": "FortuneBatchChangeTask",
            "type": "object",
            "properties": {
                "CreatedUserId": {
                    "description": "创建人ID",
                    "type": "string"
                },
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "description": "修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "ExecuteTime": {
                    "description": "执行时间",
                    "type": "string",
                    "format": "datetime"
                },
                "FileName": {
                    "description": "文件名",
                    "type": "string"
                },
                "FilePath": {
                    "description": "文件路径",
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ModifiedUserId": {
                    "description": "修改人ID",
                    "type": "string"
                },
                "ShowFilePath": {
                    "description": "展示路径",
                    "type": "string"
                },
                "Status": {
                    "description": "状态 0:无 1:未处理 2:处理中 3:处理完成",
                    "type": "integer",
                    "format": "int32"
                },
                "Type": {
                    "description": "类型 0:无 1:解绑 2:变更",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "models.FortuneBatchChangeTaskDetail": {
            "title": "FortuneBatchChangeTaskDetail",
            "type": "object",
            "properties": {
                "BindSamId": {
                    "description": "绑定客户经理ID",
                    "type": "string"
                },
                "BindSamNumber": {
                    "description": "绑定客户经理编号",
                    "type": "string"
                },
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "description": "修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "Descrition": {
                    "description": "描述",
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Status": {
                    "description": "状态 0:无 1:成功 2:失败",
                    "type": "integer",
                    "format": "int32"
                },
                "TaskId": {
                    "description": "任务ID",
                    "type": "integer",
                    "format": "int64"
                },
                "UserId": {
                    "description": "用户ID",
                    "type": "string"
                }
            }
        },
        "models.FortuneCallHistoryAttachmentInfo": {
            "title": "FortuneCallHistoryAttachmentInfo",
            "type": "object",
            "properties": {
                "CreateUserId": {
                    "type": "string"
                },
                "DateEntered": {
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "FileName": {
                    "description": "文件名",
                    "type": "string"
                },
                "FilePath": {
                    "description": "文件路径",
                    "type": "string"
                },
                "HistoryId": {
                    "description": "沟通历史ID",
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Type": {
                    "description": "类型",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "models.FortuneCanalSubscribe": {
            "title": "FortuneCanalSubscribe",
            "type": "object",
            "properties": {
                "AllotDate": {
                    "description": "分配时间",
                    "type": "string",
                    "format": "datetime"
                },
                "BinSamId": {
                    "description": "分配的客户经理id",
                    "type": "string"
                },
                "BinSamName": {
                    "description": "分配的客户经理姓名",
                    "type": "string"
                },
                "Canal": {
                    "description": "渠道号",
                    "type": "string"
                },
                "CcAllocateRefId": {
                    "description": "电销客服分配关联id",
                    "type": "string"
                },
                "CommitBinSamName": {
                    "description": "提交预约时对接的客户经理姓名",
                    "type": "string"
                },
                "CommitIsBindSam": {
                    "description": "提交预约时是否有对接客户经理",
                    "type": "string"
                },
                "DateEntered": {
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Remark": {
                    "description": "备注",
                    "type": "string"
                },
                "Status": {
                    "description": "状态 0=未分配、1=已分配、2=分配失败",
                    "type": "integer",
                    "format": "int32"
                },
                "SubscribeLocation": {
                    "description": "提交预约时所在地",
                    "type": "string"
                },
                "UserFullName": {
                    "description": "用户姓名",
                    "type": "string"
                },
                "UserId": {
                    "description": "用户ID",
                    "type": "string"
                },
                "UserMobile": {
                    "description": "用户注册手机号",
                    "type": "string"
                },
                "UserMobileLocation": {
                    "description": "用户注册手机号归属地",
                    "type": "string"
                },
                "UserRegisterDatetime": {
                    "description": "用户注册时间",
                    "type": "string",
                    "format": "datetime"
                }
            }
        },
        "models.FortuneCanalSubscribeAllotRecord": {
            "title": "FortuneCanalSubscribeAllotRecord",
            "type": "object",
            "properties": {
                "AllotInfo": {
                    "description": "分配信息",
                    "type": "string"
                },
                "AllotOperateId": {
                    "description": "分配操作者id",
                    "type": "string"
                },
                "AllotOperateName": {
                    "description": "分配操作者姓名",
                    "type": "string"
                },
                "AllotStatus": {
                    "description": "状态 0=未分配、1=已分配、2=分配失败",
                    "type": "integer",
                    "format": "int32"
                },
                "BinSamId": {
                    "description": "分配的客户经理id",
                    "type": "string"
                },
                "CanalSubscribeId": {
                    "description": "渠道预约id",
                    "type": "integer",
                    "format": "int64"
                },
                "CanalSubscribeVersion": {
                    "description": "分配信息",
                    "type": "string"
                },
                "DateEntered": {
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "UserId": {
                    "description": "用户ID",
                    "type": "string"
                }
            }
        },
        "models.FortuneChangeOfficialHistory": {
            "title": "FortuneChangeOfficialHistory",
            "type": "object",
            "properties": {
                "CustomerId": {
                    "description": "客户ID",
                    "type": "string"
                },
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "description": "修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "SamId": {
                    "description": "客户经理ID",
                    "type": "string"
                },
                "Status": {
                    "description": "状态 0:无 1:锁定 2:正式 3:解绑",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "models.FortuneClassifyCycleAssociate": {
            "title": "FortuneClassifyCycleAssociate",
            "type": "object",
            "properties": {
                "ClassifyId": {
                    "description": "分类id",
                    "type": "integer",
                    "format": "int32"
                },
                "CreateDate": {
                    "description": "日历时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "description": "自增id",
                    "type": "integer",
                    "format": "int64"
                },
                "TaskId": {
                    "description": "周期性任务id",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.FortuneClassifyCycleTask": {
            "title": "FortuneClassifyCycleTask",
            "type": "object",
            "properties": {
                "ClassifyInfo": {
                    "description": "任务信息json",
                    "type": "string"
                },
                "CreateTime": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "CreateUserId": {
                    "description": "创建人id",
                    "type": "string"
                },
                "Deleted": {
                    "description": "是否被删除 0否 1是",
                    "type": "integer",
                    "format": "int32"
                },
                "EndDate": {
                    "description": "结束日期",
                    "type": "string",
                    "format": "datetime"
                },
                "ExtraData": {
                    "description": "备注信息",
                    "type": "string"
                },
                "Id": {
                    "description": "周期性任务id",
                    "type": "integer",
                    "format": "int64"
                },
                "IsRepetitive": {
                    "description": "是否排重  0 排重 1不排重",
                    "type": "integer",
                    "format": "int32"
                },
                "Memo": {
                    "description": "备注信息",
                    "type": "string"
                },
                "Notify": {
                    "description": "提醒类型",
                    "type": "string"
                },
                "NotifyDate": {
                    "description": "结束日期",
                    "type": "string",
                    "format": "datetime"
                },
                "StartDate": {
                    "description": "开始日期",
                    "type": "string",
                    "format": "datetime"
                },
                "TaskName": {
                    "description": "分类名名",
                    "type": "string"
                },
                "TaskStatus": {
                    "description": "任务状态 1未执行 2执行中  3已执行 4执行失败 ",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "models.FortuneClassifyTask": {
            "title": "FortuneClassifyTask",
            "type": "object",
            "properties": {
                "ClassifyInfo": {
                    "description": "任务信息json",
                    "type": "string"
                },
                "ClassifyName": {
                    "description": "分类名名",
                    "type": "string"
                },
                "CostTime": {
                    "description": "花费时间",
                    "type": "integer",
                    "format": "int32"
                },
                "CreateTime": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "CreateUserId": {
                    "description": "创建人id",
                    "type": "string"
                },
                "Deleted": {
                    "description": "是否被删除 0否 1是",
                    "type": "integer",
                    "format": "int32"
                },
                "ExcelPath": {
                    "description": "生成的excel地址",
                    "type": "string"
                },
                "ExtraData": {
                    "description": "备注信息",
                    "type": "string"
                },
                "Id": {
                    "description": "自增id",
                    "type": "integer",
                    "format": "int64"
                },
                "Memo": {
                    "description": "备注信息",
                    "type": "string"
                },
                "ModifyTime": {
                    "description": "更新时间",
                    "type": "string",
                    "format": "datetime"
                },
                "RandKey": {
                    "description": "随机串",
                    "type": "string"
                },
                "RecordCount": {
                    "description": "记录行数",
                    "type": "integer",
                    "format": "int64"
                },
                "SetCount": {
                    "description": "集合个数",
                    "type": "integer",
                    "format": "int64"
                },
                "TaskStatus": {
                    "description": "任务状态 1未执行 2执行中  3已执行 4执行失败 ",
                    "type": "integer",
                    "format": "int32"
                },
                "TaskType": {
                    "description": "任务状态 1普通筛选 4周期性任务 ",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "models.FortuneClassifyTaskRecordInfo": {
            "title": "FortuneClassifyTaskRecordInfo",
            "type": "object",
            "properties": {
                "AccFields": {
                    "description": "json格式的数据 便于动态变更结果字段",
                    "type": "string"
                },
                "ClassifyId": {
                    "description": "分类ID",
                    "type": "integer",
                    "format": "int64"
                },
                "Deleted": {
                    "description": "是否删除",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Uid": {
                    "description": "int型uid",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.FortuneClassifyTaskRecordInfo201808": {
            "title": "FortuneClassifyTaskRecordInfo201808",
            "type": "object",
            "properties": {
                "AccFields": {
                    "description": "json格式的数据 便于动态变更结果字段",
                    "type": "string"
                },
                "ClassifyId": {
                    "description": "分类ID",
                    "type": "integer",
                    "format": "int64"
                },
                "Deleted": {
                    "description": "是否删除",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Uid": {
                    "description": "int型uid",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.FortuneClassifyTaskRecordInfo201809": {
            "title": "FortuneClassifyTaskRecordInfo201809",
            "type": "object",
            "properties": {
                "AccFields": {
                    "description": "json格式的数据 便于动态变更结果字段",
                    "type": "string"
                },
                "ClassifyId": {
                    "description": "分类ID",
                    "type": "integer",
                    "format": "int64"
                },
                "Deleted": {
                    "description": "是否删除",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Uid": {
                    "description": "int型uid",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.FortuneClassifyTaskRecordInfo201810": {
            "title": "FortuneClassifyTaskRecordInfo201810",
            "type": "object",
            "properties": {
                "AccFields": {
                    "description": "json格式的数据 便于动态变更结果字段",
                    "type": "string"
                },
                "ClassifyId": {
                    "description": "分类ID",
                    "type": "integer",
                    "format": "int64"
                },
                "Deleted": {
                    "description": "是否删除",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Uid": {
                    "description": "int型uid",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.FortuneClassifyTaskRecordInfo201811": {
            "title": "FortuneClassifyTaskRecordInfo201811",
            "type": "object",
            "properties": {
                "AccFields": {
                    "description": "json格式的数据 便于动态变更结果字段",
                    "type": "string"
                },
                "ClassifyId": {
                    "description": "分类ID",
                    "type": "integer",
                    "format": "int64"
                },
                "Deleted": {
                    "description": "是否删除",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Uid": {
                    "description": "int型uid",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.FortuneClassifyTaskRecordInfo201812": {
            "title": "FortuneClassifyTaskRecordInfo201812",
            "type": "object",
            "properties": {
                "AccFields": {
                    "description": "json格式的数据 便于动态变更结果字段",
                    "type": "string"
                },
                "ClassifyId": {
                    "description": "分类ID",
                    "type": "integer",
                    "format": "int64"
                },
                "Deleted": {
                    "description": "是否删除",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Uid": {
                    "description": "int型uid",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.FortuneClassifyTaskRecordInfo201901": {
            "title": "FortuneClassifyTaskRecordInfo201901",
            "type": "object",
            "properties": {
                "AccFields": {
                    "description": "json格式的数据 便于动态变更结果字段",
                    "type": "string"
                },
                "ClassifyId": {
                    "description": "分类ID",
                    "type": "integer",
                    "format": "int64"
                },
                "Deleted": {
                    "description": "是否删除",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Uid": {
                    "description": "int型uid",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.FortuneClassifyTaskRecordInfo201902": {
            "title": "FortuneClassifyTaskRecordInfo201902",
            "type": "object",
            "properties": {
                "AccFields": {
                    "description": "json格式的数据 便于动态变更结果字段",
                    "type": "string"
                },
                "ClassifyId": {
                    "description": "分类ID",
                    "type": "integer",
                    "format": "int64"
                },
                "Deleted": {
                    "description": "是否删除",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Uid": {
                    "description": "int型uid",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.FortuneClassifyTaskRecordInfo201906": {
            "title": "FortuneClassifyTaskRecordInfo201906",
            "type": "object",
            "properties": {
                "AccFields": {
                    "description": "json格式的数据 便于动态变更结果字段",
                    "type": "string"
                },
                "ClassifyId": {
                    "description": "分类ID",
                    "type": "integer",
                    "format": "int64"
                },
                "Deleted": {
                    "description": "是否删除",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Uid": {
                    "description": "int型uid",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.FortuneClassifyUserIntId": {
            "title": "FortuneClassifyUserIntId",
            "type": "object",
            "properties": {
                "Id": {
                    "description": "int型user_id",
                    "type": "integer",
                    "format": "int64"
                },
                "UserId": {
                    "description": "用户id",
                    "type": "string"
                }
            }
        },
        "models.FortuneClassifyUserIntIdMin": {
            "title": "FortuneClassifyUserIntIdMin",
            "type": "object",
            "properties": {
                "Id": {
                    "description": "int型user_id",
                    "type": "integer",
                    "format": "int64"
                },
                "UserId": {
                    "description": "用户id",
                    "type": "string"
                }
            }
        },
        "models.FortuneCompany": {
            "title": "FortuneCompany",
            "type": "object",
            "properties": {
                "CompanyName": {
                    "description": "企业名称",
                    "type": "string"
                },
                "CompanyNo": {
                    "description": "企业编号",
                    "type": "string"
                },
                "CorporateDateExpired": {
                    "description": "法人信息过期时间",
                    "type": "string",
                    "format": "datetime"
                },
                "CorporateKeyword": {
                    "description": "法人关键字",
                    "type": "string"
                },
                "CorporateName": {
                    "description": "法人代表",
                    "type": "string"
                },
                "CorporateSignatureName": {
                    "description": "法人签章名",
                    "type": "string"
                },
                "CorporateSignatureNo": {
                    "description": "法人电子签章码",
                    "type": "string"
                },
                "CreatedUserId": {
                    "type": "string"
                },
                "DateEntered": {
                    "type": "string",
                    "format": "datetime"
                },
                "DateExpired": {
                    "description": "到期时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Keyword": {
                    "description": "关键字",
                    "type": "string"
                },
                "SignatureNo": {
                    "description": "电子签章码",
                    "type": "string"
                }
            }
        },
        "models.FortuneCompanyInfo": {
            "title": "FortuneCompanyInfo",
            "type": "object",
            "properties": {
                "CompanyName": {
                    "description": "系统生成使用的企业名称",
                    "type": "string"
                },
                "CompanyNo": {
                    "description": "企业编号",
                    "type": "string"
                },
                "CreatedUserId": {
                    "type": "string"
                },
                "DateEntered": {
                    "type": "string",
                    "format": "datetime"
                },
                "DateExpired": {
                    "description": "到期时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "type": "integer",
                    "format": "int32"
                },
                "Format": {
                    "description": "格式 0:上传印章图 1:系统生成",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Keyword": {
                    "description": "关键字",
                    "type": "string"
                },
                "ModifiedUserId": {
                    "type": "string"
                },
                "RemarkName": {
                    "description": "企业名称备注",
                    "type": "string"
                },
                "SignatureNo": {
                    "description": "电子签章码",
                    "type": "string"
                },
                "StampFileName": {
                    "description": "印章图文件名",
                    "type": "string"
                },
                "StampFilePath": {
                    "description": "印章图文件路径",
                    "type": "string"
                }
            }
        },
        "models.FortuneCompanyInfoAttach": {
            "title": "FortuneCompanyInfoAttach",
            "type": "object",
            "properties": {
                "Category": {
                    "description": "类型 0:法人 1:合伙人",
                    "type": "integer",
                    "format": "int32"
                },
                "CompanyId": {
                    "description": "企业ID",
                    "type": "string"
                },
                "CreatedUserId": {
                    "type": "string"
                },
                "DateEntered": {
                    "type": "string",
                    "format": "datetime"
                },
                "DateExpired": {
                    "description": "到期时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "type": "integer",
                    "format": "int32"
                },
                "Format": {
                    "description": "格式 0:上传印章图 1:系统生成",
                    "type": "integer",
                    "format": "int32"
                },
                "GenerateName": {
                    "description": "系统生成使用的名称",
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdNumber": {
                    "description": "身份证号",
                    "type": "string"
                },
                "Keyword": {
                    "description": "关键字",
                    "type": "string"
                },
                "ModifiedUserId": {
                    "type": "string"
                },
                "SignatureNo": {
                    "description": "电子签章码",
                    "type": "string"
                },
                "StampFileName": {
                    "description": "印章图文件名",
                    "type": "string"
                },
                "StampFilePath": {
                    "description": "印章图文件路径",
                    "type": "string"
                }
            }
        },
        "models.FortuneCustomerBook": {
            "title": "FortuneCustomerBook",
            "type": "object",
            "properties": {
                "AllotDate": {
                    "description": "分配时间",
                    "type": "string",
                    "format": "datetime"
                },
                "AllotStatus": {
                    "description": "分配状态 0=未分配（历史数据）、1=已分配、2=分配失败",
                    "type": "integer",
                    "format": "int32"
                },
                "BindSamId": {
                    "description": "客户经理ID",
                    "type": "string"
                },
                "BindSamName": {
                    "description": "绑定rm姓名",
                    "type": "string"
                },
                "CcAllocateRefId": {
                    "description": "电销客服分配关联id",
                    "type": "string"
                },
                "CfAccountName": {
                    "description": "财富开户姓名",
                    "type": "string"
                },
                "CommitBinSamName": {
                    "description": "预约时对接客户经理姓名",
                    "type": "string"
                },
                "CommitIsBindSam": {
                    "description": "预约时是否有对接客户经理",
                    "type": "string"
                },
                "DateEntered": {
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "删除 0 未删除,1删除",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "description": "预约ID",
                    "type": "integer",
                    "format": "int64"
                },
                "InvestMoney": {
                    "description": "可投资产",
                    "type": "integer",
                    "format": "int32"
                },
                "InvestType": {
                    "description": "投资类型",
                    "type": "string"
                },
                "IpArea": {
                    "description": "ip区域",
                    "type": "string"
                },
                "LoanId": {
                    "description": "标的名称",
                    "type": "string"
                },
                "LoanName": {
                    "description": "标的名称",
                    "type": "string"
                },
                "ManagerName": {
                    "description": "客户经理",
                    "type": "string"
                },
                "Mobile": {
                    "description": "用户填写的手机号",
                    "type": "string"
                },
                "Name": {
                    "description": "用户填写的姓名",
                    "type": "string"
                },
                "OpUser": {
                    "description": "操作人",
                    "type": "string"
                },
                "OutInvest": {
                    "description": "1是,2否",
                    "type": "integer",
                    "format": "int32"
                },
                "PrefixMobile": {
                    "description": "用户填写的手机号前缀",
                    "type": "string"
                },
                "Remark": {
                    "description": "备注",
                    "type": "string"
                },
                "RepairRemark": {
                    "description": "备注2",
                    "type": "string"
                },
                "Status": {
                    "description": "0未处理,1跟进中,2已完成",
                    "type": "integer",
                    "format": "int32"
                },
                "SubscribeEvaluationResult": {
                    "description": "预约测评结果",
                    "type": "string"
                },
                "SubscribeQuestionSnapshoot": {
                    "description": "预约题快照",
                    "type": "string"
                },
                "UserFullName": {
                    "description": "用户开户姓名",
                    "type": "string"
                },
                "UserId": {
                    "description": "用户ID",
                    "type": "string"
                },
                "UserMobile": {
                    "description": "用户手机号",
                    "type": "string"
                },
                "UserMobileLocation": {
                    "description": "注册手机号归属地",
                    "type": "string"
                },
                "UserMobilePrefix": {
                    "description": "用户手机号前缀",
                    "type": "string"
                }
            }
        },
        "models.FortuneCustomerBook2010614": {
            "title": "FortuneCustomerBook2010614",
            "type": "object",
            "properties": {
                "BindSamId": {
                    "description": "客户经理ID",
                    "type": "string"
                },
                "DateEntered": {
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "删除 0 未删除,1删除",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "description": "预约ID",
                    "type": "integer",
                    "format": "int64"
                },
                "InvestMoney": {
                    "description": "可投资产",
                    "type": "integer",
                    "format": "int32"
                },
                "InvestType": {
                    "description": "投资类型",
                    "type": "string"
                },
                "IpArea": {
                    "description": "ip区域",
                    "type": "string"
                },
                "LoanId": {
                    "description": "标的名称",
                    "type": "string"
                },
                "ManagerName": {
                    "description": "客户经理",
                    "type": "string"
                },
                "Mobile": {
                    "description": "电话",
                    "type": "string"
                },
                "Name": {
                    "description": "姓名",
                    "type": "string"
                },
                "OpUser": {
                    "description": "操作人",
                    "type": "string"
                },
                "OutInvest": {
                    "description": "1是,2否",
                    "type": "integer",
                    "format": "int32"
                },
                "PrefixMobile": {
                    "description": "86",
                    "type": "string"
                },
                "Remark": {
                    "description": "备注",
                    "type": "string"
                },
                "Status": {
                    "description": "0未处理,1跟进中,2已完成",
                    "type": "integer",
                    "format": "int32"
                },
                "SubscribeEvaluationResult": {
                    "description": "预约测评结果",
                    "type": "string"
                },
                "SubscribeQuestionSnapshoot": {
                    "description": "预约题快照",
                    "type": "string"
                },
                "UserFullName": {
                    "description": "用户开户姓名",
                    "type": "string"
                },
                "UserId": {
                    "description": "用户ID",
                    "type": "string"
                },
                "UserMobile": {
                    "description": "用户手机号",
                    "type": "string"
                },
                "UserMobilePrefix": {
                    "description": "用户手机号前缀",
                    "type": "string"
                }
            }
        },
        "models.FortuneCustomerBook20180201": {
            "title": "FortuneCustomerBook20180201",
            "type": "object",
            "properties": {
                "BindSamId": {
                    "description": "客户经理ID",
                    "type": "string"
                },
                "DateEntered": {
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "删除 0 未删除,1删除",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "description": "预约ID",
                    "type": "integer",
                    "format": "int64"
                },
                "InvestMoney": {
                    "description": "可投资产",
                    "type": "integer",
                    "format": "int32"
                },
                "InvestType": {
                    "description": "投资类型",
                    "type": "string"
                },
                "LoanId": {
                    "description": "标的名称",
                    "type": "string"
                },
                "ManagerName": {
                    "description": "客户经理",
                    "type": "string"
                },
                "Mobile": {
                    "description": "电话",
                    "type": "string"
                },
                "Name": {
                    "description": "姓名",
                    "type": "string"
                },
                "OpUser": {
                    "description": "操作人",
                    "type": "string"
                },
                "OutInvest": {
                    "description": "1是,2否",
                    "type": "integer",
                    "format": "int32"
                },
                "PrefixMobile": {
                    "description": "86",
                    "type": "string"
                },
                "Status": {
                    "description": "0未处理,1跟进中,2已完成",
                    "type": "integer",
                    "format": "int32"
                },
                "UserFullName": {
                    "description": "用户开户姓名",
                    "type": "string"
                },
                "UserId": {
                    "description": "用户ID",
                    "type": "string"
                },
                "UserMobile": {
                    "description": "用户手机号",
                    "type": "string"
                },
                "UserMobilePrefix": {
                    "description": "用户手机号前缀",
                    "type": "string"
                }
            }
        },
        "models.FortuneCustomerBook20180621": {
            "title": "FortuneCustomerBook20180621",
            "type": "object",
            "properties": {
                "BindSamId": {
                    "description": "客户经理ID",
                    "type": "string"
                },
                "CfAccountName": {
                    "description": "财富开户姓名",
                    "type": "string"
                },
                "DateEntered": {
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "删除 0 未删除,1删除",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "description": "预约ID",
                    "type": "integer",
                    "format": "int64"
                },
                "InvestMoney": {
                    "description": "可投资产",
                    "type": "integer",
                    "format": "int32"
                },
                "InvestType": {
                    "description": "投资类型",
                    "type": "string"
                },
                "IpArea": {
                    "description": "ip区域",
                    "type": "string"
                },
                "LoanId": {
                    "description": "标的名称",
                    "type": "string"
                },
                "ManagerName": {
                    "description": "客户经理",
                    "type": "string"
                },
                "Mobile": {
                    "description": "用户填写的手机号",
                    "type": "string"
                },
                "Name": {
                    "description": "用户填写的姓名",
                    "type": "string"
                },
                "OpUser": {
                    "description": "操作人",
                    "type": "string"
                },
                "OutInvest": {
                    "description": "1是,2否",
                    "type": "integer",
                    "format": "int32"
                },
                "PrefixMobile": {
                    "description": "用户填写的手机号前缀",
                    "type": "string"
                },
                "Remark": {
                    "description": "备注",
                    "type": "string"
                },
                "RepairRemark": {
                    "description": "修复备注",
                    "type": "string"
                },
                "Status": {
                    "description": "0未处理,1跟进中,2已完成",
                    "type": "integer",
                    "format": "int32"
                },
                "SubscribeEvaluationResult": {
                    "description": "预约测评结果",
                    "type": "string"
                },
                "SubscribeQuestionSnapshoot": {
                    "description": "预约题快照",
                    "type": "string"
                },
                "UserFullName": {
                    "description": "用户开户姓名",
                    "type": "string"
                },
                "UserId": {
                    "description": "用户ID",
                    "type": "string"
                },
                "UserMobile": {
                    "description": "用户手机号",
                    "type": "string"
                },
                "UserMobilePrefix": {
                    "description": "用户手机号前缀",
                    "type": "string"
                }
            }
        },
        "models.FortuneCustomerBook20180704": {
            "title": "FortuneCustomerBook20180704",
            "type": "object",
            "properties": {
                "BindSamId": {
                    "description": "客户经理ID",
                    "type": "string"
                },
                "CfAccountName": {
                    "description": "财富开户姓名",
                    "type": "string"
                },
                "DateEntered": {
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "删除 0 未删除,1删除",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "description": "预约ID",
                    "type": "integer",
                    "format": "int64"
                },
                "InvestMoney": {
                    "description": "可投资产",
                    "type": "integer",
                    "format": "int32"
                },
                "InvestType": {
                    "description": "投资类型",
                    "type": "string"
                },
                "IpArea": {
                    "description": "ip区域",
                    "type": "string"
                },
                "LoanId": {
                    "description": "标的名称",
                    "type": "string"
                },
                "ManagerName": {
                    "description": "客户经理",
                    "type": "string"
                },
                "Mobile": {
                    "description": "用户填写的手机号",
                    "type": "string"
                },
                "Name": {
                    "description": "用户填写的姓名",
                    "type": "string"
                },
                "OpUser": {
                    "description": "操作人",
                    "type": "string"
                },
                "OutInvest": {
                    "description": "1是,2否",
                    "type": "integer",
                    "format": "int32"
                },
                "PrefixMobile": {
                    "description": "用户填写的手机号前缀",
                    "type": "string"
                },
                "Remark": {
                    "description": "备注",
                    "type": "string"
                },
                "RepairRemark": {
                    "description": "修复备注",
                    "type": "string"
                },
                "Status": {
                    "description": "0未处理,1跟进中,2已完成",
                    "type": "integer",
                    "format": "int32"
                },
                "SubscribeEvaluationResult": {
                    "description": "预约测评结果",
                    "type": "string"
                },
                "SubscribeQuestionSnapshoot": {
                    "description": "预约题快照",
                    "type": "string"
                },
                "UserFullName": {
                    "description": "用户开户姓名",
                    "type": "string"
                },
                "UserId": {
                    "description": "用户ID",
                    "type": "string"
                },
                "UserMobile": {
                    "description": "用户手机号",
                    "type": "string"
                },
                "UserMobilePrefix": {
                    "description": "用户手机号前缀",
                    "type": "string"
                }
            }
        },
        "models.FortuneCustomerBook20181011": {
            "title": "FortuneCustomerBook20181011",
            "type": "object",
            "properties": {
                "BindSamId": {
                    "description": "客户经理ID",
                    "type": "string"
                },
                "CfAccountName": {
                    "description": "财富开户姓名",
                    "type": "string"
                },
                "DateEntered": {
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "删除 0 未删除,1删除",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "description": "预约ID",
                    "type": "integer",
                    "format": "int64"
                },
                "InvestMoney": {
                    "description": "可投资产",
                    "type": "integer",
                    "format": "int32"
                },
                "InvestType": {
                    "description": "投资类型",
                    "type": "string"
                },
                "IpArea": {
                    "description": "ip区域",
                    "type": "string"
                },
                "LoanId": {
                    "description": "标的名称",
                    "type": "string"
                },
                "ManagerName": {
                    "description": "客户经理",
                    "type": "string"
                },
                "Mobile": {
                    "description": "用户填写的手机号",
                    "type": "string"
                },
                "Name": {
                    "description": "用户填写的姓名",
                    "type": "string"
                },
                "OpUser": {
                    "description": "操作人",
                    "type": "string"
                },
                "OutInvest": {
                    "description": "1是,2否",
                    "type": "integer",
                    "format": "int32"
                },
                "PrefixMobile": {
                    "description": "用户填写的手机号前缀",
                    "type": "string"
                },
                "Remark": {
                    "description": "备注",
                    "type": "string"
                },
                "RepairRemark": {
                    "description": "修复备注",
                    "type": "string"
                },
                "Status": {
                    "description": "0未处理,1跟进中,2已完成",
                    "type": "integer",
                    "format": "int32"
                },
                "SubscribeEvaluationResult": {
                    "description": "预约测评结果",
                    "type": "string"
                },
                "SubscribeQuestionSnapshoot": {
                    "description": "预约题快照",
                    "type": "string"
                },
                "UserFullName": {
                    "description": "用户开户姓名",
                    "type": "string"
                },
                "UserId": {
                    "description": "用户ID",
                    "type": "string"
                },
                "UserMobile": {
                    "description": "用户手机号",
                    "type": "string"
                },
                "UserMobilePrefix": {
                    "description": "用户手机号前缀",
                    "type": "string"
                }
            }
        },
        "models.FortuneCustomerBook20181015": {
            "title": "FortuneCustomerBook20181015",
            "type": "object",
            "properties": {
                "AllotDate": {
                    "description": "分配时间",
                    "type": "string",
                    "format": "datetime"
                },
                "AllotResult": {
                    "description": "分配结果",
                    "type": "string"
                },
                "BindSamId": {
                    "description": "客户经理ID",
                    "type": "string"
                },
                "BindSamName": {
                    "description": "绑定rm姓名",
                    "type": "string"
                },
                "CfAccountName": {
                    "description": "财富开户姓名",
                    "type": "string"
                },
                "CommitBinSamName": {
                    "description": "预约时对接客户经理姓名",
                    "type": "string"
                },
                "CommitIsBindSam": {
                    "description": "预约时是否有对接客户经理",
                    "type": "string"
                },
                "DateEntered": {
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "删除 0 未删除,1删除",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "description": "预约ID",
                    "type": "integer",
                    "format": "int64"
                },
                "InvestMoney": {
                    "description": "可投资产",
                    "type": "integer",
                    "format": "int32"
                },
                "InvestType": {
                    "description": "投资类型",
                    "type": "string"
                },
                "IpArea": {
                    "description": "ip区域",
                    "type": "string"
                },
                "LoanId": {
                    "description": "标的名称",
                    "type": "string"
                },
                "LoanName": {
                    "description": "标的名称",
                    "type": "string"
                },
                "ManagerName": {
                    "description": "客户经理",
                    "type": "string"
                },
                "Mobile": {
                    "description": "用户填写的手机号",
                    "type": "string"
                },
                "Name": {
                    "description": "用户填写的姓名",
                    "type": "string"
                },
                "OpUser": {
                    "description": "操作人",
                    "type": "string"
                },
                "OutInvest": {
                    "description": "1是,2否",
                    "type": "integer",
                    "format": "int32"
                },
                "PrefixMobile": {
                    "description": "用户填写的手机号前缀",
                    "type": "string"
                },
                "Remark": {
                    "description": "备注",
                    "type": "string"
                },
                "RepairRemark": {
                    "description": "修复备注",
                    "type": "string"
                },
                "Status": {
                    "description": "0未处理,1跟进中,2已完成",
                    "type": "integer",
                    "format": "int32"
                },
                "SubscribeEvaluationResult": {
                    "description": "预约测评结果",
                    "type": "string"
                },
                "SubscribeQuestionSnapshoot": {
                    "description": "预约题快照",
                    "type": "string"
                },
                "UserFullName": {
                    "description": "用户开户姓名",
                    "type": "string"
                },
                "UserId": {
                    "description": "用户ID",
                    "type": "string"
                },
                "UserMobile": {
                    "description": "用户手机号",
                    "type": "string"
                },
                "UserMobileLocation": {
                    "description": "注册手机号归属地",
                    "type": "string"
                },
                "UserMobilePrefix": {
                    "description": "用户手机号前缀",
                    "type": "string"
                }
            }
        },
        "models.FortuneCustomerBook20190306": {
            "title": "FortuneCustomerBook20190306",
            "type": "object",
            "properties": {
                "AllotDate": {
                    "description": "分配时间",
                    "type": "string",
                    "format": "datetime"
                },
                "AllotStatus": {
                    "description": "分配状态 0=未分配（历史数据）、1=已分配、2=分配失败",
                    "type": "integer",
                    "format": "int32"
                },
                "BindSamId": {
                    "description": "客户经理ID",
                    "type": "string"
                },
                "BindSamName": {
                    "description": "绑定rm姓名",
                    "type": "string"
                },
                "CcAllocateRefId": {
                    "description": "电销客服分配关联id",
                    "type": "string"
                },
                "CfAccountName": {
                    "description": "财富开户姓名",
                    "type": "string"
                },
                "CommitBinSamName": {
                    "description": "预约时对接客户经理姓名",
                    "type": "string"
                },
                "CommitIsBindSam": {
                    "description": "预约时是否有对接客户经理",
                    "type": "string"
                },
                "DateEntered": {
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "删除 0 未删除,1删除",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "description": "预约ID",
                    "type": "integer",
                    "format": "int64"
                },
                "InvestMoney": {
                    "description": "可投资产",
                    "type": "integer",
                    "format": "int32"
                },
                "InvestType": {
                    "description": "投资类型",
                    "type": "string"
                },
                "IpArea": {
                    "description": "ip区域",
                    "type": "string"
                },
                "LoanId": {
                    "description": "标的名称",
                    "type": "string"
                },
                "LoanName": {
                    "description": "标的名称",
                    "type": "string"
                },
                "ManagerName": {
                    "description": "客户经理",
                    "type": "string"
                },
                "Mobile": {
                    "description": "用户填写的手机号",
                    "type": "string"
                },
                "Name": {
                    "description": "用户填写的姓名",
                    "type": "string"
                },
                "OpUser": {
                    "description": "操作人",
                    "type": "string"
                },
                "OutInvest": {
                    "description": "1是,2否",
                    "type": "integer",
                    "format": "int32"
                },
                "PrefixMobile": {
                    "description": "用户填写的手机号前缀",
                    "type": "string"
                },
                "Remark": {
                    "description": "备注",
                    "type": "string"
                },
                "RepairRemark": {
                    "description": "备注2",
                    "type": "string"
                },
                "Status": {
                    "description": "0未处理,1跟进中,2已完成",
                    "type": "integer",
                    "format": "int32"
                },
                "SubscribeEvaluationResult": {
                    "description": "预约测评结果",
                    "type": "string"
                },
                "SubscribeQuestionSnapshoot": {
                    "description": "预约题快照",
                    "type": "string"
                },
                "UserFullName": {
                    "description": "用户开户姓名",
                    "type": "string"
                },
                "UserId": {
                    "description": "用户ID",
                    "type": "string"
                },
                "UserMobile": {
                    "description": "用户手机号",
                    "type": "string"
                },
                "UserMobileLocation": {
                    "description": "注册手机号归属地",
                    "type": "string"
                },
                "UserMobilePrefix": {
                    "description": "用户手机号前缀",
                    "type": "string"
                }
            }
        },
        "models.FortuneCustomerBookAllocationHisotory": {
            "title": "FortuneCustomerBookAllocationHisotory",
            "type": "object",
            "properties": {
                "AddTime": {
                    "type": "string",
                    "format": "datetime"
                },
                "BookId": {
                    "description": "用户的ID",
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "OpUser": {
                    "description": "操作人",
                    "type": "string"
                }
            }
        },
        "models.FortuneCustomerBookAllotRecord": {
            "title": "FortuneCustomerBookAllotRecord",
            "type": "object",
            "properties": {
                "AllotInfo": {
                    "description": "分配信息",
                    "type": "string"
                },
                "AllotOperateId": {
                    "description": "分配操作者id",
                    "type": "string"
                },
                "AllotOperateName": {
                    "description": "分配操作者姓名",
                    "type": "string"
                },
                "AllotStatus": {
                    "description": "状态 0=未分配、1=已分配、2=分配失败",
                    "type": "integer",
                    "format": "int32"
                },
                "BindSamId": {
                    "description": "分配的客户经理id",
                    "type": "string"
                },
                "BookId": {
                    "description": "预约ID",
                    "type": "string"
                },
                "BookVersion": {
                    "description": "分配信息",
                    "type": "string"
                },
                "DateEntered": {
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "UserId": {
                    "description": "用户ID",
                    "type": "string"
                }
            }
        },
        "models.FortuneCustomerBookHistory": {
            "title": "FortuneCustomerBookHistory",
            "type": "object",
            "properties": {
                "AddTime": {
                    "type": "string",
                    "format": "datetime"
                },
                "BookId": {
                    "description": "用户的ID",
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "OpUser": {
                    "description": "操作人",
                    "type": "string"
                },
                "Status": {
                    "description": "0未处理,1跟进中,2已完成",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "models.FortuneCustomerCallHistory": {
            "title": "FortuneCustomerCallHistory",
            "type": "object",
            "properties": {
                "CallContent": {
                    "description": "沟通内容",
                    "type": "string"
                },
                "CallDate": {
                    "description": "沟通时间",
                    "type": "string",
                    "format": "datetime"
                },
                "CallOnWorker": {
                    "description": "陪访人员",
                    "type": "string"
                },
                "CallPlanId": {
                    "description": "沟通计划id",
                    "type": "string"
                },
                "CallType": {
                    "description": "沟通方式（电话=phone、微信=wechat、陪访=accompany、开放日=open）",
                    "type": "string"
                },
                "ConnectStatus": {
                    "description": "接通状态 0:历史数据 1:未接通 2:已接通",
                    "type": "integer",
                    "format": "int32"
                },
                "CreatedUserId": {
                    "description": "创建者",
                    "type": "string"
                },
                "CustomerId": {
                    "description": "客户关系id",
                    "type": "string"
                },
                "CustomerManagerName": {
                    "description": "客户经理姓名",
                    "type": "string"
                },
                "CustomerManagerUsername": {
                    "description": "客户经理账号",
                    "type": "string"
                },
                "DateEntered": {
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除",
                    "type": "integer",
                    "format": "int32"
                },
                "Expect": {
                    "description": "预期",
                    "type": "string"
                },
                "Id": {
                    "description": "沟通历史id",
                    "type": "integer",
                    "format": "int64"
                },
                "IntentionDetailDesc": {
                    "description": "意向详情说明",
                    "type": "integer",
                    "format": "int32"
                },
                "IntentionExtent": {
                    "description": "意向程度 0:历史数据 1:无意向 2:意向一般 3:意向强烈",
                    "type": "integer",
                    "format": "int32"
                },
                "IntentionProductType": {
                    "description": "意向产品类型",
                    "type": "string"
                },
                "IsIntention": {
                    "description": "是否意向 1=是 2=否",
                    "type": "integer",
                    "format": "int32"
                },
                "MarketUnbindWorkorderId": {
                    "description": "未绑定意向用户id",
                    "type": "string"
                },
                "NextCommunicationTime": {
                    "description": "预计下次沟通时间",
                    "type": "string",
                    "format": "datetime"
                },
                "OrderSource": {
                    "description": "工单来源",
                    "type": "integer",
                    "format": "int32"
                },
                "PlanCallDate": {
                    "description": "预计沟通时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Remark": {
                    "description": "备注",
                    "type": "string"
                },
                "UserId": {
                    "description": "用户id",
                    "type": "string"
                }
            }
        },
        "models.FortuneCustomerCallHistory20180201": {
            "title": "FortuneCustomerCallHistory20180201",
            "type": "object",
            "properties": {
                "CallContent": {
                    "description": "沟通内容",
                    "type": "string"
                },
                "CallDate": {
                    "description": "沟通时间",
                    "type": "string",
                    "format": "datetime"
                },
                "CallOnWorker": {
                    "description": "陪访人员",
                    "type": "string"
                },
                "CallType": {
                    "description": "沟通方式（电话=phone、微信=wechat、陪访=accompany、开放日=open）",
                    "type": "string"
                },
                "CreatedUserId": {
                    "description": "创建者",
                    "type": "string"
                },
                "CustomerId": {
                    "description": "客户关系id",
                    "type": "string"
                },
                "CustomerManagerName": {
                    "description": "客户经理姓名",
                    "type": "string"
                },
                "CustomerManagerUsername": {
                    "description": "客户经理账号",
                    "type": "string"
                },
                "DateEntered": {
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "description": "沟通历史id",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.FortuneCustomerCallPlan": {
            "title": "FortuneCustomerCallPlan",
            "type": "object",
            "properties": {
                "CallType": {
                    "description": "沟通方式 phone:电话 wechat:微信 accompany:陪访 open:开放日 visit:拜访 eat:吃饭 anniversary:纪念日 cash_back_day:回款日 birthday:生日 meeting:会议 other:其他",
                    "type": "string"
                },
                "CreatedUserId": {
                    "description": "创建者",
                    "type": "string"
                },
                "CustomerId": {
                    "description": "客户关系id",
                    "type": "string"
                },
                "CustomerManagerName": {
                    "description": "客户经理姓名",
                    "type": "string"
                },
                "CustomerManagerUsername": {
                    "description": "客户经理账号",
                    "type": "string"
                },
                "DateEntered": {
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除",
                    "type": "integer",
                    "format": "int32"
                },
                "EndTime": {
                    "description": "结束时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Expect": {
                    "description": "预期",
                    "type": "string"
                },
                "HandleSituation": {
                    "description": "处理情况",
                    "type": "string"
                },
                "Id": {
                    "description": "沟通计划id",
                    "type": "integer",
                    "format": "int64"
                },
                "IsAllDay": {
                    "description": "是否全天日程 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "ModifiedUserId": {
                    "description": "最后更新者",
                    "type": "string"
                },
                "PlanCallDate": {
                    "description": "开始时间  原预计沟通时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Status": {
                    "description": "状态 0:无 1:未完成 2:已完成 3:已取消",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "models.FortuneCustomerCallPlanAttach": {
            "title": "FortuneCustomerCallPlanAttach",
            "type": "object",
            "properties": {
                "CreatedUserId": {
                    "type": "string"
                },
                "DateEntered": {
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "0:正常 1:删除",
                    "type": "integer",
                    "format": "int32"
                },
                "FileName": {
                    "description": "文件名",
                    "type": "string"
                },
                "FilePath": {
                    "description": "文件路径",
                    "type": "string"
                },
                "Id": {
                    "description": "ID",
                    "type": "integer",
                    "format": "int64"
                },
                "ModifiedUserId": {
                    "type": "string"
                },
                "PlanId": {
                    "description": "订单ID",
                    "type": "string"
                },
                "Type": {
                    "description": "附件类型 1:日程附件 2:日程处理情况附件",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "models.FortuneCustomerChangeRelationHistory": {
            "title": "FortuneCustomerChangeRelationHistory",
            "type": "object",
            "properties": {
                "BatchNumber": {
                    "description": "批次号",
                    "type": "integer",
                    "format": "int64"
                },
                "ChangeOperate": {
                    "description": "变更操作者（系统 ? system : 经理姓名）",
                    "type": "string"
                },
                "CreateOperate": {
                    "description": "创建操作者（系统 ? system : 经理姓名）",
                    "type": "string"
                },
                "CustomerId": {
                    "description": "客户关系id",
                    "type": "string"
                },
                "CustomerManagerName": {
                    "description": "客户经理姓名",
                    "type": "string"
                },
                "CustomerManagerUsername": {
                    "description": "客户经理登录账号",
                    "type": "string"
                },
                "DateEntered": {
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "description": "变更关系历史id",
                    "type": "integer",
                    "format": "int64"
                },
                "LastVersionContent": {
                    "description": "变更前当前客户的所有信息和变更前的所有变更历史记录",
                    "type": "string"
                },
                "RelationEndDate": {
                    "description": "归属关系结束时间",
                    "type": "string",
                    "format": "datetime"
                },
                "RelationStartDate": {
                    "description": "归属关系产生时间",
                    "type": "string",
                    "format": "datetime"
                }
            }
        },
        "models.FortuneCustomerChangeRelationHistoryCopy": {
            "title": "FortuneCustomerChangeRelationHistoryCopy",
            "type": "object",
            "properties": {
                "BatchNumber": {
                    "description": "批次号",
                    "type": "integer",
                    "format": "int64"
                },
                "ChangeOperate": {
                    "description": "变更操作者（系统 ? system : 经理姓名）",
                    "type": "string"
                },
                "CreateOperate": {
                    "description": "创建操作者（系统 ? system : 经理姓名）",
                    "type": "string"
                },
                "CustomerId": {
                    "description": "客户关系id",
                    "type": "string"
                },
                "CustomerManagerName": {
                    "description": "客户经理姓名",
                    "type": "string"
                },
                "CustomerManagerUsername": {
                    "description": "客户经理登录账号",
                    "type": "string"
                },
                "DateEntered": {
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "description": "变更关系历史id",
                    "type": "integer",
                    "format": "int64"
                },
                "LastVersionContent": {
                    "description": "变更前当前客户的所有信息和变更前的所有变更历史记录",
                    "type": "string"
                },
                "RelationEndDate": {
                    "description": "归属关系结束时间",
                    "type": "string",
                    "format": "datetime"
                },
                "RelationStartDate": {
                    "description": "归属关系产生时间",
                    "type": "string",
                    "format": "datetime"
                }
            }
        },
        "models.FortuneCustomerChangeRelationHistoryTools": {
            "title": "FortuneCustomerChangeRelationHistoryTools",
            "type": "object",
            "properties": {
                "BatchNumber": {
                    "description": "批次号",
                    "type": "integer",
                    "format": "int64"
                },
                "ChangeOperate": {
                    "description": "变更操作者（系统 ? system : 经理姓名）",
                    "type": "string"
                },
                "CreateOperate": {
                    "description": "创建操作者（系统 ? system : 经理姓名）",
                    "type": "string"
                },
                "CustomerId": {
                    "description": "客户关系id",
                    "type": "string"
                },
                "CustomerManagerName": {
                    "description": "客户经理姓名",
                    "type": "string"
                },
                "CustomerManagerUsername": {
                    "description": "客户经理登录账号",
                    "type": "string"
                },
                "DateEntered": {
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "description": "变更关系历史id",
                    "type": "integer",
                    "format": "int64"
                },
                "LastVersionContent": {
                    "description": "变更前当前客户的所有信息和变更前的所有变更历史记录",
                    "type": "string"
                },
                "RelationEndDate": {
                    "description": "归属关系结束时间",
                    "type": "string",
                    "format": "datetime"
                },
                "RelationStartDate": {
                    "description": "归属关系产生时间",
                    "type": "string",
                    "format": "datetime"
                }
            }
        },
        "models.FortuneCustomerSubscribe": {
            "title": "FortuneCustomerSubscribe",
            "type": "object",
            "properties": {
                "AllotDate": {
                    "description": "分配时间",
                    "type": "string",
                    "format": "datetime"
                },
                "AppointmentChannel": {
                    "description": "预约渠道 1推荐理财师 2已绑定用户预约 3理财师申请",
                    "type": "integer",
                    "format": "int32"
                },
                "AppointmentDeadline": {
                    "description": "预约失效时间 下个工作日",
                    "type": "string",
                    "format": "datetime"
                },
                "AppointmentFlag": {
                    "description": "是否未绑定预约 0 否 1是",
                    "type": "integer",
                    "format": "int32"
                },
                "AppointmentReason": {
                    "description": "用户预约原因",
                    "type": "integer",
                    "format": "int32"
                },
                "AppointmentReasonDesc": {
                    "description": "用户预约原因详情",
                    "type": "string"
                },
                "AppointmentStatus": {
                    "description": "沟通状态 0 待沟通 1 已沟通 2已失效",
                    "type": "integer",
                    "format": "int32"
                },
                "BindSamId": {
                    "description": "分配的客户经理ID",
                    "type": "string"
                },
                "BindSamName": {
                    "description": "分配的客户经理姓名",
                    "type": "string"
                },
                "CcAllocateRefId": {
                    "description": "电销客服分配关联id",
                    "type": "string"
                },
                "DateEntered": {
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除",
                    "type": "integer",
                    "format": "int32"
                },
                "ExtendField": {
                    "description": "扩展数据存放",
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Location": {
                    "description": "所在地",
                    "type": "string"
                },
                "Remark": {
                    "description": "备注",
                    "type": "string"
                },
                "Status": {
                    "description": "当前进度 1=未分配、2=已分配、3=分配失败",
                    "type": "integer",
                    "format": "int32"
                },
                "UserFullName": {
                    "description": "用户姓名",
                    "type": "string"
                },
                "UserId": {
                    "description": "用户ID",
                    "type": "string"
                },
                "UserMobile": {
                    "description": "用户手机号",
                    "type": "string"
                },
                "UserRegisterDatetime": {
                    "description": "用户注册时间",
                    "type": "string",
                    "format": "datetime"
                }
            }
        },
        "models.FortuneCustomerSubscribeAllotHistory": {
            "title": "FortuneCustomerSubscribeAllotHistory",
            "type": "object",
            "properties": {
                "AllotInfo": {
                    "description": "分配信息",
                    "type": "string"
                },
                "BindSamId": {
                    "description": "分配的客户经理ID",
                    "type": "string"
                },
                "CreateUserFullName": {
                    "description": "分配人姓名",
                    "type": "string"
                },
                "CreateUserId": {
                    "description": "分配人id",
                    "type": "string"
                },
                "CustomerSubscribeId": {
                    "description": "预约绑定客户id",
                    "type": "integer",
                    "format": "int64"
                },
                "DateEntered": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "LastVersion": {
                    "description": "最后版本数据",
                    "type": "string"
                }
            }
        },
        "models.FortuneCustomerSubscribeCopy": {
            "title": "FortuneCustomerSubscribeCopy",
            "type": "object",
            "properties": {
                "AllotDate": {
                    "description": "分配时间",
                    "type": "string",
                    "format": "datetime"
                },
                "BindSamId": {
                    "description": "分配的客户经理ID",
                    "type": "string"
                },
                "BindSamName": {
                    "description": "分配的客户经理姓名",
                    "type": "string"
                },
                "CcAllocateRefId": {
                    "description": "电销客服分配关联id",
                    "type": "string"
                },
                "DateEntered": {
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除",
                    "type": "integer",
                    "format": "int32"
                },
                "ExtendField": {
                    "description": "扩展数据存放",
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Location": {
                    "description": "所在地",
                    "type": "string"
                },
                "Remark": {
                    "description": "备注",
                    "type": "string"
                },
                "Status": {
                    "description": "状态 1=未分配、2=已分配、3=分配失败",
                    "type": "integer",
                    "format": "int32"
                },
                "UserFullName": {
                    "description": "用户姓名",
                    "type": "string"
                },
                "UserId": {
                    "description": "用户ID",
                    "type": "string"
                },
                "UserMobile": {
                    "description": "用户手机号",
                    "type": "string"
                },
                "UserRegisterDatetime": {
                    "description": "用户注册时间",
                    "type": "string",
                    "format": "datetime"
                }
            }
        },
        "models.FortuneCustomerTask": {
            "title": "FortuneCustomerTask",
            "type": "object",
            "properties": {
                "AnomalyMessage": {
                    "description": "异常原因",
                    "type": "string"
                },
                "AttachName": {
                    "description": "附件名称",
                    "type": "string"
                },
                "AttachPath": {
                    "description": "附件路径",
                    "type": "string"
                },
                "AttachType": {
                    "description": "附件模板类型 1=base  2=number",
                    "type": "integer",
                    "format": "int32"
                },
                "CreatedName": {
                    "description": "创建者姓名",
                    "type": "string"
                },
                "CreatedUserId": {
                    "description": "创建者id",
                    "type": "string"
                },
                "CustomerManagerIds": {
                    "description": "客户经理ids",
                    "type": "string"
                },
                "DateEntered": {
                    "description": "创建日期",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "description": "客户分配任务id",
                    "type": "integer",
                    "format": "int64"
                },
                "RunTaskTime": {
                    "description": "分配执行时间",
                    "type": "integer",
                    "format": "int64"
                },
                "Status": {
                    "description": "分配状态 待分配=1、分配中=2、分配完成=3、分配失败=4",
                    "type": "integer",
                    "format": "int32"
                },
                "TaskMessage": {
                    "description": "分配信息",
                    "type": "string"
                },
                "Total": {
                    "description": "附件内容总数",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.FortuneCustomerTaskAnomaly": {
            "title": "FortuneCustomerTaskAnomaly",
            "type": "object",
            "properties": {
                "AnomalyMessage": {
                    "description": "分配异常原因",
                    "type": "string"
                },
                "CreatedUserId": {
                    "description": "创建者id",
                    "type": "string"
                },
                "CustomerManagerNumber": {
                    "description": "客户经理工号",
                    "type": "string"
                },
                "CustomerTaskId": {
                    "description": "客户分配任务id",
                    "type": "string"
                },
                "DateEntered": {
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "description": "客户分配异常id",
                    "type": "integer",
                    "format": "int64"
                },
                "UserId": {
                    "description": "客户id",
                    "type": "string"
                }
            }
        },
        "models.FortuneCustomerTaskAnomalyCopy": {
            "title": "FortuneCustomerTaskAnomalyCopy",
            "type": "object",
            "properties": {
                "AnomalyMessage": {
                    "description": "分配异常原因",
                    "type": "string"
                },
                "CreatedUserId": {
                    "description": "创建者id",
                    "type": "string"
                },
                "CustomerManagerNumber": {
                    "description": "客户经理工号",
                    "type": "string"
                },
                "CustomerTaskId": {
                    "description": "客户分配任务id",
                    "type": "string"
                },
                "DateEntered": {
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "description": "客户分配异常id",
                    "type": "integer",
                    "format": "int64"
                },
                "UserId": {
                    "description": "客户id",
                    "type": "string"
                }
            }
        },
        "models.FortuneCustomerTaskCopy": {
            "title": "FortuneCustomerTaskCopy",
            "type": "object",
            "properties": {
                "AnomalyMessage": {
                    "description": "异常原因",
                    "type": "string"
                },
                "AttachName": {
                    "description": "附件名称",
                    "type": "string"
                },
                "AttachPath": {
                    "description": "附件路径",
                    "type": "string"
                },
                "AttachType": {
                    "description": "附件模板类型 1=base  2=number",
                    "type": "integer",
                    "format": "int32"
                },
                "CreatedName": {
                    "description": "创建者姓名",
                    "type": "string"
                },
                "CreatedUserId": {
                    "description": "创建者id",
                    "type": "string"
                },
                "CustomerManagerIds": {
                    "description": "客户经理ids",
                    "type": "string"
                },
                "DateEntered": {
                    "description": "创建日期",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "description": "客户分配任务id",
                    "type": "integer",
                    "format": "int64"
                },
                "RunTaskTime": {
                    "description": "分配执行时间",
                    "type": "integer",
                    "format": "int64"
                },
                "Status": {
                    "description": "分配状态 待分配=1、分配中=2、分配完成=3、分配失败=4",
                    "type": "integer",
                    "format": "int32"
                },
                "TaskMessage": {
                    "description": "分配信息",
                    "type": "string"
                },
                "Total": {
                    "description": "附件内容总数",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.FortuneCustomerWealthPlanne": {
            "title": "FortuneCustomerWealthPlanne",
            "type": "object",
            "properties": {
                "AllotDate": {
                    "description": "分配时间",
                    "type": "string",
                    "format": "datetime"
                },
                "AllotStatus": {
                    "description": "分配状态 0=未分配（历史数据）、1=已分配、2=分配失败",
                    "type": "integer",
                    "format": "int32"
                },
                "BindSamId": {
                    "description": "分配的客户经理ID",
                    "type": "string"
                },
                "BindSamName": {
                    "description": "分配的客户经理姓名",
                    "type": "string"
                },
                "DateEntered": {
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "FirstCommitBindSamId": {
                    "description": "首次提交绑定客户经理ID",
                    "type": "string"
                },
                "FirstCommitBindSamName": {
                    "description": "首次提交绑定客户经理姓名",
                    "type": "string"
                },
                "FirstCommitTime": {
                    "description": "首次提交时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "LastUpdateTime": {
                    "description": "最近一次更新时间",
                    "type": "string",
                    "format": "datetime"
                },
                "ReportLastTime": {
                    "description": "最新一次生成报告时间",
                    "type": "string",
                    "format": "datetime"
                },
                "UserId": {
                    "description": "用户ID",
                    "type": "string"
                },
                "UserLevel": {
                    "description": "用户等级 1=高端用户 2=普通用户 3=未知",
                    "type": "integer",
                    "format": "int32"
                },
                "UserLevelText": {
                    "description": "用户等级 1=高端用户 2=普通用户 3=未知",
                    "type": "string"
                },
                "Username": {
                    "description": "用户名",
                    "type": "string"
                }
            }
        },
        "models.FortuneCustomerWealthPlanneAllotRecord": {
            "title": "FortuneCustomerWealthPlanneAllotRecord",
            "type": "object",
            "properties": {
                "AllotInfo": {
                    "description": "分配信息",
                    "type": "string"
                },
                "AllotOperateId": {
                    "description": "分配操作者id",
                    "type": "string"
                },
                "AllotOperateName": {
                    "description": "分配操作者姓名",
                    "type": "string"
                },
                "AllotStatus": {
                    "description": "状态 0=未分配、1=已分配、2=分配失败",
                    "type": "integer",
                    "format": "int32"
                },
                "BindSamId": {
                    "description": "分配的客户经理id",
                    "type": "string"
                },
                "DateEntered": {
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "UserId": {
                    "description": "用户ID",
                    "type": "string"
                },
                "WealthPlanneId": {
                    "description": "预约ID",
                    "type": "string"
                }
            }
        },
        "models.FortuneCustomers": {
            "title": "FortuneCustomers",
            "type": "object",
            "properties": {
                "AccountDatetime": {
                    "description": "国内开户时间",
                    "type": "string",
                    "format": "datetime"
                },
                "AccountStatus": {
                    "description": "国内开户状态 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "AmericaAccountDatetime": {
                    "description": "美国开户时间",
                    "type": "string",
                    "format": "datetime"
                },
                "AmericaAccountStatus": {
                    "description": "美国开户状态 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "AppendChannel": {
                    "description": "添加渠道",
                    "type": "integer",
                    "format": "int32"
                },
                "BindCityManagerId": {
                    "description": "城市经理",
                    "type": "string"
                },
                "BindGroupManagerId": {
                    "description": "团队经理",
                    "type": "string"
                },
                "BindSamId": {
                    "description": "客户经理ID",
                    "type": "integer",
                    "format": "int64"
                },
                "Channel": {
                    "description": "渠道 1:线上 2:线下",
                    "type": "integer",
                    "format": "int32"
                },
                "CustomerTaskId": {
                    "description": "客户分配任务ID",
                    "type": "string"
                },
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "description": "修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "DollarInvestAmount": {
                    "description": "美元累计投资金额",
                    "type": "number",
                    "format": "double"
                },
                "FrontRmName": {
                    "description": "上一任绑定客户经理姓名",
                    "type": "string"
                },
                "FullName": {
                    "description": "姓名",
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "InternationalAccountDatetime": {
                    "description": "国际开户时间",
                    "type": "string",
                    "format": "datetime"
                },
                "InternationalAccountStatus": {
                    "description": "国际开户状态 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "InvestAmount": {
                    "description": "累计投资金额",
                    "type": "number",
                    "format": "double"
                },
                "InvestTag": {
                    "description": "投资能力",
                    "type": "string"
                },
                "IsBindSam": {
                    "description": "是否绑定客户经理 1:是 2:否",
                    "type": "integer",
                    "format": "int32"
                },
                "LockDate": {
                    "description": "绑定日期",
                    "type": "string",
                    "format": "datetime"
                },
                "OverseasIdentity": {
                    "description": "海外身份 0:无 1:国际 2:美国",
                    "type": "integer",
                    "format": "int32"
                },
                "OverseasRegsiterDatetime": {
                    "description": "海外注册时间",
                    "type": "string",
                    "format": "datetime"
                },
                "OverseasUserId": {
                    "description": "海外注册用户ID",
                    "type": "string"
                },
                "PhoneMobile": {
                    "description": "手机号",
                    "type": "string"
                },
                "PhonePrefix": {
                    "description": "手机号前缀 国家码",
                    "type": "string"
                },
                "RegisterDatetime": {
                    "description": "国内注册时间",
                    "type": "string",
                    "format": "datetime"
                },
                "SamStatus": {
                    "description": "线上申请绑定客户经理时的状态，0未确定,1已确定",
                    "type": "integer",
                    "format": "int32"
                },
                "SamStatusModifyTime": {
                    "description": "线上绑定用户确定的时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Status": {
                    "description": "状态(区分我的客户和我的锁定客户) 0:无 1:锁定 2:正式 3:解绑",
                    "type": "integer",
                    "format": "int32"
                },
                "UserId": {
                    "description": "国内注册用户ID",
                    "type": "string"
                },
                "Username": {
                    "description": "用户名",
                    "type": "string"
                }
            }
        },
        "models.FortuneCustomersAddress": {
            "title": "FortuneCustomersAddress",
            "type": "object",
            "properties": {
                "Address": {
                    "description": "地址",
                    "type": "string"
                },
                "CustomerId": {
                    "description": "客户ID",
                    "type": "string"
                },
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "EmergencyContact": {
                    "description": "紧急联系人",
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "PhoneMobile": {
                    "description": "手机号",
                    "type": "string"
                },
                "Relationship": {
                    "description": "关系",
                    "type": "string"
                }
            }
        },
        "models.FortuneCustomersCopy": {
            "title": "FortuneCustomersCopy",
            "type": "object",
            "properties": {
                "AccountDatetime": {
                    "description": "国内开户时间",
                    "type": "string",
                    "format": "datetime"
                },
                "AccountStatus": {
                    "description": "国内开户状态 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "AmericaAccountDatetime": {
                    "description": "美国开户时间",
                    "type": "string",
                    "format": "datetime"
                },
                "AmericaAccountStatus": {
                    "description": "美国开户状态 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "BindCityManagerId": {
                    "description": "城市经理",
                    "type": "string"
                },
                "BindGroupManagerId": {
                    "description": "团队经理",
                    "type": "string"
                },
                "BindSamId": {
                    "description": "客户经理ID",
                    "type": "string"
                },
                "Channel": {
                    "description": "渠道 1:线上 2:线下",
                    "type": "integer",
                    "format": "int32"
                },
                "CustomerTaskId": {
                    "description": "客户分配任务ID",
                    "type": "string"
                },
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "description": "修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "DollarInvestAmount": {
                    "description": "美元累计投资金额",
                    "type": "number",
                    "format": "double"
                },
                "FullName": {
                    "description": "姓名",
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "InternationalAccountDatetime": {
                    "description": "国际开户时间",
                    "type": "string",
                    "format": "datetime"
                },
                "InternationalAccountStatus": {
                    "description": "国际开户状态 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "InvestAmount": {
                    "description": "累计投资金额",
                    "type": "number",
                    "format": "double"
                },
                "IsBindSam": {
                    "description": "是否绑定客户经理 1:是 2:否",
                    "type": "integer",
                    "format": "int32"
                },
                "LockDate": {
                    "description": "绑定日期",
                    "type": "string",
                    "format": "datetime"
                },
                "OverseasIdentity": {
                    "description": "海外身份 0:无 1:国际 2:美国",
                    "type": "integer",
                    "format": "int32"
                },
                "OverseasRegsiterDatetime": {
                    "description": "海外注册时间",
                    "type": "string",
                    "format": "datetime"
                },
                "OverseasUserId": {
                    "description": "海外注册用户ID",
                    "type": "string"
                },
                "PhoneMobile": {
                    "description": "手机号",
                    "type": "string"
                },
                "PhonePrefix": {
                    "description": "手机号前缀 国家码",
                    "type": "string"
                },
                "RegisterDatetime": {
                    "description": "国内注册时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Status": {
                    "description": "状态(区分我的客户和我的锁定客户) 0:无 1:锁定 2:正式 3:解绑",
                    "type": "integer",
                    "format": "int32"
                },
                "UserId": {
                    "description": "国内注册用户ID",
                    "type": "string"
                }
            }
        },
        "models.FortuneCustomersCopy20180718": {
            "title": "FortuneCustomersCopy20180718",
            "type": "object",
            "properties": {
                "AccountDatetime": {
                    "description": "国内开户时间",
                    "type": "string",
                    "format": "datetime"
                },
                "AccountStatus": {
                    "description": "国内开户状态 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "AmericaAccountDatetime": {
                    "description": "美国开户时间",
                    "type": "string",
                    "format": "datetime"
                },
                "AmericaAccountStatus": {
                    "description": "美国开户状态 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "BindCityManagerId": {
                    "description": "城市经理",
                    "type": "string"
                },
                "BindGroupManagerId": {
                    "description": "团队经理",
                    "type": "string"
                },
                "BindSamId": {
                    "description": "客户经理ID",
                    "type": "string"
                },
                "Channel": {
                    "description": "渠道 1:线上 2:线下",
                    "type": "integer",
                    "format": "int32"
                },
                "CustomerTaskId": {
                    "description": "客户分配任务ID",
                    "type": "string"
                },
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "description": "修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "DollarInvestAmount": {
                    "description": "美元累计投资金额",
                    "type": "number",
                    "format": "double"
                },
                "FullName": {
                    "description": "姓名",
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "InternationalAccountDatetime": {
                    "description": "国际开户时间",
                    "type": "string",
                    "format": "datetime"
                },
                "InternationalAccountStatus": {
                    "description": "国际开户状态 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "InvestAmount": {
                    "description": "累计投资金额",
                    "type": "number",
                    "format": "double"
                },
                "IsBindSam": {
                    "description": "是否绑定客户经理 1:是 2:否",
                    "type": "integer",
                    "format": "int32"
                },
                "LockDate": {
                    "description": "绑定日期",
                    "type": "string",
                    "format": "datetime"
                },
                "OverseasIdentity": {
                    "description": "海外身份 0:无 1:国际 2:美国",
                    "type": "integer",
                    "format": "int32"
                },
                "OverseasRegsiterDatetime": {
                    "description": "海外注册时间",
                    "type": "string",
                    "format": "datetime"
                },
                "OverseasUserId": {
                    "description": "海外注册用户ID",
                    "type": "string"
                },
                "PhoneMobile": {
                    "description": "手机号",
                    "type": "string"
                },
                "PhonePrefix": {
                    "description": "手机号前缀 国家码",
                    "type": "string"
                },
                "RegisterDatetime": {
                    "description": "国内注册时间",
                    "type": "string",
                    "format": "datetime"
                },
                "SamStatus": {
                    "description": "线上绑定客户经理时的状态，0未确定,1已确定",
                    "type": "integer",
                    "format": "int32"
                },
                "SamStatusModifyTime": {
                    "description": "线上绑定用户确定的时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Status": {
                    "description": "状态(区分我的客户和我的锁定客户) 0:无 1:锁定 2:正式 3:解绑",
                    "type": "integer",
                    "format": "int32"
                },
                "UserId": {
                    "description": "国内注册用户ID",
                    "type": "string"
                }
            }
        },
        "models.FortuneCustomersCstm": {
            "title": "FortuneCustomersCstm",
            "type": "object",
            "properties": {
                "Birthday": {
                    "description": "生日",
                    "type": "string"
                },
                "ContactAddress": {
                    "description": "联系地址",
                    "type": "string"
                },
                "DateEntered": {
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "type": "string",
                    "format": "datetime"
                },
                "Hobbies": {
                    "description": "兴趣爱好",
                    "type": "string"
                },
                "Id": {
                    "description": "客户id",
                    "type": "integer",
                    "format": "int64"
                },
                "MarkName": {
                    "description": "客户备注姓名",
                    "type": "string"
                },
                "NativePlace": {
                    "description": "籍贯",
                    "type": "string"
                },
                "OpenDateBirth": {
                    "description": "开户出生日期",
                    "type": "string"
                },
                "OpenLocation": {
                    "description": "开户所在地",
                    "type": "string"
                },
                "OpenSex": {
                    "description": "开户性别 male=男 female=女",
                    "type": "string"
                },
                "PhoneMobileArea": {
                    "description": "手机归属地",
                    "type": "string"
                },
                "Sex": {
                    "description": "性别 male=男 female=女",
                    "type": "string"
                },
                "WorkingCondition": {
                    "description": "工作情况",
                    "type": "string"
                }
            }
        },
        "models.FortuneCustomersTools": {
            "title": "FortuneCustomersTools",
            "type": "object",
            "properties": {
                "AccountDatetime": {
                    "description": "国内开户时间",
                    "type": "string",
                    "format": "datetime"
                },
                "AccountStatus": {
                    "description": "国内开户状态 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "AmericaAccountDatetime": {
                    "description": "美国开户时间",
                    "type": "string",
                    "format": "datetime"
                },
                "AmericaAccountStatus": {
                    "description": "美国开户状态 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "BindCityManagerId": {
                    "description": "城市经理",
                    "type": "string"
                },
                "BindGroupManagerId": {
                    "description": "团队经理",
                    "type": "string"
                },
                "BindSamId": {
                    "description": "客户经理ID",
                    "type": "string"
                },
                "Channel": {
                    "description": "渠道 1:线上 2:线下",
                    "type": "integer",
                    "format": "int32"
                },
                "CustomerTaskId": {
                    "description": "客户分配任务ID",
                    "type": "string"
                },
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "description": "修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "DollarInvestAmount": {
                    "description": "美元累计投资金额",
                    "type": "number",
                    "format": "double"
                },
                "FullName": {
                    "description": "姓名",
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "InternationalAccountDatetime": {
                    "description": "国际开户时间",
                    "type": "string",
                    "format": "datetime"
                },
                "InternationalAccountStatus": {
                    "description": "国际开户状态 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "InvestAmount": {
                    "description": "累计投资金额",
                    "type": "number",
                    "format": "double"
                },
                "IsBindSam": {
                    "description": "是否绑定客户经理 1:是 2:否",
                    "type": "integer",
                    "format": "int32"
                },
                "LockDate": {
                    "description": "绑定日期",
                    "type": "string",
                    "format": "datetime"
                },
                "OverseasIdentity": {
                    "description": "海外身份 0:无 1:国际 2:美国",
                    "type": "integer",
                    "format": "int32"
                },
                "OverseasRegsiterDatetime": {
                    "description": "海外注册时间",
                    "type": "string",
                    "format": "datetime"
                },
                "OverseasUserId": {
                    "description": "海外注册用户ID",
                    "type": "string"
                },
                "PhoneMobile": {
                    "description": "手机号",
                    "type": "string"
                },
                "PhonePrefix": {
                    "description": "手机号前缀 国家码",
                    "type": "string"
                },
                "RegisterDatetime": {
                    "description": "国内注册时间",
                    "type": "string",
                    "format": "datetime"
                },
                "SamStatus": {
                    "description": "线上申请绑定客户经理时的状态，0未确定,1已确定",
                    "type": "integer",
                    "format": "int32"
                },
                "SamStatusModifyTime": {
                    "description": "线上绑定用户确定的时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Status": {
                    "description": "状态(区分我的客户和我的锁定客户) 0:无 1:锁定 2:正式 3:解绑",
                    "type": "integer",
                    "format": "int32"
                },
                "UserId": {
                    "description": "国内注册用户ID",
                    "type": "string"
                }
            }
        },
        "models.FortuneCustomersXxx": {
            "title": "FortuneCustomersXxx",
            "type": "object",
            "properties": {
                "AccountDatetime": {
                    "description": "国内开户时间",
                    "type": "string",
                    "format": "datetime"
                },
                "AccountStatus": {
                    "description": "国内开户状态 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "AmericaAccountDatetime": {
                    "description": "美国开户时间",
                    "type": "string",
                    "format": "datetime"
                },
                "AmericaAccountStatus": {
                    "description": "美国开户状态 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "BindCityManagerId": {
                    "description": "城市经理",
                    "type": "string"
                },
                "BindGroupManagerId": {
                    "description": "团队经理",
                    "type": "string"
                },
                "BindSamId": {
                    "description": "客户经理ID",
                    "type": "string"
                },
                "Channel": {
                    "description": "渠道 1:线上 2:线下",
                    "type": "integer",
                    "format": "int32"
                },
                "CustomerTaskId": {
                    "description": "客户分配任务ID",
                    "type": "string"
                },
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "description": "修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "DollarInvestAmount": {
                    "description": "美元累计投资金额",
                    "type": "number",
                    "format": "double"
                },
                "FullName": {
                    "description": "姓名",
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "InternationalAccountDatetime": {
                    "description": "国际开户时间",
                    "type": "string",
                    "format": "datetime"
                },
                "InternationalAccountStatus": {
                    "description": "国际开户状态 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "InvestAmount": {
                    "description": "累计投资金额",
                    "type": "number",
                    "format": "double"
                },
                "IsBindSam": {
                    "description": "是否绑定客户经理 1:是 2:否",
                    "type": "integer",
                    "format": "int32"
                },
                "LockDate": {
                    "description": "绑定日期",
                    "type": "string",
                    "format": "datetime"
                },
                "OverseasIdentity": {
                    "description": "海外身份 0:无 1:国际 2:美国",
                    "type": "integer",
                    "format": "int32"
                },
                "OverseasRegsiterDatetime": {
                    "description": "海外注册时间",
                    "type": "string",
                    "format": "datetime"
                },
                "OverseasUserId": {
                    "description": "海外注册用户ID",
                    "type": "string"
                },
                "PhoneMobile": {
                    "description": "手机号",
                    "type": "string"
                },
                "PhonePrefix": {
                    "description": "手机号前缀 国家码",
                    "type": "string"
                },
                "RegisterDatetime": {
                    "description": "国内注册时间",
                    "type": "string",
                    "format": "datetime"
                },
                "SamStatus": {
                    "description": "线上申请绑定客户经理时的状态，0未确定,1已确定",
                    "type": "integer",
                    "format": "int32"
                },
                "SamStatusModifyTime": {
                    "description": "线上绑定用户确定的时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Status": {
                    "description": "状态(区分我的客户和我的锁定客户) 0:无 1:锁定 2:正式 3:解绑",
                    "type": "integer",
                    "format": "int32"
                },
                "UserId": {
                    "description": "国内注册用户ID",
                    "type": "string"
                }
            }
        },
        "models.FortuneCustomizeSubscribe": {
            "title": "FortuneCustomizeSubscribe",
            "type": "object",
            "properties": {
                "AllotDate": {
                    "description": "分配时间",
                    "type": "string",
                    "format": "datetime"
                },
                "AllotStatus": {
                    "description": "状态 0=未分配、1=已分配、2=分配失败",
                    "type": "integer",
                    "format": "int32"
                },
                "BindSamId": {
                    "description": "客户经理ID",
                    "type": "string"
                },
                "BindSamName": {
                    "description": "分配的客户经理姓名",
                    "type": "string"
                },
                "CcAllocateRefId": {
                    "description": "电销客服分配关联id",
                    "type": "string"
                },
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "description": "修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IpAddress": {
                    "description": "IP地址",
                    "type": "string"
                },
                "IsBindSam": {
                    "description": "是否绑定客户经理",
                    "type": "integer",
                    "format": "int32"
                },
                "Location": {
                    "description": "预约时所在地",
                    "type": "string"
                },
                "MobileLocation": {
                    "description": "手机号所在地",
                    "type": "string"
                },
                "MobilePrefix": {
                    "description": "手机号前缀",
                    "type": "string"
                },
                "Name": {
                    "description": "客户姓名",
                    "type": "string"
                },
                "OpUser": {
                    "description": "修改人",
                    "type": "string"
                },
                "PhoneMobile": {
                    "description": "手机号",
                    "type": "string"
                },
                "Remark": {
                    "description": "备注",
                    "type": "string"
                },
                "UserId": {
                    "description": "用户ID",
                    "type": "string"
                }
            }
        },
        "models.FortuneCustomizeSubscribeAllotRecord": {
            "title": "FortuneCustomizeSubscribeAllotRecord",
            "type": "object",
            "properties": {
                "AllotInfo": {
                    "description": "分配信息",
                    "type": "string"
                },
                "AllotOperateId": {
                    "description": "分配操作者id",
                    "type": "string"
                },
                "AllotOperateName": {
                    "description": "分配操作者姓名",
                    "type": "string"
                },
                "AllotStatus": {
                    "description": "状态 0=未分配、1=已分配、2=分配失败",
                    "type": "integer",
                    "format": "int32"
                },
                "BindSamId": {
                    "description": "分配的客户经理id",
                    "type": "string"
                },
                "CustomizeSubscribeId": {
                    "description": "预约id",
                    "type": "integer",
                    "format": "int64"
                },
                "DateEntered": {
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "UserId": {
                    "description": "用户ID",
                    "type": "string"
                }
            }
        },
        "models.FortuneEvaluationHistory": {
            "title": "FortuneEvaluationHistory",
            "type": "object",
            "properties": {
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除",
                    "type": "integer",
                    "format": "int32"
                },
                "EvaluationExtResult": {
                    "description": "预约问题",
                    "type": "string"
                },
                "EvaluationGrade": {
                    "description": "测评分数",
                    "type": "integer",
                    "format": "int32"
                },
                "EvaluationLevel": {
                    "description": "测评等级",
                    "type": "string"
                },
                "EvaluationResult": {
                    "description": "测评结果",
                    "type": "string"
                },
                "FullName": {
                    "description": "用户姓名",
                    "type": "string"
                },
                "Id": {
                    "description": "测评ID",
                    "type": "integer",
                    "format": "int64"
                },
                "Mobile": {
                    "description": "手机号",
                    "type": "string"
                },
                "MobilePrefix": {
                    "description": "手机号前缀 国家码",
                    "type": "string"
                },
                "SubscribeCount": {
                    "description": "预约次数",
                    "type": "integer",
                    "format": "int32"
                },
                "Type": {
                    "description": "测评类型 1=个人 2=机构",
                    "type": "integer",
                    "format": "int32"
                },
                "UserId": {
                    "description": "用户ID",
                    "type": "string"
                },
                "Username": {
                    "description": "用户名",
                    "type": "string"
                }
            }
        },
        "models.FortuneEvaluationNew": {
            "title": "FortuneEvaluationNew",
            "type": "object",
            "properties": {
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除",
                    "type": "integer",
                    "format": "int32"
                },
                "EvaluationExtResult": {
                    "description": "预约问题",
                    "type": "string"
                },
                "EvaluationGrade": {
                    "description": "测评分数",
                    "type": "integer",
                    "format": "int32"
                },
                "EvaluationLevel": {
                    "description": "测评等级",
                    "type": "string"
                },
                "EvaluationResult": {
                    "description": "测评结果",
                    "type": "string"
                },
                "FullName": {
                    "description": "用户姓名",
                    "type": "string"
                },
                "Id": {
                    "description": "测评ID",
                    "type": "integer",
                    "format": "int64"
                },
                "LastDateModified": {
                    "description": "最后修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Mobile": {
                    "description": "手机号",
                    "type": "string"
                },
                "MobilePrefix": {
                    "description": "手机号前缀 国家码",
                    "type": "string"
                },
                "SubscribeCount": {
                    "description": "预约次数",
                    "type": "integer",
                    "format": "int32"
                },
                "Type": {
                    "description": "测评类型 1=个人 2=机构",
                    "type": "integer",
                    "format": "int32"
                },
                "UserId": {
                    "description": "用户ID",
                    "type": "string"
                },
                "Username": {
                    "description": "用户名",
                    "type": "string"
                }
            }
        },
        "models.FortuneGroup": {
            "title": "FortuneGroup",
            "type": "object",
            "properties": {
                "CityId": {
                    "description": "所属市ID",
                    "type": "integer",
                    "format": "int32"
                },
                "CreatedUserId": {
                    "description": "创建人ID",
                    "type": "string"
                },
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "description": "修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "type": "integer",
                    "format": "int32"
                },
                "DistrictId": {
                    "description": "所属区ID",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ModifiedUserId": {
                    "description": "修改人ID",
                    "type": "string"
                },
                "Title": {
                    "description": "组名称",
                    "type": "string"
                }
            }
        },
        "models.FortuneIdentSign": {
            "title": "FortuneIdentSign",
            "type": "object",
            "properties": {
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "description": "修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "EndDate": {
                    "description": "结束日期",
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Sign": {
                    "description": "口令",
                    "type": "string"
                },
                "StartDate": {
                    "description": "开始日期",
                    "type": "string",
                    "format": "datetime"
                },
                "Status": {
                    "description": "状态 1=有效 2=无效",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "models.FortuneIntlAccountInfo": {
            "title": "FortuneIntlAccountInfo",
            "type": "object",
            "properties": {
                "Cob": {
                    "description": "出生国家",
                    "type": "string"
                },
                "DateEntered": {
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "type": "integer",
                    "format": "int32"
                },
                "FirstName": {
                    "description": "姓",
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdNum": {
                    "description": "证件号码",
                    "type": "string"
                },
                "IdType": {
                    "description": "证件类型",
                    "type": "string"
                },
                "KycStatus": {
                    "description": "KYC状态 0:未审核 1:审核中 2:审核失败 3:审核通过",
                    "type": "integer",
                    "format": "int32"
                },
                "KycTime": {
                    "description": "KYC状态变更时间",
                    "type": "string",
                    "format": "datetime"
                },
                "LastName": {
                    "description": "名",
                    "type": "string"
                },
                "Nationality": {
                    "description": "国籍",
                    "type": "string"
                }
            }
        },
        "models.FortuneLoan": {
            "title": "FortuneLoan",
            "type": "object",
            "properties": {
                "Account": {
                    "description": "募集账号",
                    "type": "string"
                },
                "AchievementDiscount": {
                    "description": "业绩折扣",
                    "type": "number",
                    "format": "double"
                },
                "BankName": {
                    "description": "收款银行",
                    "type": "string"
                },
                "CityManagerRate": {
                    "description": "城市负责人佣金系数",
                    "type": "number",
                    "format": "double"
                },
                "Collect": {
                    "description": "募集账户",
                    "type": "string"
                },
                "CollectMoney": {
                    "description": "募集总金额",
                    "type": "number",
                    "format": "double"
                },
                "CollectOrg": {
                    "description": "募集机构",
                    "type": "string"
                },
                "Comment": {
                    "description": "备注",
                    "type": "string"
                },
                "CommissionDiscount": {
                    "description": "佣金这算系数",
                    "type": "number",
                    "format": "double"
                },
                "Company": {
                    "description": "所属公司",
                    "type": "string"
                },
                "CompanyId": {
                    "description": "归属企业ID",
                    "type": "string"
                },
                "ContractNoPrefix": {
                    "description": "合同编号前缀",
                    "type": "string"
                },
                "CostSettlementOrg": {
                    "description": "费用结算机构",
                    "type": "string"
                },
                "CountrywideManagerRate": {
                    "description": "全国负责人佣金系数",
                    "type": "number",
                    "format": "double"
                },
                "CreatedUserId": {
                    "description": "创建人",
                    "type": "string"
                },
                "Currency": {
                    "description": "币种，0人民币，1美元",
                    "type": "integer",
                    "format": "int32"
                },
                "DateEntered": {
                    "description": "添加时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "description": "更新时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deadline": {
                    "description": "产品期限",
                    "type": "integer",
                    "format": "int32"
                },
                "DeadlineDay": {
                    "description": "产品期限用天标识",
                    "type": "integer",
                    "format": "int64"
                },
                "DeadlineRemark": {
                    "description": "产品期限备注",
                    "type": "string"
                },
                "DeadlineType": {
                    "description": "产品期限类型:0天,1月,2年",
                    "type": "integer",
                    "format": "int32"
                },
                "Deleted": {
                    "description": "删除 0 未删除,1删除",
                    "type": "integer",
                    "format": "int32"
                },
                "EndTime": {
                    "description": "到期日",
                    "type": "string",
                    "format": "datetime"
                },
                "EstimatCollectMoney": {
                    "description": "预计募集总额",
                    "type": "number",
                    "format": "double"
                },
                "FrontendDisplayName": {
                    "description": "前端展示名称",
                    "type": "string"
                },
                "FrozenMoney": {
                    "description": "冻结金额",
                    "type": "number",
                    "format": "double"
                },
                "FundManager": {
                    "description": "基金管理人",
                    "type": "string"
                },
                "FxProductManagerRate": {
                    "description": "凤新-产品经理佣金系数",
                    "type": "number",
                    "format": "double"
                },
                "FxPropertyConsultantRate": {
                    "description": "凤新-置业顾问佣金系数",
                    "type": "number",
                    "format": "double"
                },
                "FxServiceManagerRate": {
                    "description": "凤新-增值业务经理佣金系数",
                    "type": "number",
                    "format": "double"
                },
                "Guarantee": {
                    "description": "投资保障",
                    "type": "string"
                },
                "Guarantor": {
                    "description": "担保方",
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IncrMoney": {
                    "description": "递增金额",
                    "type": "number",
                    "format": "double"
                },
                "InterestBearingPeriod": {
                    "description": "计息周期 1:365天 2:360天",
                    "type": "integer",
                    "format": "int32"
                },
                "InterestBearingRule": {
                    "description": "计息规则 1:按天计息 2:按月平均",
                    "type": "integer",
                    "format": "int32"
                },
                "IsFrontendDisplay": {
                    "description": "是否前端展示 0:是 1:否",
                    "type": "integer",
                    "format": "int32"
                },
                "IsSupportElectronicContract": {
                    "description": "是否支持电子合同 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "Level": {
                    "description": "级别",
                    "type": "string"
                },
                "LoanId": {
                    "description": "名称(带编号)",
                    "type": "string"
                },
                "ManageFee": {
                    "description": "管理费",
                    "type": "string"
                },
                "MaxInvestAmount": {
                    "description": "最大认购金额 0:不限制",
                    "type": "number",
                    "format": "double"
                },
                "MinMoney": {
                    "description": "起投金额",
                    "type": "number",
                    "format": "double"
                },
                "ModifiedUserId": {
                    "description": "更新操作人",
                    "type": "string"
                },
                "Name": {
                    "description": "项目名称",
                    "type": "string"
                },
                "OnlineOrder": {
                    "description": "是否线上认购，1是，0否",
                    "type": "integer",
                    "format": "int32"
                },
                "ProductSummary": {
                    "description": "产品亮点概述",
                    "type": "string"
                },
                "Profit": {
                    "description": "预期收益",
                    "type": "string"
                },
                "ProfitDesc": {
                    "description": "收益率说明",
                    "type": "string"
                },
                "ProfitType": {
                    "description": "收益方式:0一次性还本息,1半年付息，到期还本2按季付息，到期还本3产品结束时一次性分配4一次性分配收益 非数字手动填写",
                    "type": "string"
                },
                "Publisher": {
                    "description": "发行人",
                    "type": "string"
                },
                "RedemptionFee": {
                    "description": "赎回费",
                    "type": "string"
                },
                "RepaymentSource": {
                    "description": "还款来源",
                    "type": "string"
                },
                "RmDiscount": {
                    "description": "RM佣金系数",
                    "type": "number",
                    "format": "double"
                },
                "ServiceCostRule": {
                    "description": "服务费结算规则",
                    "type": "integer",
                    "format": "int32"
                },
                "ServiceDiscount": {
                    "description": "服务费",
                    "type": "number",
                    "format": "double"
                },
                "StartTime": {
                    "description": "起息日",
                    "type": "string",
                    "format": "datetime"
                },
                "Status": {
                    "description": "状态,0预热,1在售,2已售完,3已到期",
                    "type": "integer",
                    "format": "int32"
                },
                "SubFee": {
                    "description": "认购费",
                    "type": "string"
                },
                "TotalMoney": {
                    "description": "募集到的总金额",
                    "type": "number",
                    "format": "double"
                },
                "TrusteeshipOrg": {
                    "description": "托管机构",
                    "type": "string"
                },
                "Type": {
                    "description": "项目类型: 0:类固定收益 1:美元固定收益 2:私募股权 3:海外置业 4:家庭保障•财富传承 5:私募证券 6:信托",
                    "type": "integer",
                    "format": "int32"
                },
                "Version": {
                    "description": "版本号",
                    "type": "integer",
                    "format": "int64"
                },
                "VideoRecord": {
                    "description": "是否双录，1是，0否",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "models.FortuneLoanAchievementDatum": {
            "title": "FortuneLoanAchievementDatum",
            "type": "object",
            "properties": {
                "CreatedUserId": {
                    "description": "创建人ID",
                    "type": "string"
                },
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "description": "修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "description": "自增主健",
                    "type": "integer",
                    "format": "int64"
                },
                "InterestRate": {
                    "description": "利率(业绩基准)",
                    "type": "number",
                    "format": "double"
                },
                "LoanId": {
                    "description": "项目ID",
                    "type": "string"
                },
                "MaxInvestAmount": {
                    "description": "最大起投金额",
                    "type": "number",
                    "format": "double"
                },
                "MinInvestAmount": {
                    "description": "最小起投金额",
                    "type": "number",
                    "format": "double"
                },
                "ModifiedUserId": {
                    "description": "修改人ID",
                    "type": "string"
                },
                "ServiceRate": {
                    "description": "服务费率",
                    "type": "number",
                    "format": "double"
                }
            }
        },
        "models.FortuneLoanAttachmentInfo": {
            "title": "FortuneLoanAttachmentInfo",
            "type": "object",
            "properties": {
                "CreateUserId": {
                    "type": "string"
                },
                "DateEntered": {
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "description": "修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "FileName": {
                    "description": "文件名",
                    "type": "string"
                },
                "FilePath": {
                    "description": "文件路径",
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "LoanId": {
                    "description": "对应fortune_loan表的id",
                    "type": "string"
                },
                "TemplateId": {
                    "description": "合同服务-模板ID",
                    "type": "string"
                },
                "Type": {
                    "description": "类型 0:其他 1:理财指南 2:产品亮点图片 3:资料包 4:产品合同 5:风险提示函 6:电子签名告知书",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "models.FortuneLoanBak": {
            "title": "FortuneLoanBak",
            "type": "object",
            "properties": {
                "Account": {
                    "description": "募集账号",
                    "type": "string"
                },
                "AchievementDiscount": {
                    "description": "业绩折扣",
                    "type": "number",
                    "format": "double"
                },
                "BankName": {
                    "description": "收款银行",
                    "type": "string"
                },
                "CityManagerRate": {
                    "description": "城市负责人佣金系数",
                    "type": "number",
                    "format": "double"
                },
                "Collect": {
                    "description": "募集账户",
                    "type": "string"
                },
                "CollectMoney": {
                    "description": "募集总金额",
                    "type": "number",
                    "format": "double"
                },
                "CollectOrg": {
                    "description": "募集机构",
                    "type": "string"
                },
                "Comment": {
                    "description": "备注",
                    "type": "string"
                },
                "CommissionDiscount": {
                    "description": "佣金这算系数",
                    "type": "number",
                    "format": "double"
                },
                "Company": {
                    "description": "所属公司",
                    "type": "string"
                },
                "CompanyId": {
                    "description": "归属企业ID",
                    "type": "string"
                },
                "ContractNoPrefix": {
                    "description": "合同编号前缀",
                    "type": "string"
                },
                "CostSettlementOrg": {
                    "description": "费用结算机构",
                    "type": "string"
                },
                "CountrywideManagerRate": {
                    "description": "全国负责人佣金系数",
                    "type": "number",
                    "format": "double"
                },
                "CreatedUserId": {
                    "description": "创建人",
                    "type": "string"
                },
                "Currency": {
                    "description": "币种，0人民币，1美元",
                    "type": "integer",
                    "format": "int32"
                },
                "DateEntered": {
                    "description": "添加时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "description": "更新时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deadline": {
                    "description": "产品期限",
                    "type": "integer",
                    "format": "int32"
                },
                "DeadlineDay": {
                    "description": "产品期限用天标识",
                    "type": "integer",
                    "format": "int64"
                },
                "DeadlineRemark": {
                    "description": "产品期限备注",
                    "type": "string"
                },
                "DeadlineType": {
                    "description": "产品期限类型:0天,1月,2年",
                    "type": "integer",
                    "format": "int32"
                },
                "Deleted": {
                    "description": "删除 0 未删除,1删除",
                    "type": "integer",
                    "format": "int32"
                },
                "EndTime": {
                    "description": "到期日",
                    "type": "string",
                    "format": "datetime"
                },
                "EstimatCollectMoney": {
                    "description": "预计募集总额",
                    "type": "number",
                    "format": "double"
                },
                "FrontendDisplayName": {
                    "description": "前端展示名称",
                    "type": "string"
                },
                "FrozenMoney": {
                    "description": "冻结金额",
                    "type": "number",
                    "format": "double"
                },
                "FundManager": {
                    "description": "基金管理人",
                    "type": "string"
                },
                "FxProductManagerRate": {
                    "description": "凤新-产品经理佣金系数",
                    "type": "number",
                    "format": "double"
                },
                "FxPropertyConsultantRate": {
                    "description": "凤新-置业顾问佣金系数",
                    "type": "number",
                    "format": "double"
                },
                "FxServiceManagerRate": {
                    "description": "凤新-增值业务经理佣金系数",
                    "type": "number",
                    "format": "double"
                },
                "Guarantee": {
                    "description": "投资保障",
                    "type": "string"
                },
                "Guarantor": {
                    "description": "担保方",
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IncrMoney": {
                    "description": "递增金额",
                    "type": "number",
                    "format": "double"
                },
                "InterestBearingPeriod": {
                    "description": "计息周期 1:365天 2:360天",
                    "type": "integer",
                    "format": "int32"
                },
                "InterestBearingRule": {
                    "description": "计息规则 1:按天计息 2:按月平均",
                    "type": "integer",
                    "format": "int32"
                },
                "IsFrontendDisplay": {
                    "description": "是否前端展示 0:是 1:否",
                    "type": "integer",
                    "format": "int32"
                },
                "IsSupportElectronicContract": {
                    "description": "是否支持电子合同 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "Level": {
                    "description": "级别",
                    "type": "string"
                },
                "LoanId": {
                    "description": "合同编号",
                    "type": "string"
                },
                "ManageFee": {
                    "description": "管理费",
                    "type": "string"
                },
                "MaxInvestAmount": {
                    "description": "最大认购金额 0:不限制",
                    "type": "number",
                    "format": "double"
                },
                "MinMoney": {
                    "description": "起投金额",
                    "type": "number",
                    "format": "double"
                },
                "ModifiedUserId": {
                    "description": "更新操作人",
                    "type": "string"
                },
                "Name": {
                    "description": "项目名称",
                    "type": "string"
                },
                "OnlineOrder": {
                    "description": "是否线上认购，1是，0否",
                    "type": "integer",
                    "format": "int32"
                },
                "ProductSummary": {
                    "description": "产品亮点概述",
                    "type": "string"
                },
                "Profit": {
                    "description": "预期收益",
                    "type": "string"
                },
                "ProfitDesc": {
                    "description": "收益率说明",
                    "type": "string"
                },
                "ProfitType": {
                    "description": "收益方式:0一次性还本息,1半年付息，到期还本2按季付息，到期还本3产品结束时一次性分配4一次性分配收益 非数字手动填写",
                    "type": "string"
                },
                "Publisher": {
                    "description": "发行人",
                    "type": "string"
                },
                "RedemptionFee": {
                    "description": "赎回费",
                    "type": "string"
                },
                "RepaymentSource": {
                    "description": "还款来源",
                    "type": "string"
                },
                "RmDiscount": {
                    "description": "RM佣金系数",
                    "type": "number",
                    "format": "double"
                },
                "ServiceCostRule": {
                    "description": "服务费结算规则",
                    "type": "integer",
                    "format": "int32"
                },
                "ServiceDiscount": {
                    "description": "服务费",
                    "type": "number",
                    "format": "double"
                },
                "StartTime": {
                    "description": "起息日",
                    "type": "string",
                    "format": "datetime"
                },
                "Status": {
                    "description": "状态,0预热,1在售,2已售完,3已到期",
                    "type": "integer",
                    "format": "int32"
                },
                "SubFee": {
                    "description": "认购费",
                    "type": "string"
                },
                "TotalMoney": {
                    "description": "募集到的总金额",
                    "type": "number",
                    "format": "double"
                },
                "TrusteeshipOrg": {
                    "description": "托管机构",
                    "type": "string"
                },
                "Type": {
                    "description": "项目类型:0人民币,1美元,2私募股权,3海外置业,4家庭保障、财富传承",
                    "type": "integer",
                    "format": "int32"
                },
                "Version": {
                    "description": "版本号",
                    "type": "integer",
                    "format": "int64"
                },
                "VideoRecord": {
                    "description": "是否双录，1是，0否",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "models.FortuneLoanBak20180428": {
            "title": "FortuneLoanBak20180428",
            "type": "object",
            "properties": {
                "Account": {
                    "description": "募集账号",
                    "type": "string"
                },
                "AchievementDiscount": {
                    "description": "业绩折扣",
                    "type": "number",
                    "format": "double"
                },
                "BankName": {
                    "description": "收款银行",
                    "type": "string"
                },
                "Collect": {
                    "description": "募集账户",
                    "type": "string"
                },
                "CollectMoney": {
                    "description": "募集总金额",
                    "type": "number",
                    "format": "double"
                },
                "CollectOrg": {
                    "description": "募集机构",
                    "type": "string"
                },
                "Comment": {
                    "description": "备注",
                    "type": "string"
                },
                "CommissionDiscount": {
                    "description": "佣金这算系数",
                    "type": "number",
                    "format": "double"
                },
                "Company": {
                    "description": "所属公司",
                    "type": "string"
                },
                "CompanyId": {
                    "description": "归属企业",
                    "type": "integer",
                    "format": "int32"
                },
                "ContractNoPrefix": {
                    "description": "合同编号前缀",
                    "type": "string"
                },
                "CreatedUserId": {
                    "description": "创建人",
                    "type": "string"
                },
                "Currency": {
                    "description": "币种，0人民币，1美元",
                    "type": "integer",
                    "format": "int32"
                },
                "DateEntered": {
                    "description": "添加时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "description": "更新时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deadline": {
                    "description": "产品期限",
                    "type": "integer",
                    "format": "int32"
                },
                "DeadlineDay": {
                    "description": "产品期限用天标识",
                    "type": "integer",
                    "format": "int64"
                },
                "DeadlineRemark": {
                    "description": "产品期限备注",
                    "type": "string"
                },
                "DeadlineType": {
                    "description": "产品期限类型:0天,1月,2年",
                    "type": "integer",
                    "format": "int32"
                },
                "Deleted": {
                    "description": "删除 0 未删除,1删除",
                    "type": "integer",
                    "format": "int32"
                },
                "EndTime": {
                    "description": "到期日",
                    "type": "string",
                    "format": "datetime"
                },
                "EstimatCollectMoney": {
                    "description": "预计募集总额",
                    "type": "number",
                    "format": "double"
                },
                "FrozenMoney": {
                    "description": "冻结金额",
                    "type": "number",
                    "format": "double"
                },
                "FundManager": {
                    "description": "基金管理人",
                    "type": "string"
                },
                "Guarantee": {
                    "description": "投资保障",
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IncrMoney": {
                    "description": "递增金额",
                    "type": "number",
                    "format": "double"
                },
                "IsFrontendDisplay": {
                    "description": "是否前端展示 0:是 1:否",
                    "type": "integer",
                    "format": "int32"
                },
                "Level": {
                    "description": "级别",
                    "type": "string"
                },
                "LoanId": {
                    "description": "合同编号",
                    "type": "string"
                },
                "ManageFee": {
                    "description": "管理费",
                    "type": "string"
                },
                "MinMoney": {
                    "description": "起投金额",
                    "type": "number",
                    "format": "double"
                },
                "ModifiedUserId": {
                    "description": "更新操作人",
                    "type": "string"
                },
                "Name": {
                    "description": "项目名称",
                    "type": "string"
                },
                "ProductSummary": {
                    "description": "产品亮点概述",
                    "type": "string"
                },
                "Profit": {
                    "description": "预期收益",
                    "type": "string"
                },
                "ProfitDesc": {
                    "description": "收益率说明",
                    "type": "string"
                },
                "ProfitType": {
                    "description": "收益方式:0一次性还本息,1半年付息，到期还本2按季付息，到期还本3产品结束时一次性分配4一次性分配收益 非数字手动填写",
                    "type": "string"
                },
                "Publisher": {
                    "description": "发行人",
                    "type": "string"
                },
                "RedemptionFee": {
                    "description": "赎回费",
                    "type": "string"
                },
                "RepaymentSource": {
                    "description": "还款来源",
                    "type": "string"
                },
                "RmDiscount": {
                    "description": "RM佣金系数",
                    "type": "number",
                    "format": "double"
                },
                "ServiceDiscount": {
                    "description": "服务费",
                    "type": "number",
                    "format": "double"
                },
                "StartTime": {
                    "description": "起息日",
                    "type": "string",
                    "format": "datetime"
                },
                "Status": {
                    "description": "状态,0预热,1在售,2已售完,3已到期",
                    "type": "integer",
                    "format": "int32"
                },
                "SubFee": {
                    "description": "认购费",
                    "type": "number",
                    "format": "double"
                },
                "TotalMoney": {
                    "description": "募集到的总金额",
                    "type": "number",
                    "format": "double"
                },
                "TrusteeshipOrg": {
                    "description": "托管机构",
                    "type": "string"
                },
                "Type": {
                    "description": "项目类型:0人民币,1美元,2私募股权,3海外置业,4家庭保障、财富传承",
                    "type": "integer",
                    "format": "int32"
                },
                "Version": {
                    "description": "版本号",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.FortuneLoanBakCopy": {
            "title": "FortuneLoanBakCopy",
            "type": "object",
            "properties": {
                "Account": {
                    "description": "募集账号",
                    "type": "string"
                },
                "AchievementDiscount": {
                    "description": "业绩折扣",
                    "type": "number",
                    "format": "double"
                },
                "BankName": {
                    "description": "收款银行",
                    "type": "string"
                },
                "CityManagerRate": {
                    "description": "城市负责人佣金系数",
                    "type": "number",
                    "format": "double"
                },
                "Collect": {
                    "description": "募集账户",
                    "type": "string"
                },
                "CollectMoney": {
                    "description": "募集总金额",
                    "type": "number",
                    "format": "double"
                },
                "CollectOrg": {
                    "description": "募集机构",
                    "type": "string"
                },
                "Comment": {
                    "description": "备注",
                    "type": "string"
                },
                "CommissionDiscount": {
                    "description": "佣金这算系数",
                    "type": "number",
                    "format": "double"
                },
                "Company": {
                    "description": "所属公司",
                    "type": "string"
                },
                "CompanyId": {
                    "description": "归属企业",
                    "type": "integer",
                    "format": "int32"
                },
                "ContractNoPrefix": {
                    "description": "合同编号前缀",
                    "type": "string"
                },
                "CountrywideManagerRate": {
                    "description": "全国负责人佣金系数",
                    "type": "number",
                    "format": "double"
                },
                "CreatedUserId": {
                    "description": "创建人",
                    "type": "string"
                },
                "Currency": {
                    "description": "币种，0人民币，1美元",
                    "type": "integer",
                    "format": "int32"
                },
                "DateEntered": {
                    "description": "添加时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "description": "更新时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deadline": {
                    "description": "产品期限",
                    "type": "integer",
                    "format": "int32"
                },
                "DeadlineDay": {
                    "description": "产品期限用天标识",
                    "type": "integer",
                    "format": "int64"
                },
                "DeadlineRemark": {
                    "description": "产品期限备注",
                    "type": "string"
                },
                "DeadlineType": {
                    "description": "产品期限类型:0天,1月,2年",
                    "type": "integer",
                    "format": "int32"
                },
                "Deleted": {
                    "description": "删除 0 未删除,1删除",
                    "type": "integer",
                    "format": "int32"
                },
                "EndTime": {
                    "description": "到期日",
                    "type": "string",
                    "format": "datetime"
                },
                "EstimatCollectMoney": {
                    "description": "预计募集总额",
                    "type": "number",
                    "format": "double"
                },
                "FrontendDisplayName": {
                    "description": "前端展示名称",
                    "type": "string"
                },
                "FrozenMoney": {
                    "description": "冻结金额",
                    "type": "number",
                    "format": "double"
                },
                "FundManager": {
                    "description": "基金管理人",
                    "type": "string"
                },
                "FxProductManagerRate": {
                    "description": "凤新-产品经理佣金系数",
                    "type": "number",
                    "format": "double"
                },
                "FxPropertyConsultantRate": {
                    "description": "凤新-置业顾问佣金系数",
                    "type": "number",
                    "format": "double"
                },
                "FxServiceManagerRate": {
                    "description": "凤新-增值业务经理佣金系数",
                    "type": "number",
                    "format": "double"
                },
                "Guarantee": {
                    "description": "投资保障",
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IncrMoney": {
                    "description": "递增金额",
                    "type": "number",
                    "format": "double"
                },
                "IsFrontendDisplay": {
                    "description": "是否前端展示 0:是 1:否",
                    "type": "integer",
                    "format": "int32"
                },
                "IsSupportElectronicContract": {
                    "description": "是否支持电子合同 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "Level": {
                    "description": "级别",
                    "type": "string"
                },
                "LoanId": {
                    "description": "合同编号",
                    "type": "string"
                },
                "ManageFee": {
                    "description": "管理费",
                    "type": "string"
                },
                "MinMoney": {
                    "description": "起投金额",
                    "type": "number",
                    "format": "double"
                },
                "ModifiedUserId": {
                    "description": "更新操作人",
                    "type": "string"
                },
                "Name": {
                    "description": "项目名称",
                    "type": "string"
                },
                "OnlineOrder": {
                    "description": "是否线上认购，1是，0否",
                    "type": "integer",
                    "format": "int32"
                },
                "ProductSummary": {
                    "description": "产品亮点概述",
                    "type": "string"
                },
                "Profit": {
                    "description": "预期收益",
                    "type": "string"
                },
                "ProfitDesc": {
                    "description": "收益率说明",
                    "type": "string"
                },
                "ProfitType": {
                    "description": "收益方式:0一次性还本息,1半年付息，到期还本2按季付息，到期还本3产品结束时一次性分配4一次性分配收益 非数字手动填写",
                    "type": "string"
                },
                "Publisher": {
                    "description": "发行人",
                    "type": "string"
                },
                "RedemptionFee": {
                    "description": "赎回费",
                    "type": "string"
                },
                "RepaymentSource": {
                    "description": "还款来源",
                    "type": "string"
                },
                "RmDiscount": {
                    "description": "RM佣金系数",
                    "type": "number",
                    "format": "double"
                },
                "ServiceDiscount": {
                    "description": "服务费",
                    "type": "number",
                    "format": "double"
                },
                "StartTime": {
                    "description": "起息日",
                    "type": "string",
                    "format": "datetime"
                },
                "Status": {
                    "description": "状态,0预热,1在售,2已售完,3已到期",
                    "type": "integer",
                    "format": "int32"
                },
                "SubFee": {
                    "description": "认购费",
                    "type": "string"
                },
                "TotalMoney": {
                    "description": "募集到的总金额",
                    "type": "number",
                    "format": "double"
                },
                "TrusteeshipOrg": {
                    "description": "托管机构",
                    "type": "string"
                },
                "Type": {
                    "description": "项目类型:0人民币,1美元,2私募股权,3海外置业,4家庭保障、财富传承",
                    "type": "integer",
                    "format": "int32"
                },
                "Version": {
                    "description": "版本号",
                    "type": "integer",
                    "format": "int64"
                },
                "VideoRecord": {
                    "description": "是否双录，1是，0否",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "models.FortuneLoanContractQueue": {
            "title": "FortuneLoanContractQueue",
            "type": "object",
            "properties": {
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateExecuted": {
                    "description": "执行时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "description": "修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IsUpdate": {
                    "description": "是否为更新",
                    "type": "integer",
                    "format": "int32"
                },
                "LoanAttachmentId": {
                    "description": "附件ID",
                    "type": "string"
                },
                "LoanId": {
                    "description": "项目ID",
                    "type": "string"
                },
                "Status": {
                    "description": "状态 0:初始状态 1:已上传",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "models.FortuneLoanCopy11111": {
            "title": "FortuneLoanCopy11111",
            "type": "object",
            "properties": {
                "Account": {
                    "description": "募集账号",
                    "type": "string"
                },
                "AchievementDiscount": {
                    "description": "业绩折扣",
                    "type": "number",
                    "format": "double"
                },
                "BankName": {
                    "description": "收款银行",
                    "type": "string"
                },
                "CityManagerRate": {
                    "description": "城市负责人佣金系数",
                    "type": "number",
                    "format": "double"
                },
                "Collect": {
                    "description": "募集账户",
                    "type": "string"
                },
                "CollectMoney": {
                    "description": "募集总金额",
                    "type": "number",
                    "format": "double"
                },
                "CollectOrg": {
                    "description": "募集机构",
                    "type": "string"
                },
                "Comment": {
                    "description": "备注",
                    "type": "string"
                },
                "CommissionDiscount": {
                    "description": "佣金这算系数",
                    "type": "number",
                    "format": "double"
                },
                "Company": {
                    "description": "所属公司",
                    "type": "string"
                },
                "CompanyId": {
                    "description": "归属企业",
                    "type": "integer",
                    "format": "int32"
                },
                "ContractNoPrefix": {
                    "description": "合同编号前缀",
                    "type": "string"
                },
                "CountrywideManagerRate": {
                    "description": "全国负责人佣金系数",
                    "type": "number",
                    "format": "double"
                },
                "CreatedUserId": {
                    "description": "创建人",
                    "type": "string"
                },
                "Currency": {
                    "description": "币种，0人民币，1美元",
                    "type": "integer",
                    "format": "int32"
                },
                "DateEntered": {
                    "description": "添加时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "description": "更新时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deadline": {
                    "description": "产品期限",
                    "type": "integer",
                    "format": "int32"
                },
                "DeadlineDay": {
                    "description": "产品期限用天标识",
                    "type": "integer",
                    "format": "int64"
                },
                "DeadlineRemark": {
                    "description": "产品期限备注",
                    "type": "string"
                },
                "DeadlineType": {
                    "description": "产品期限类型:0天,1月,2年",
                    "type": "integer",
                    "format": "int32"
                },
                "Deleted": {
                    "description": "删除 0 未删除,1删除",
                    "type": "integer",
                    "format": "int32"
                },
                "EndTime": {
                    "description": "到期日",
                    "type": "string",
                    "format": "datetime"
                },
                "EstimatCollectMoney": {
                    "description": "预计募集总额",
                    "type": "number",
                    "format": "double"
                },
                "FrontendDisplayName": {
                    "description": "前端展示名称",
                    "type": "string"
                },
                "FrozenMoney": {
                    "description": "冻结金额",
                    "type": "number",
                    "format": "double"
                },
                "FundManager": {
                    "description": "基金管理人",
                    "type": "string"
                },
                "FxProductManagerRate": {
                    "description": "凤新-产品经理佣金系数",
                    "type": "number",
                    "format": "double"
                },
                "FxPropertyConsultantRate": {
                    "description": "凤新-置业顾问佣金系数",
                    "type": "number",
                    "format": "double"
                },
                "FxServiceManagerRate": {
                    "description": "凤新-增值业务经理佣金系数",
                    "type": "number",
                    "format": "double"
                },
                "Guarantee": {
                    "description": "投资保障",
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IncrMoney": {
                    "description": "递增金额",
                    "type": "number",
                    "format": "double"
                },
                "IsFrontendDisplay": {
                    "description": "是否前端展示 0:是 1:否",
                    "type": "integer",
                    "format": "int32"
                },
                "IsSupportElectronicContract": {
                    "description": "是否支持电子合同 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "Level": {
                    "description": "级别",
                    "type": "string"
                },
                "LoanId": {
                    "description": "合同编号",
                    "type": "string"
                },
                "ManageFee": {
                    "description": "管理费",
                    "type": "string"
                },
                "MinMoney": {
                    "description": "起投金额",
                    "type": "number",
                    "format": "double"
                },
                "ModifiedUserId": {
                    "description": "更新操作人",
                    "type": "string"
                },
                "Name": {
                    "description": "项目名称",
                    "type": "string"
                },
                "OnlineOrder": {
                    "description": "是否线上认购，1是，0否",
                    "type": "integer",
                    "format": "int32"
                },
                "ProductSummary": {
                    "description": "产品亮点概述",
                    "type": "string"
                },
                "Profit": {
                    "description": "预期收益",
                    "type": "string"
                },
                "ProfitDesc": {
                    "description": "收益率说明",
                    "type": "string"
                },
                "ProfitType": {
                    "description": "收益方式:0一次性还本息,1半年付息，到期还本",
                    "type": "string"
                },
                "Publisher": {
                    "description": "发行人",
                    "type": "string"
                },
                "RedemptionFee": {
                    "description": "赎回费",
                    "type": "string"
                },
                "RepaymentSource": {
                    "description": "还款来源",
                    "type": "string"
                },
                "RmDiscount": {
                    "description": "RM佣金系数",
                    "type": "number",
                    "format": "double"
                },
                "ServiceDiscount": {
                    "description": "服务费",
                    "type": "number",
                    "format": "double"
                },
                "StartTime": {
                    "description": "起息日",
                    "type": "string",
                    "format": "datetime"
                },
                "Status": {
                    "description": "状态,0预热,1在售,2已售完,3已到期",
                    "type": "integer",
                    "format": "int32"
                },
                "SubFee": {
                    "description": "认购费",
                    "type": "string"
                },
                "TotalMoney": {
                    "description": "募集到的总金额",
                    "type": "number",
                    "format": "double"
                },
                "TrusteeshipOrg": {
                    "description": "托管机构",
                    "type": "string"
                },
                "Type": {
                    "description": "项目类型:0人民币,1美元,2私募股权,3海外置业,4家庭保障、财富传承",
                    "type": "integer",
                    "format": "int32"
                },
                "Version": {
                    "description": "版本号",
                    "type": "integer",
                    "format": "int64"
                },
                "VideoRecord": {
                    "description": "是否双录，1是，0否",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "models.FortuneLoanCstm": {
            "title": "FortuneLoanCstm",
            "type": "object",
            "properties": {
                "BlockoutPeriod": {
                    "description": "封闭期",
                    "type": "string"
                },
                "BrightenedDot": {
                    "description": "产品亮点",
                    "type": "string"
                },
                "FitInvestor": {
                    "description": "适合投资人",
                    "type": "string"
                },
                "FundCost": {
                    "description": "基金费用",
                    "type": "string"
                },
                "FundManagerDesc": {
                    "description": "基金管理人介绍",
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "PublisherDesc": {
                    "description": "发行人介绍",
                    "type": "string"
                },
                "UseDesc": {
                    "description": "募集资金用途",
                    "type": "string"
                }
            }
        },
        "models.FortuneLoanHistory": {
            "title": "FortuneLoanHistory",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Info": {
                    "description": "修改的信息",
                    "type": "string"
                }
            }
        },
        "models.FortuneLoanPeriod": {
            "title": "FortuneLoanPeriod",
            "type": "object",
            "properties": {
                "CreatedUserId": {
                    "description": "创建人ID",
                    "type": "string"
                },
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "description": "修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "ExpireDate": {
                    "description": "产品到期日",
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "description": "自增主健",
                    "type": "integer",
                    "format": "int64"
                },
                "LoanId": {
                    "description": "项目ID",
                    "type": "string"
                },
                "ModifiedUserId": {
                    "description": "修改人ID",
                    "type": "string"
                },
                "PeriodNumber": {
                    "description": "期数(当前第几期)",
                    "type": "integer",
                    "format": "int32"
                },
                "ValueDate": {
                    "description": "产品起息日",
                    "type": "string",
                    "format": "datetime"
                }
            }
        },
        "models.FortuneLoanPeriodBak": {
            "title": "FortuneLoanPeriodBak",
            "type": "object",
            "properties": {
                "CreatedUserId": {
                    "description": "创建人ID",
                    "type": "string"
                },
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "description": "修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "ExpireDate": {
                    "description": "产品到期日",
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "description": "自增主健",
                    "type": "integer",
                    "format": "int64"
                },
                "LoanId": {
                    "description": "项目ID",
                    "type": "string"
                },
                "ModifiedUserId": {
                    "description": "修改人ID",
                    "type": "string"
                },
                "PeriodNumber": {
                    "description": "期数(当前第几期)",
                    "type": "integer",
                    "format": "int32"
                },
                "ValueDate": {
                    "description": "产品起息日",
                    "type": "string",
                    "format": "datetime"
                }
            }
        },
        "models.FortuneLoanPeriodCalculateInfo": {
            "title": "FortuneLoanPeriodCalculateInfo",
            "type": "object",
            "properties": {
                "CalculateDays": {
                    "description": "利息核算日信息",
                    "type": "string"
                },
                "CalculateSum": {
                    "description": "总期数",
                    "type": "integer",
                    "format": "int32"
                },
                "Count": {
                    "description": "计数 1:默认",
                    "type": "integer",
                    "format": "int32"
                },
                "CreatedUserId": {
                    "description": "创建人ID",
                    "type": "string"
                },
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "description": "修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "description": "自增主健",
                    "type": "integer",
                    "format": "int64"
                },
                "LoanId": {
                    "description": "项目ID",
                    "type": "string"
                },
                "ModifiedUserId": {
                    "description": "修改人ID",
                    "type": "string"
                },
                "PeriodId": {
                    "description": "期数ID",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.FortuneLoanPeriodCalculateInfoBak": {
            "title": "FortuneLoanPeriodCalculateInfoBak",
            "type": "object",
            "properties": {
                "CalculateDays": {
                    "description": "利息核算日信息",
                    "type": "string"
                },
                "CalculateSum": {
                    "description": "总期数",
                    "type": "integer",
                    "format": "int32"
                },
                "Count": {
                    "description": "计数 1:默认",
                    "type": "integer",
                    "format": "int32"
                },
                "CreatedUserId": {
                    "description": "创建人ID",
                    "type": "string"
                },
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "description": "修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "description": "自增主健",
                    "type": "integer",
                    "format": "int64"
                },
                "LoanId": {
                    "description": "项目ID",
                    "type": "string"
                },
                "ModifiedUserId": {
                    "description": "修改人ID",
                    "type": "string"
                },
                "PeriodId": {
                    "description": "期数ID",
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.FortuneLoanReorderManage": {
            "title": "FortuneLoanReorderManage",
            "type": "object",
            "properties": {
                "CreatedUser": {
                    "description": "创建人",
                    "type": "string"
                },
                "DateEntered": {
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "LoanId": {
                    "description": "项目ID",
                    "type": "string"
                },
                "Name": {
                    "description": "项目名称",
                    "type": "string"
                },
                "RelevancePage": {
                    "description": "针对页面 0:首页",
                    "type": "integer",
                    "format": "int32"
                },
                "Sort": {
                    "description": "排序",
                    "type": "integer",
                    "format": "int32"
                },
                "Type": {
                    "description": "类型 FRE:人民币固定收益 FCE:类固定收益 LE:地产基金 PE:私募股权 PES:私募证券",
                    "type": "string"
                }
            }
        },
        "models.FortuneLogOverseaJoinGolden": {
            "title": "FortuneLogOverseaJoinGolden",
            "type": "object",
            "properties": {
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "description": "主键ID",
                    "type": "integer",
                    "format": "int64"
                },
                "Info": {
                    "description": "日志内容",
                    "type": "string"
                }
            }
        },
        "models.FortuneLogOverseaJoinLoan": {
            "title": "FortuneLogOverseaJoinLoan",
            "type": "object",
            "properties": {
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "description": "主键ID",
                    "type": "integer",
                    "format": "int64"
                },
                "Info": {
                    "description": "日志内容",
                    "type": "string"
                }
            }
        },
        "models.FortuneLogOverseaReserve": {
            "title": "FortuneLogOverseaReserve",
            "type": "object",
            "properties": {
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "description": "主键ID",
                    "type": "integer",
                    "format": "int64"
                },
                "Info": {
                    "description": "日志内容",
                    "type": "string"
                }
            }
        },
        "models.FortuneMail": {
            "title": "FortuneMail",
            "type": "object",
            "properties": {
                "Content": {
                    "description": "邮件内容",
                    "type": "string"
                },
                "CreateUser": {
                    "description": "创建人",
                    "type": "string"
                },
                "DateEntered": {
                    "type": "string",
                    "format": "datetime"
                },
                "DateModify": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Mark": {
                    "description": "备注",
                    "type": "string"
                },
                "ModifyUser": {
                    "description": "修改人",
                    "type": "string"
                },
                "Scene": {
                    "description": "发送场景",
                    "type": "integer",
                    "format": "int64"
                },
                "SendType": {
                    "description": "发送方式",
                    "type": "integer",
                    "format": "int32"
                },
                "Status": {
                    "description": "默认有效，1有效，2无效",
                    "type": "integer",
                    "format": "int32"
                },
                "Title": {
                    "description": "邮件标题",
                    "type": "string"
                }
            }
        },
        "models.FortuneMarketBindWorkorder": {
            "title": "FortuneMarketBindWorkorder",
            "type": "object",
            "properties": {
                "Age": {
                    "description": "年龄",
                    "type": "integer",
                    "format": "int32"
                },
                "BindCityId": {
                    "description": "城市id",
                    "type": "string"
                },
                "BindCityManagerId": {
                    "description": "城市经理id",
                    "type": "string"
                },
                "BindCityManagerName": {
                    "description": "城市经理姓名",
                    "type": "string"
                },
                "BindGroupId": {
                    "description": "团队组id",
                    "type": "string"
                },
                "BindGroupManagerId": {
                    "description": "团队组长id",
                    "type": "string"
                },
                "BindGroupManagerName": {
                    "description": "团队组长姓名",
                    "type": "string"
                },
                "BindSamId": {
                    "description": "rm id",
                    "type": "string"
                },
                "BindSamName": {
                    "description": "rm 姓名",
                    "type": "string"
                },
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除",
                    "type": "integer",
                    "format": "int32"
                },
                "FullName": {
                    "description": "用户姓名",
                    "type": "string"
                },
                "Id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int64"
                },
                "IsShow": {
                    "description": "状态 0=不显示、1=显示",
                    "type": "integer",
                    "format": "int32"
                },
                "LastAllotOperaterId": {
                    "description": "分配操作人id",
                    "type": "string"
                },
                "LastAllotOperaterName": {
                    "description": "分配操作人姓名",
                    "type": "string"
                },
                "LastAllotStatus": {
                    "description": "状态 0=未分配、1=已分配、2=已回收",
                    "type": "integer",
                    "format": "int32"
                },
                "LastAllotTime": {
                    "description": "分配时间",
                    "type": "string",
                    "format": "datetime"
                },
                "LastDateModified": {
                    "description": "最后修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Location": {
                    "description": "所在地",
                    "type": "string"
                },
                "Mobile": {
                    "description": "手机号",
                    "type": "string"
                },
                "Remark": {
                    "description": "备注",
                    "type": "string"
                },
                "Sex": {
                    "description": "性别 male=男 female=女",
                    "type": "string"
                },
                "TimeNoticeTaskStatus": {
                    "description": "0=初始、1=扫描中、2=标记24小时内已建工单",
                    "type": "integer",
                    "format": "int32"
                },
                "UserId": {
                    "description": "用户id",
                    "type": "string"
                },
                "Username": {
                    "description": "用户名",
                    "type": "string"
                },
                "WorkorderApproveTime": {
                    "description": "审批通过时间",
                    "type": "string",
                    "format": "datetime"
                },
                "WorkorderCallId": {
                    "description": "录音id",
                    "type": "string"
                },
                "WorkorderCalledName": {
                    "description": "拨打坐席姓名",
                    "type": "string"
                },
                "WorkorderCalledNumber": {
                    "description": "拨打坐席工号",
                    "type": "string"
                },
                "WorkorderCalledTime": {
                    "description": "拨打时间",
                    "type": "string",
                    "format": "datetime"
                },
                "WorkorderCreateTime": {
                    "description": "工单创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "WorkorderId": {
                    "description": "工单id",
                    "type": "string"
                }
            }
        },
        "models.FortuneMarketBindWorkorderReport": {
            "title": "FortuneMarketBindWorkorderReport",
            "type": "object",
            "properties": {
                "Age": {
                    "description": "年龄",
                    "type": "integer",
                    "format": "int32"
                },
                "BindCityId": {
                    "description": "城市id",
                    "type": "string"
                },
                "BindCityManagerId": {
                    "description": "城市经理id",
                    "type": "string"
                },
                "BindCityManagerName": {
                    "description": "城市经理姓名",
                    "type": "string"
                },
                "BindGroupId": {
                    "description": "团队组id",
                    "type": "string"
                },
                "BindGroupManagerId": {
                    "description": "团队组长id",
                    "type": "string"
                },
                "BindGroupManagerName": {
                    "description": "团队组长姓名",
                    "type": "string"
                },
                "BindSamId": {
                    "description": "rm id",
                    "type": "string"
                },
                "BindSamName": {
                    "description": "rm 姓名",
                    "type": "string"
                },
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除",
                    "type": "integer",
                    "format": "int32"
                },
                "FullName": {
                    "description": "用户姓名",
                    "type": "string"
                },
                "Id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int64"
                },
                "LastAllotOperaterId": {
                    "description": "分配操作人id",
                    "type": "string"
                },
                "LastAllotOperaterName": {
                    "description": "分配操作人姓名",
                    "type": "string"
                },
                "LastAllotStatus": {
                    "description": "状态 0=未分配、1=已分配、2=已回收",
                    "type": "integer",
                    "format": "int32"
                },
                "LastAllotTime": {
                    "description": "分配时间",
                    "type": "string",
                    "format": "datetime"
                },
                "LastDateModified": {
                    "description": "最后修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Location": {
                    "description": "所在地",
                    "type": "string"
                },
                "Mobile": {
                    "description": "手机号",
                    "type": "string"
                },
                "Remark": {
                    "description": "备注",
                    "type": "string"
                },
                "Sex": {
                    "description": "性别 male=男 female=女",
                    "type": "string"
                },
                "UserId": {
                    "description": "用户id",
                    "type": "string"
                },
                "Username": {
                    "description": "用户名",
                    "type": "string"
                },
                "WorkorderApproveTime": {
                    "description": "审批通过时间",
                    "type": "string",
                    "format": "datetime"
                },
                "WorkorderCallId": {
                    "description": "录音id",
                    "type": "string"
                },
                "WorkorderCalledName": {
                    "description": "拨打坐席姓名",
                    "type": "string"
                },
                "WorkorderCalledNumber": {
                    "description": "拨打坐席工号",
                    "type": "string"
                },
                "WorkorderCalledTime": {
                    "description": "拨打时间",
                    "type": "string",
                    "format": "datetime"
                },
                "WorkorderCreateTime": {
                    "description": "工单创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "WorkorderId": {
                    "description": "工单id",
                    "type": "string"
                }
            }
        },
        "models.FortuneMarketUnbindWorkorder": {
            "title": "FortuneMarketUnbindWorkorder",
            "type": "object",
            "properties": {
                "Age": {
                    "description": "年龄",
                    "type": "integer",
                    "format": "int32"
                },
                "BindCityId": {
                    "description": "城市id",
                    "type": "string"
                },
                "BindCityManagerId": {
                    "description": "城市经理id",
                    "type": "string"
                },
                "BindCityManagerName": {
                    "description": "城市经理姓名",
                    "type": "string"
                },
                "BindGroupId": {
                    "description": "团队组id",
                    "type": "string"
                },
                "BindGroupManagerId": {
                    "description": "团队组长id",
                    "type": "string"
                },
                "BindGroupManagerName": {
                    "description": "团队组长姓名",
                    "type": "string"
                },
                "BindSamId": {
                    "description": "rm id",
                    "type": "string"
                },
                "BindSamName": {
                    "description": "rm 姓名",
                    "type": "string"
                },
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除",
                    "type": "integer",
                    "format": "int32"
                },
                "FullName": {
                    "description": "用户姓名",
                    "type": "string"
                },
                "Id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int64"
                },
                "IsShow": {
                    "description": "状态 0=不显示、1=显示",
                    "type": "integer",
                    "format": "int32"
                },
                "LastAllotInfo": {
                    "description": "分配信息",
                    "type": "string"
                },
                "LastAllotOperaterId": {
                    "description": "分配操作人id",
                    "type": "string"
                },
                "LastAllotOperaterName": {
                    "description": "分配操作人姓名",
                    "type": "string"
                },
                "LastAllotStatus": {
                    "description": "状态 0=未分配、1=已分配、2=已回收、3=分配失败",
                    "type": "integer",
                    "format": "int32"
                },
                "LastAllotTime": {
                    "description": "分配时间",
                    "type": "string",
                    "format": "datetime"
                },
                "LastDateModified": {
                    "description": "最后修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Location": {
                    "description": "所在地",
                    "type": "string"
                },
                "Mobile": {
                    "description": "手机号",
                    "type": "string"
                },
                "Remark": {
                    "description": "备注",
                    "type": "string"
                },
                "Sex": {
                    "description": "性别 male=男 female=女",
                    "type": "string"
                },
                "UserId": {
                    "description": "用户id",
                    "type": "string"
                },
                "Username": {
                    "description": "用户名",
                    "type": "string"
                },
                "WorkorderApproveTime": {
                    "description": "审批通过时间",
                    "type": "string",
                    "format": "datetime"
                },
                "WorkorderCallId": {
                    "description": "录音id",
                    "type": "string"
                },
                "WorkorderCalledName": {
                    "description": "拨打坐席姓名",
                    "type": "string"
                },
                "WorkorderCalledNumber": {
                    "description": "拨打坐席工号",
                    "type": "string"
                },
                "WorkorderCalledTime": {
                    "description": "拨打时间",
                    "type": "string",
                    "format": "datetime"
                },
                "WorkorderCreateTime": {
                    "description": "工单创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "WorkorderId": {
                    "description": "工单id",
                    "type": "string"
                }
            }
        },
        "models.FortuneMarketUnbindWorkorderAllotRecord": {
            "title": "FortuneMarketUnbindWorkorderAllotRecord",
            "type": "object",
            "properties": {
                "AllotInfo": {
                    "description": "分配信息",
                    "type": "string"
                },
                "AllotOperaterId": {
                    "description": "分配操作人id",
                    "type": "string"
                },
                "AllotOperaterName": {
                    "description": "分配操作人姓名",
                    "type": "string"
                },
                "AllotStatus": {
                    "description": "状态 0=未分配、1=已分配、2=已回收、3=分配失败",
                    "type": "integer",
                    "format": "int32"
                },
                "AllotTime": {
                    "description": "分配时间",
                    "type": "string",
                    "format": "datetime"
                },
                "BindSamId": {
                    "description": "分配 rm id",
                    "type": "string"
                },
                "BindSamName": {
                    "description": "分配 rm 姓名",
                    "type": "string"
                },
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "LastDateModified": {
                    "description": "最后修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "MarketUnbindWorkorderId": {
                    "description": "未绑定意向用户id",
                    "type": "string"
                },
                "RetrieveTime": {
                    "description": "回收时间",
                    "type": "string",
                    "format": "datetime"
                }
            }
        },
        "models.FortuneMarketUnbindWorkorderReport": {
            "title": "FortuneMarketUnbindWorkorderReport",
            "type": "object",
            "properties": {
                "Age": {
                    "description": "年龄",
                    "type": "integer",
                    "format": "int32"
                },
                "BindCityId": {
                    "description": "城市id",
                    "type": "string"
                },
                "BindCityManagerId": {
                    "description": "城市经理id",
                    "type": "string"
                },
                "BindCityManagerName": {
                    "description": "城市经理姓名",
                    "type": "string"
                },
                "BindGroupId": {
                    "description": "团队组id",
                    "type": "string"
                },
                "BindGroupManagerId": {
                    "description": "团队组长id",
                    "type": "string"
                },
                "BindGroupManagerName": {
                    "description": "团队组长姓名",
                    "type": "string"
                },
                "BindSamId": {
                    "description": "rm id",
                    "type": "string"
                },
                "BindSamName": {
                    "description": "rm 姓名",
                    "type": "string"
                },
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除",
                    "type": "integer",
                    "format": "int32"
                },
                "FullName": {
                    "description": "用户姓名",
                    "type": "string"
                },
                "Id": {
                    "description": "id",
                    "type": "integer",
                    "format": "int64"
                },
                "LastAllotInfo": {
                    "description": "分配信息",
                    "type": "string"
                },
                "LastAllotOperaterId": {
                    "description": "分配操作人id",
                    "type": "string"
                },
                "LastAllotOperaterName": {
                    "description": "分配操作人姓名",
                    "type": "string"
                },
                "LastAllotStatus": {
                    "description": "状态 0=未分配、1=已分配、2=已回收、3=分配失败",
                    "type": "integer",
                    "format": "int32"
                },
                "LastAllotTime": {
                    "description": "分配时间",
                    "type": "string",
                    "format": "datetime"
                },
                "LastDateModified": {
                    "description": "最后修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Location": {
                    "description": "所在地",
                    "type": "string"
                },
                "Mobile": {
                    "description": "手机号",
                    "type": "string"
                },
                "Remark": {
                    "description": "备注",
                    "type": "string"
                },
                "Sex": {
                    "description": "性别 male=男 female=女",
                    "type": "string"
                },
                "UserId": {
                    "description": "用户id",
                    "type": "string"
                },
                "Username": {
                    "description": "用户名",
                    "type": "string"
                },
                "WorkorderApproveTime": {
                    "description": "审批通过时间",
                    "type": "string",
                    "format": "datetime"
                },
                "WorkorderCallId": {
                    "description": "录音id",
                    "type": "string"
                },
                "WorkorderCalledName": {
                    "description": "拨打坐席姓名",
                    "type": "string"
                },
                "WorkorderCalledNumber": {
                    "description": "拨打坐席工号",
                    "type": "string"
                },
                "WorkorderCalledTime": {
                    "description": "拨打时间",
                    "type": "string",
                    "format": "datetime"
                },
                "WorkorderCreateTime": {
                    "description": "工单创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "WorkorderId": {
                    "description": "工单id",
                    "type": "string"
                }
            }
        },
        "models.FortuneMsg": {
            "title": "FortuneMsg",
            "type": "object",
            "properties": {
                "Content": {
                    "description": "短信内容",
                    "type": "string"
                },
                "CreateUser": {
                    "description": "创建人",
                    "type": "string"
                },
                "DateEntered": {
                    "type": "string",
                    "format": "datetime"
                },
                "DateModify": {
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Mark": {
                    "description": "备注",
                    "type": "string"
                },
                "ModifyUser": {
                    "description": "修改人",
                    "type": "string"
                },
                "Scene": {
                    "description": "发送场景",
                    "type": "integer",
                    "format": "int64"
                },
                "SendType": {
                    "description": "发送方式",
                    "type": "integer",
                    "format": "int32"
                },
                "Status": {
                    "description": "默认有效，1有效，2无效",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "models.FortuneMsgSendrecord": {
            "title": "FortuneMsgSendrecord",
            "type": "object",
            "properties": {
                "AddTime": {
                    "type": "string",
                    "format": "datetime"
                },
                "Contacts": {
                    "description": "联系方式，手机或邮件",
                    "type": "string"
                },
                "Content": {
                    "description": "短信内容",
                    "type": "string"
                },
                "CustomerId": {
                    "description": "customer_id",
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Name": {
                    "description": "发送人姓名",
                    "type": "string"
                },
                "Platform": {
                    "description": "平台,1财富，2私募，3callcenter",
                    "type": "integer",
                    "format": "int32"
                },
                "ResendId": {
                    "description": "重新发送的id",
                    "type": "integer",
                    "format": "int32"
                },
                "ResendTime": {
                    "type": "string",
                    "format": "datetime"
                },
                "Scene": {
                    "description": "发送场景",
                    "type": "integer",
                    "format": "int64"
                },
                "SendTo": {
                    "description": "1用户，2RM",
                    "type": "integer",
                    "format": "int32"
                },
                "SendType": {
                    "description": "发送方式,1自动,2手动",
                    "type": "integer",
                    "format": "int32"
                },
                "Status": {
                    "description": "发送状态，1成功,0失败",
                    "type": "integer",
                    "format": "int32"
                },
                "Title": {
                    "description": "标题",
                    "type": "string"
                },
                "Type": {
                    "description": "类型，1短信，2邮件",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "models.FortuneNode": {
            "title": "FortuneNode",
            "type": "object",
            "properties": {
                "Code": {
                    "description": "唯一标识码",
                    "type": "string"
                },
                "CreatedUserId": {
                    "description": "创建人ID",
                    "type": "string"
                },
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "description": "修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除 0否 1是",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IsParent": {
                    "description": "是否为父节点 0否 1是",
                    "type": "integer",
                    "format": "int32"
                },
                "ModifiedUserId": {
                    "description": "修改人ID",
                    "type": "string"
                },
                "Name": {
                    "description": "名称",
                    "type": "string"
                },
                "Pid": {
                    "description": "父级ID",
                    "type": "string"
                },
                "Sort": {
                    "description": "排序",
                    "type": "integer",
                    "format": "int32"
                },
                "Status": {
                    "description": "是否可见 0否 1可见",
                    "type": "integer",
                    "format": "int32"
                },
                "Url": {
                    "description": "节点对应url",
                    "type": "string"
                }
            }
        },
        "models.FortuneNodeButton": {
            "title": "FortuneNodeButton",
            "type": "object",
            "properties": {
                "Bid": {
                    "description": "所属按钮ID",
                    "type": "string"
                },
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "description": "修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除 0否 1是",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IsUrl": {
                    "description": "是否为url 0否 1是",
                    "type": "integer",
                    "format": "int32"
                },
                "Name": {
                    "description": "名称",
                    "type": "string"
                },
                "NodeId": {
                    "description": "所属节点ID",
                    "type": "string"
                },
                "Sort": {
                    "description": "排序",
                    "type": "integer",
                    "format": "int32"
                },
                "Status": {
                    "description": "是否可见 0否 1可见",
                    "type": "integer",
                    "format": "int32"
                },
                "Url": {
                    "description": "节点对应url",
                    "type": "string"
                }
            }
        },
        "models.FortuneOrderDetail": {
            "title": "FortuneOrderDetail",
            "type": "object",
            "properties": {
                "CreatedUserId": {
                    "type": "string"
                },
                "CustomerId": {
                    "description": "财富ID",
                    "type": "string"
                },
                "DateEntered": {
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IsDoubleRecord": {
                    "description": "是否双录 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "LoanType": {
                    "description": "项目类型 财富(0:人民币固定收益 1:美元固定收益 2:私募股权 3:海外置业 4:家庭保障•财富传承 5:私募证券 6:类固定收益产品) 私募(PE:私募股权 PES:私募证券 LE:地产基金)",
                    "type": "string"
                },
                "ModifiedUserId": {
                    "type": "string"
                },
                "OrderNo": {
                    "description": "订单号",
                    "type": "integer",
                    "format": "int64"
                },
                "RelevantId": {
                    "description": "关联ID",
                    "type": "string"
                },
                "Source": {
                    "description": "订单来源 1:财富 2:私募",
                    "type": "integer",
                    "format": "int32"
                },
                "Status": {
                    "description": "财富认购状态(1:新建保存 2:提交待审批 3:审批中 4:认购成功 5:认购失败 6:待支付 7:审批拒绝 8:作废) 私募订单状态(21:预约(待完成) 22:确认中 23:确认成功 24:确认失败 25:过期确认失败 26:部分确认成功 27:撤单 28:已失效)",
                    "type": "integer",
                    "format": "int32"
                },
                "SubType": {
                    "description": "认购类型 1:线上 2:线下",
                    "type": "integer",
                    "format": "int32"
                },
                "UserId": {
                    "description": "用户ID",
                    "type": "string"
                }
            }
        },
        "models.FortuneOverseasRegister": {
            "title": "FortuneOverseasRegister",
            "type": "object",
            "properties": {
                "DateEntered": {
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "type": "integer",
                    "format": "int32"
                },
                "Email": {
                    "description": "邮箱",
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Mobile": {
                    "description": "手机号",
                    "type": "string"
                },
                "Prefix": {
                    "description": "手机号前缀",
                    "type": "string"
                }
            }
        },
        "models.FortunePayReport": {
            "title": "FortunePayReport",
            "type": "object",
            "properties": {
                "BankBranchName": {
                    "description": "支行名称",
                    "type": "string"
                },
                "BankCardNo": {
                    "description": "银行卡号/打款帐号",
                    "type": "string"
                },
                "BankCityCode": {
                    "description": "开户行所在市",
                    "type": "string"
                },
                "BankCityName": {
                    "description": "开户行所在市",
                    "type": "string"
                },
                "BankId": {
                    "description": "银行id",
                    "type": "integer",
                    "format": "int64"
                },
                "BankName": {
                    "description": "银行名称",
                    "type": "string"
                },
                "BankProvinceCode": {
                    "description": "开户行所在省",
                    "type": "string"
                },
                "BankProvinceName": {
                    "description": "开户行所在省",
                    "type": "string"
                },
                "ContracCityCode": {
                    "description": "签约市",
                    "type": "string"
                },
                "ContracCityName": {
                    "type": "string"
                },
                "ContracProvinceCode": {
                    "description": "签约省",
                    "type": "string"
                },
                "ContracProvinceName": {
                    "type": "string"
                },
                "ContractCode": {
                    "description": "合同编号",
                    "type": "string"
                },
                "CreateTime": {
                    "type": "string",
                    "format": "datetime"
                },
                "CreateUserId": {
                    "description": "创建人",
                    "type": "integer",
                    "format": "int64"
                },
                "CreateUserName": {
                    "type": "string"
                },
                "CustomerId": {
                    "description": "客户ID",
                    "type": "string"
                },
                "Ext1": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IdCard": {
                    "description": "身份证号",
                    "type": "string"
                },
                "OwnCityId": {
                    "description": "创建人所属城市",
                    "type": "integer",
                    "format": "int64"
                },
                "OwnGroupId": {
                    "description": "创建人所属组别",
                    "type": "integer",
                    "format": "int64"
                },
                "PayAmount": {
                    "description": "打款金额",
                    "type": "number",
                    "format": "double"
                },
                "PayTime": {
                    "description": "打款日期",
                    "type": "string",
                    "format": "datetime"
                },
                "ProdId": {
                    "description": "产品Id",
                    "type": "string"
                },
                "ProdName": {
                    "description": "产品名称",
                    "type": "string"
                },
                "ProdType": {
                    "description": "产品类型：1 私募股权；2 私募证券；3 地产基金；4类固定收益；5 信托",
                    "type": "integer",
                    "format": "int32"
                },
                "Profit": {
                    "description": "利率（该客户打款金额，对应的产品利率）",
                    "type": "string"
                },
                "Remark": {
                    "description": "备注",
                    "type": "string"
                },
                "RiskLevel": {
                    "description": "风险等级（取财管  C1/C2/C3/C4/C5）",
                    "type": "string"
                },
                "State": {
                    "description": "1,正常",
                    "type": "integer",
                    "format": "int64"
                },
                "Type": {
                    "description": "类型：1 私募；2 非私募",
                    "type": "integer",
                    "format": "int32"
                },
                "UpdateTime": {
                    "type": "string",
                    "format": "datetime"
                },
                "VisitEndTime": {
                    "description": "回访结束时间",
                    "type": "string",
                    "format": "datetime"
                },
                "VisitPhone": {
                    "description": "回访电话",
                    "type": "string"
                },
                "VisitStartTime": {
                    "description": "回访开始时间",
                    "type": "string",
                    "format": "datetime"
                }
            }
        },
        "models.FortunePayReportAttachmentDownloadTask": {
            "title": "FortunePayReportAttachmentDownloadTask",
            "type": "object",
            "properties": {
                "CreateTime": {
                    "description": "创建时间/操作时间",
                    "type": "string",
                    "format": "datetime"
                },
                "CreateUserId": {
                    "description": "创建人/操作人",
                    "type": "integer",
                    "format": "int64"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "OperatorName": {
                    "description": "操作人",
                    "type": "string"
                },
                "PayReportId": {
                    "description": "fortune_pay_report表id",
                    "type": "string"
                },
                "ProductType": {
                    "description": "产品类型：1 私募类；2 非私募类",
                    "type": "integer",
                    "format": "int32"
                },
                "State": {
                    "description": "状态：1 进行中；2 完成",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "models.FortunePayReportAttachmentInfo": {
            "title": "FortunePayReportAttachmentInfo",
            "type": "object",
            "properties": {
                "CreateUserId": {
                    "type": "string"
                },
                "DateEntered": {
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "description": "修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "FileName": {
                    "description": "文件名",
                    "type": "string"
                },
                "FilePath": {
                    "description": "文件路径",
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "PayReportId": {
                    "description": "对应表的fortune_pay_report_id",
                    "type": "integer",
                    "format": "int64"
                },
                "Type": {
                    "description": "类型 1.非私募  2，私募",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "models.FortunePayReportZipArchive": {
            "title": "FortunePayReportZipArchive",
            "type": "object",
            "properties": {
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "description": "修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "PayReportId": {
                    "description": "报单ID",
                    "type": "integer",
                    "format": "int64"
                },
                "Status": {
                    "description": "状态 1:初始 2:处理中 3:已处理(打包完成)",
                    "type": "integer",
                    "format": "int32"
                },
                "Type": {
                    "description": "类型 1:非私募(财富) 2:私募",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "models.FortunePfQuestionEvaluation": {
            "title": "FortunePfQuestionEvaluation",
            "type": "object",
            "properties": {
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除",
                    "type": "integer",
                    "format": "int32"
                },
                "EvaluationExtResult": {
                    "description": "预约题结果",
                    "type": "string"
                },
                "EvaluationGrade": {
                    "description": "测评分数",
                    "type": "integer",
                    "format": "int32"
                },
                "EvaluationLevel": {
                    "description": "测评等级",
                    "type": "string"
                },
                "EvaluationQuestionSnapshoot": {
                    "description": "测评题选项列表快照",
                    "type": "string"
                },
                "EvaluationResult": {
                    "description": "测评题结果",
                    "type": "string"
                },
                "FullName": {
                    "description": "用户姓名",
                    "type": "string"
                },
                "Id": {
                    "description": "测评ID",
                    "type": "integer",
                    "format": "int64"
                },
                "LastDateModified": {
                    "description": "最后修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Mobile": {
                    "description": "手机号",
                    "type": "string"
                },
                "MobilePrefix": {
                    "description": "手机号前缀 国家码",
                    "type": "string"
                },
                "Remark": {
                    "description": "备注",
                    "type": "string"
                },
                "SubscribeQuestionSnapshoot": {
                    "description": "预约题选项列表快照",
                    "type": "string"
                },
                "Type": {
                    "description": "测评类型 1=个人 2=机构",
                    "type": "integer",
                    "format": "int32"
                },
                "UserId": {
                    "description": "用户ID",
                    "type": "string"
                },
                "Username": {
                    "description": "用户名",
                    "type": "string"
                }
            }
        },
        "models.FortunePfQuestionEvaluationCopy": {
            "title": "FortunePfQuestionEvaluationCopy",
            "type": "object",
            "properties": {
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除",
                    "type": "integer",
                    "format": "int32"
                },
                "EvaluationExtResult": {
                    "description": "预约题结果",
                    "type": "string"
                },
                "EvaluationGrade": {
                    "description": "测评分数",
                    "type": "integer",
                    "format": "int32"
                },
                "EvaluationLevel": {
                    "description": "测评等级",
                    "type": "string"
                },
                "EvaluationQuestionSnapshoot": {
                    "description": "测评题选项列表快照",
                    "type": "string"
                },
                "EvaluationResult": {
                    "description": "测评题结果",
                    "type": "string"
                },
                "FullName": {
                    "description": "用户姓名",
                    "type": "string"
                },
                "Id": {
                    "description": "测评ID",
                    "type": "integer",
                    "format": "int64"
                },
                "LastDateModified": {
                    "description": "最后修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Mobile": {
                    "description": "手机号",
                    "type": "string"
                },
                "MobilePrefix": {
                    "description": "手机号前缀 国家码",
                    "type": "string"
                },
                "Remark": {
                    "description": "备注",
                    "type": "string"
                },
                "SubscribeQuestionSnapshoot": {
                    "description": "预约题选项列表快照",
                    "type": "string"
                },
                "Type": {
                    "description": "测评类型 1=个人 2=机构",
                    "type": "integer",
                    "format": "int32"
                },
                "UserId": {
                    "description": "用户ID",
                    "type": "string"
                },
                "Username": {
                    "description": "用户名",
                    "type": "string"
                }
            }
        },
        "models.FortunePfQuestionEvaluationHistory": {
            "title": "FortunePfQuestionEvaluationHistory",
            "type": "object",
            "properties": {
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除",
                    "type": "integer",
                    "format": "int32"
                },
                "EvaluationExtResult": {
                    "description": "预约题结果",
                    "type": "string"
                },
                "EvaluationGrade": {
                    "description": "测评分数",
                    "type": "integer",
                    "format": "int32"
                },
                "EvaluationLevel": {
                    "description": "测评等级",
                    "type": "string"
                },
                "EvaluationQuestionSnapshoot": {
                    "description": "测评题选项列表快照",
                    "type": "string"
                },
                "EvaluationResult": {
                    "description": "测评题结果",
                    "type": "string"
                },
                "FullName": {
                    "description": "用户姓名",
                    "type": "string"
                },
                "Id": {
                    "description": "测评ID",
                    "type": "integer",
                    "format": "int64"
                },
                "Mobile": {
                    "description": "手机号",
                    "type": "string"
                },
                "MobilePrefix": {
                    "description": "手机号前缀 国家码",
                    "type": "string"
                },
                "Remark": {
                    "description": "备注",
                    "type": "string"
                },
                "SubscribeQuestionSnapshoot": {
                    "description": "预约题选项列表快照",
                    "type": "string"
                },
                "Type": {
                    "description": "测评类型 1=个人 2=机构",
                    "type": "integer",
                    "format": "int32"
                },
                "UserId": {
                    "description": "用户ID",
                    "type": "string"
                },
                "Username": {
                    "description": "用户名",
                    "type": "string"
                }
            }
        },
        "models.FortunePfQuestionEvaluationHistoryCopy": {
            "title": "FortunePfQuestionEvaluationHistoryCopy",
            "type": "object",
            "properties": {
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除",
                    "type": "integer",
                    "format": "int32"
                },
                "EvaluationExtResult": {
                    "description": "预约题结果",
                    "type": "string"
                },
                "EvaluationGrade": {
                    "description": "测评分数",
                    "type": "integer",
                    "format": "int32"
                },
                "EvaluationLevel": {
                    "description": "测评等级",
                    "type": "string"
                },
                "EvaluationQuestionSnapshoot": {
                    "description": "测评题选项列表快照",
                    "type": "string"
                },
                "EvaluationResult": {
                    "description": "测评题结果",
                    "type": "string"
                },
                "FullName": {
                    "description": "用户姓名",
                    "type": "string"
                },
                "Id": {
                    "description": "测评ID",
                    "type": "integer",
                    "format": "int64"
                },
                "Mobile": {
                    "description": "手机号",
                    "type": "string"
                },
                "MobilePrefix": {
                    "description": "手机号前缀 国家码",
                    "type": "string"
                },
                "Remark": {
                    "description": "备注",
                    "type": "string"
                },
                "SubscribeQuestionSnapshoot": {
                    "description": "预约题选项列表快照",
                    "type": "string"
                },
                "Type": {
                    "description": "测评类型 1=个人 2=机构",
                    "type": "integer",
                    "format": "int32"
                },
                "UserId": {
                    "description": "用户ID",
                    "type": "string"
                },
                "Username": {
                    "description": "用户名",
                    "type": "string"
                }
            }
        },
        "models.FortunePlanCallMsgHistory": {
            "title": "FortunePlanCallMsgHistory",
            "type": "object",
            "properties": {
                "DateEntered": {
                    "description": "发送时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "description": "主键id",
                    "type": "integer",
                    "format": "int64"
                },
                "Mobile": {
                    "description": "客户经理手机号",
                    "type": "string"
                },
                "PlanCallDate": {
                    "description": "沟通计划时间",
                    "type": "string",
                    "format": "datetime"
                },
                "SendContent": {
                    "description": "短信内容",
                    "type": "string"
                },
                "SendReason": {
                    "description": "发送状态描述",
                    "type": "string"
                },
                "SendStatus": {
                    "description": "短信发送状态 1=发送成功 2=发送失败",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "models.FortunePosition": {
            "title": "FortunePosition",
            "type": "object",
            "properties": {
                "CityId": {
                    "description": "所属市ID",
                    "type": "integer",
                    "format": "int32"
                },
                "CreatedUserId": {
                    "description": "创建人ID",
                    "type": "string"
                },
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "description": "修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DistrictId": {
                    "description": "所属区ID",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Level": {
                    "description": "级别 1城市经理 2团队经理 3客户经理",
                    "type": "integer",
                    "format": "int32"
                },
                "ModifiedUserId": {
                    "description": "修改人ID",
                    "type": "string"
                },
                "Number": {
                    "description": "职位编号",
                    "type": "string"
                },
                "Pid": {
                    "description": "父职位ID",
                    "type": "integer",
                    "format": "int32"
                },
                "Title": {
                    "description": "职位名称",
                    "type": "string"
                }
            }
        },
        "models.FortuneQrCodeInfo": {
            "title": "FortuneQrCodeInfo",
            "type": "object",
            "properties": {
                "DateDead": {
                    "description": "失效时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "OverseasUserId": {
                    "description": "参数",
                    "type": "string"
                },
                "Secret": {
                    "type": "string"
                }
            }
        },
        "models.FortuneQualifiedFlag": {
            "title": "FortuneQualifiedFlag",
            "type": "object",
            "properties": {
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "description": "主键ID",
                    "type": "integer",
                    "format": "int64"
                },
                "UserId": {
                    "description": "用户ID",
                    "type": "string"
                }
            }
        },
        "models.FortuneQuestion": {
            "title": "FortuneQuestion",
            "type": "object",
            "properties": {
                "CreatedUserId": {
                    "description": "创建人id",
                    "type": "string"
                },
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "description": "题库ID",
                    "type": "integer",
                    "format": "int64"
                },
                "LastDateModified": {
                    "description": "最后修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "LastModifiedUserId": {
                    "description": "最后修改人id",
                    "type": "string"
                },
                "QuestionNumber": {
                    "description": "题号",
                    "type": "integer",
                    "format": "int32"
                },
                "QuestionOption": {
                    "description": "题选项json内容",
                    "type": "string"
                },
                "QuestionType": {
                    "description": "题类型 1=个人  2=机构",
                    "type": "integer",
                    "format": "int32"
                },
                "Remark": {
                    "description": "题备注说明",
                    "type": "string"
                }
            }
        },
        "models.FortuneQuestionBank": {
            "title": "FortuneQuestionBank",
            "type": "object",
            "properties": {
                "CreatedName": {
                    "description": "创建人姓名",
                    "type": "string"
                },
                "CreatedUserId": {
                    "description": "创建人id",
                    "type": "string"
                },
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除",
                    "type": "integer",
                    "format": "int32"
                },
                "EvaluateType": {
                    "description": "题类型 1=个人 2=机构",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "description": "题库ID",
                    "type": "integer",
                    "format": "int64"
                },
                "LastDateModified": {
                    "description": "最后修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "LastModifiedName": {
                    "description": "最后修改人姓名",
                    "type": "string"
                },
                "LastModifiedUserId": {
                    "description": "最后修改人id",
                    "type": "string"
                },
                "OptionList": {
                    "description": "题选项列表",
                    "type": "string"
                },
                "QuestionDescription": {
                    "description": "问题描述",
                    "type": "string"
                },
                "QuestionMultiSelect": {
                    "description": "是否多选 0=否 1=是",
                    "type": "integer",
                    "format": "int32"
                },
                "QuestionType": {
                    "description": "问题类型 1=测评 2=预约",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "models.FortuneQuestionEvaluation": {
            "title": "FortuneQuestionEvaluation",
            "type": "object",
            "properties": {
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除",
                    "type": "integer",
                    "format": "int32"
                },
                "EvaluationExtResult": {
                    "description": "预约题结果",
                    "type": "string"
                },
                "EvaluationGrade": {
                    "description": "测评分数",
                    "type": "integer",
                    "format": "int32"
                },
                "EvaluationLevel": {
                    "description": "测评等级",
                    "type": "string"
                },
                "EvaluationQuestionSnapshoot": {
                    "description": "测评题选项列表快照",
                    "type": "string"
                },
                "EvaluationResult": {
                    "description": "测评题结果",
                    "type": "string"
                },
                "FullName": {
                    "description": "用户姓名",
                    "type": "string"
                },
                "Id": {
                    "description": "测评ID",
                    "type": "integer",
                    "format": "int64"
                },
                "LastDateModified": {
                    "description": "最后修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Mobile": {
                    "description": "手机号",
                    "type": "string"
                },
                "MobilePrefix": {
                    "description": "手机号前缀 国家码",
                    "type": "string"
                },
                "Remark": {
                    "description": "备注",
                    "type": "string"
                },
                "SubscribeQuestionSnapshoot": {
                    "description": "预约题选项列表快照",
                    "type": "string"
                },
                "Type": {
                    "description": "测评类型 1=个人 2=机构",
                    "type": "integer",
                    "format": "int32"
                },
                "UserId": {
                    "description": "用户ID",
                    "type": "string"
                },
                "Username": {
                    "description": "用户名",
                    "type": "string"
                }
            }
        },
        "models.FortuneQuestionEvaluationHistory": {
            "title": "FortuneQuestionEvaluationHistory",
            "type": "object",
            "properties": {
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除",
                    "type": "integer",
                    "format": "int32"
                },
                "EvaluationExtResult": {
                    "description": "预约题结果",
                    "type": "string"
                },
                "EvaluationGrade": {
                    "description": "测评分数",
                    "type": "integer",
                    "format": "int32"
                },
                "EvaluationLevel": {
                    "description": "测评等级",
                    "type": "string"
                },
                "EvaluationQuestionSnapshoot": {
                    "description": "测评题选项列表快照",
                    "type": "string"
                },
                "EvaluationResult": {
                    "description": "测评题结果",
                    "type": "string"
                },
                "FullName": {
                    "description": "用户姓名",
                    "type": "string"
                },
                "Id": {
                    "description": "测评ID",
                    "type": "integer",
                    "format": "int64"
                },
                "Mobile": {
                    "description": "手机号",
                    "type": "string"
                },
                "MobilePrefix": {
                    "description": "手机号前缀 国家码",
                    "type": "string"
                },
                "Remark": {
                    "description": "备注",
                    "type": "string"
                },
                "SubscribeQuestionSnapshoot": {
                    "description": "预约题选项列表快照",
                    "type": "string"
                },
                "Type": {
                    "description": "测评类型 1=个人 2=机构",
                    "type": "integer",
                    "format": "int32"
                },
                "UserId": {
                    "description": "用户ID",
                    "type": "string"
                },
                "Username": {
                    "description": "用户名",
                    "type": "string"
                }
            }
        },
        "models.FortuneRecommendFcSetting": {
            "title": "FortuneRecommendFcSetting",
            "type": "object",
            "properties": {
                "AchievementPercent": {
                    "description": "业绩配比",
                    "type": "integer",
                    "format": "int32"
                },
                "AchievementSetting": {
                    "description": "自动配置-业绩",
                    "type": "string"
                },
                "DateBegin": {
                    "description": "自动配置生效时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "description": "更新时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "MostSetting": {
                    "description": "最多展示数量设置",
                    "type": "string"
                },
                "SettingStatus": {
                    "description": "配置状态 1未生效 2生效中 3已过期",
                    "type": "integer",
                    "format": "int32"
                },
                "SettingType": {
                    "description": "配置规则 1手动 2自动",
                    "type": "integer",
                    "format": "int32"
                },
                "WorkorderPercent": {
                    "description": "业绩配比",
                    "type": "integer",
                    "format": "int32"
                },
                "WorkorderSetting": {
                    "description": "自动配置-工单",
                    "type": "string"
                }
            }
        },
        "models.FortuneRecommendFcSettingDetail": {
            "title": "FortuneRecommendFcSettingDetail",
            "type": "object",
            "properties": {
                "Achievement": {
                    "description": "业绩数",
                    "type": "integer",
                    "format": "int32"
                },
                "AchievementOrder": {
                    "description": "业绩数排名",
                    "type": "integer",
                    "format": "int32"
                },
                "City": {
                    "description": "北京 上海 深圳",
                    "type": "integer",
                    "format": "int32"
                },
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "description": "修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "RmId": {
                    "description": "RM id",
                    "type": "integer",
                    "format": "int64"
                },
                "SetId": {
                    "description": "配置id",
                    "type": "integer",
                    "format": "int64"
                },
                "SetOrder": {
                    "description": "排名顺序",
                    "type": "integer",
                    "format": "int32"
                },
                "TotalScore": {
                    "description": "得分",
                    "type": "number",
                    "format": "double"
                },
                "Workorder": {
                    "description": "工单数",
                    "type": "integer",
                    "format": "int32"
                },
                "WorkorderOrder": {
                    "description": "工单数排名",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "models.FortuneRecommendFcSettingDetailDeal": {
            "title": "FortuneRecommendFcSettingDetailDeal",
            "type": "object",
            "properties": {
                "Achievement": {
                    "description": "业绩数",
                    "type": "integer",
                    "format": "int32"
                },
                "AchievementOrder": {
                    "description": "业绩数排名",
                    "type": "integer",
                    "format": "int32"
                },
                "City": {
                    "description": "北京 上海 深圳",
                    "type": "integer",
                    "format": "int32"
                },
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "description": "修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "RmId": {
                    "description": "RM id",
                    "type": "integer",
                    "format": "int64"
                },
                "SetId": {
                    "description": "配置id",
                    "type": "integer",
                    "format": "int64"
                },
                "SetOrder": {
                    "description": "排名顺序",
                    "type": "integer",
                    "format": "int32"
                },
                "TotalScore": {
                    "description": "得分",
                    "type": "number",
                    "format": "double"
                },
                "Workorder": {
                    "description": "工单数",
                    "type": "integer",
                    "format": "int32"
                },
                "WorkorderOrder": {
                    "description": "工单数排名",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "models.FortuneRecordApprovalBiz": {
            "title": "FortuneRecordApprovalBiz",
            "type": "object",
            "properties": {
                "BelongCity": {
                    "description": "所属城市",
                    "type": "integer",
                    "format": "int32"
                },
                "CreateUserId": {
                    "description": "创建人ID",
                    "type": "string"
                },
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "description": "修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ProductType": {
                    "description": "产品线(产品类型)",
                    "type": "integer",
                    "format": "int32"
                },
                "SubmitType": {
                    "description": "认购方式",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "models.FortuneReportImportService": {
            "title": "FortuneReportImportService",
            "type": "object",
            "properties": {
                "AccountingDate": {
                    "description": "到账时间",
                    "type": "string",
                    "format": "datetime"
                },
                "AttrName": {
                    "description": "附件名",
                    "type": "string"
                },
                "AttrPath": {
                    "description": "附件地址",
                    "type": "string"
                },
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "description": "修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除 0否 1是",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "LoanId": {
                    "description": "项目id",
                    "type": "string"
                },
                "LoanPeriodId": {
                    "description": "起息日id，按逗号分隔",
                    "type": "string"
                },
                "LoanPeriodIdNum": {
                    "description": "起息日个数",
                    "type": "integer",
                    "format": "int64"
                },
                "ServiceDiscountReal": {
                    "description": "实收服务费(元)",
                    "type": "number",
                    "format": "double"
                },
                "ValueDate": {
                    "description": "起息日列表",
                    "type": "string"
                }
            }
        },
        "models.FortuneRole": {
            "title": "FortuneRole",
            "type": "object",
            "properties": {
                "CreatedUserId": {
                    "description": "创建人ID",
                    "type": "string"
                },
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "description": "修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除 0否 1是",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ModifiedUserId": {
                    "description": "修改人ID",
                    "type": "string"
                },
                "Name": {
                    "description": "名称",
                    "type": "string"
                }
            }
        },
        "models.FortuneSubscribeApprovalBiz": {
            "title": "FortuneSubscribeApprovalBiz",
            "type": "object",
            "properties": {
                "BelongCity": {
                    "description": "所属城市",
                    "type": "integer",
                    "format": "int32"
                },
                "CreateUserId": {
                    "description": "创建人ID",
                    "type": "string"
                },
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "description": "修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "ProductType": {
                    "description": "产品线(产品类型)",
                    "type": "integer",
                    "format": "int32"
                },
                "SubType": {
                    "description": "认购方式",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "models.FortuneSundryConfig": {
            "title": "FortuneSundryConfig",
            "type": "object",
            "properties": {
                "CreatedUserId": {
                    "description": "创建人ID",
                    "type": "string"
                },
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "description": "修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "JsonContext": {
                    "description": "配置内容",
                    "type": "string"
                },
                "ModifiedUserId": {
                    "description": "修改人ID",
                    "type": "string"
                },
                "Name": {
                    "description": "名称",
                    "type": "string"
                },
                "Status": {
                    "description": "状态 0:启用 1:禁用",
                    "type": "integer",
                    "format": "int32"
                },
                "UniqueIdent": {
                    "description": "唯一标识",
                    "type": "string"
                }
            }
        },
        "models.FortuneTemp": {
            "title": "FortuneTemp",
            "type": "object",
            "properties": {
                "Account": {
                    "description": "募集账号",
                    "type": "string"
                },
                "AchievementDiscount": {
                    "description": "业绩折扣",
                    "type": "number",
                    "format": "double"
                },
                "BankName": {
                    "description": "收款银行",
                    "type": "string"
                },
                "CityManagerRate": {
                    "description": "城市负责人佣金系数",
                    "type": "number",
                    "format": "double"
                },
                "Collect": {
                    "description": "募集账户",
                    "type": "string"
                },
                "CollectMoney": {
                    "description": "募集总金额",
                    "type": "number",
                    "format": "double"
                },
                "CollectOrg": {
                    "description": "募集机构",
                    "type": "string"
                },
                "Comment": {
                    "description": "备注",
                    "type": "string"
                },
                "CommissionDiscount": {
                    "description": "佣金这算系数",
                    "type": "number",
                    "format": "double"
                },
                "Company": {
                    "description": "所属公司",
                    "type": "string"
                },
                "CompanyId": {
                    "description": "归属企业",
                    "type": "integer",
                    "format": "int32"
                },
                "ContractNoPrefix": {
                    "description": "合同编号前缀",
                    "type": "string"
                },
                "CountrywideManagerRate": {
                    "description": "全国负责人佣金系数",
                    "type": "number",
                    "format": "double"
                },
                "CreatedUserId": {
                    "description": "创建人",
                    "type": "string"
                },
                "Currency": {
                    "description": "币种，0人民币，1美元",
                    "type": "integer",
                    "format": "int32"
                },
                "DateEntered": {
                    "description": "添加时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "description": "更新时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deadline": {
                    "description": "产品期限",
                    "type": "integer",
                    "format": "int32"
                },
                "DeadlineDay": {
                    "description": "产品期限用天标识",
                    "type": "integer",
                    "format": "int64"
                },
                "DeadlineRemark": {
                    "description": "产品期限备注",
                    "type": "string"
                },
                "DeadlineType": {
                    "description": "产品期限类型:0天,1月,2年",
                    "type": "integer",
                    "format": "int32"
                },
                "Deleted": {
                    "description": "删除 0 未删除,1删除",
                    "type": "integer",
                    "format": "int32"
                },
                "EndTime": {
                    "description": "到期日",
                    "type": "string",
                    "format": "datetime"
                },
                "EstimatCollectMoney": {
                    "description": "预计募集总额",
                    "type": "number",
                    "format": "double"
                },
                "FrontendDisplayName": {
                    "description": "前端展示名称",
                    "type": "string"
                },
                "FrozenMoney": {
                    "description": "冻结金额",
                    "type": "number",
                    "format": "double"
                },
                "FundManager": {
                    "description": "基金管理人",
                    "type": "string"
                },
                "FxProductManagerRate": {
                    "description": "凤新-产品经理佣金系数",
                    "type": "number",
                    "format": "double"
                },
                "FxPropertyConsultantRate": {
                    "description": "凤新-置业顾问佣金系数",
                    "type": "number",
                    "format": "double"
                },
                "FxServiceManagerRate": {
                    "description": "凤新-增值业务经理佣金系数",
                    "type": "number",
                    "format": "double"
                },
                "Guarantee": {
                    "description": "投资保障",
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "IncrMoney": {
                    "description": "递增金额",
                    "type": "number",
                    "format": "double"
                },
                "IsFrontendDisplay": {
                    "description": "是否前端展示 0:是 1:否",
                    "type": "integer",
                    "format": "int32"
                },
                "IsSupportElectronicContract": {
                    "description": "是否支持电子合同 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "Level": {
                    "description": "级别",
                    "type": "string"
                },
                "LoanId": {
                    "description": "合同编号",
                    "type": "string"
                },
                "ManageFee": {
                    "description": "管理费",
                    "type": "string"
                },
                "MinMoney": {
                    "description": "起投金额",
                    "type": "number",
                    "format": "double"
                },
                "ModifiedUserId": {
                    "description": "更新操作人",
                    "type": "string"
                },
                "Name": {
                    "description": "项目名称",
                    "type": "string"
                },
                "OnlineOrder": {
                    "description": "是否线上认购，1是，0否",
                    "type": "integer",
                    "format": "int32"
                },
                "ProductSummary": {
                    "description": "产品亮点概述",
                    "type": "string"
                },
                "Profit": {
                    "description": "预期收益",
                    "type": "string"
                },
                "ProfitDesc": {
                    "description": "收益率说明",
                    "type": "string"
                },
                "ProfitType": {
                    "description": "收益方式:0一次性还本息,1半年付息，到期还本",
                    "type": "string"
                },
                "Publisher": {
                    "description": "发行人",
                    "type": "string"
                },
                "RedemptionFee": {
                    "description": "赎回费",
                    "type": "string"
                },
                "RepaymentSource": {
                    "description": "还款来源",
                    "type": "string"
                },
                "RmDiscount": {
                    "description": "RM佣金系数",
                    "type": "number",
                    "format": "double"
                },
                "ServiceDiscount": {
                    "description": "服务费",
                    "type": "number",
                    "format": "double"
                },
                "StartTime": {
                    "description": "起息日",
                    "type": "string",
                    "format": "datetime"
                },
                "Status": {
                    "description": "状态,0预热,1在售,2已售完,3已到期",
                    "type": "integer",
                    "format": "int32"
                },
                "SubFee": {
                    "description": "认购费",
                    "type": "string"
                },
                "TotalMoney": {
                    "description": "募集到的总金额",
                    "type": "number",
                    "format": "double"
                },
                "TrusteeshipOrg": {
                    "description": "托管机构",
                    "type": "string"
                },
                "Type": {
                    "description": "项目类型:0人民币,1美元,2私募股权,3海外置业,4家庭保障、财富传承",
                    "type": "integer",
                    "format": "int32"
                },
                "Version": {
                    "description": "版本号",
                    "type": "integer",
                    "format": "int64"
                },
                "VideoRecord": {
                    "description": "是否双录，1是，0否",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "models.FortuneTempCstm": {
            "title": "FortuneTempCstm",
            "type": "object",
            "properties": {
                "BlockoutPeriod": {
                    "description": "封闭期",
                    "type": "string"
                },
                "BrightenedDot": {
                    "description": "产品亮点",
                    "type": "string"
                },
                "FitInvestor": {
                    "description": "适合投资人",
                    "type": "string"
                },
                "FundCost": {
                    "description": "基金费用",
                    "type": "string"
                },
                "FundManagerDesc": {
                    "description": "基金管理人介绍",
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "PublisherDesc": {
                    "description": "发行人介绍",
                    "type": "string"
                },
                "UseDesc": {
                    "description": "募集资金用途",
                    "type": "string"
                }
            }
        },
        "models.FortuneUsaAccountInfo": {
            "title": "FortuneUsaAccountInfo",
            "type": "object",
            "properties": {
                "DateEntered": {
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "type": "integer",
                    "format": "int32"
                },
                "FirstName": {
                    "description": "姓",
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "KycStatus": {
                    "description": "KYC状态 0:未审核 1:审核中 2:审核失败 3:审核通过",
                    "type": "integer",
                    "format": "int32"
                },
                "KycTime": {
                    "description": "KYC状态变更时间",
                    "type": "string",
                    "format": "datetime"
                },
                "LastName": {
                    "description": "名",
                    "type": "string"
                },
                "Ssn": {
                    "description": "美国社会安全码",
                    "type": "string"
                },
                "UsaVerifyStatus": {
                    "description": "美国合格投资人认证审核状态 0:未审核 1:审核中 2:审核失败 3:审核通过",
                    "type": "integer",
                    "format": "int32"
                },
                "UsaVerifyTime": {
                    "description": "状态变更时间",
                    "type": "string",
                    "format": "datetime"
                }
            }
        },
        "models.FortuneUser": {
            "title": "FortuneUser",
            "type": "object",
            "properties": {
                "AscriptionCategory": {
                    "description": "归属分类 0:无 1:财富管理 2:内部理财师",
                    "type": "integer",
                    "format": "int32"
                },
                "Certificate": {
                    "description": "证书",
                    "type": "string"
                },
                "CityManageId": {
                    "description": "城市经理职位ID",
                    "type": "integer",
                    "format": "int32"
                },
                "CityManageStaffId": {
                    "description": "城市经理ID",
                    "type": "integer",
                    "format": "int32"
                },
                "Code": {
                    "description": "公司ID",
                    "type": "string"
                },
                "Company": {
                    "description": "公司名称",
                    "type": "string"
                },
                "CreatedUserId": {
                    "description": "创建人ID",
                    "type": "string"
                },
                "CustomerManageId": {
                    "description": "客户经理职位ID",
                    "type": "integer",
                    "format": "int32"
                },
                "DataRole": {
                    "description": "数据权限",
                    "type": "string"
                },
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "description": "修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除 0否 1是",
                    "type": "integer",
                    "format": "int32"
                },
                "Department": {
                    "description": "所属部门 1财富 2财富运营 3金融产品中心 4营销 5财务 6用研",
                    "type": "integer",
                    "format": "int32"
                },
                "Education": {
                    "description": "学历 1=无、2=高中、3=大专、4=本科、5=硕士、6=博士",
                    "type": "integer",
                    "format": "int32"
                },
                "Email": {
                    "description": "邮箱",
                    "type": "string"
                },
                "Gender": {
                    "description": "性别 1:男 2:女",
                    "type": "integer",
                    "format": "int32"
                },
                "GroupId": {
                    "description": "组ID",
                    "type": "integer",
                    "format": "int32"
                },
                "GroupManageId": {
                    "description": "团队经理职位ID",
                    "type": "integer",
                    "format": "int32"
                },
                "GroupManageStaffId": {
                    "description": "团队经理ID",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Intro": {
                    "description": "个人简介",
                    "type": "string"
                },
                "IsShow": {
                    "description": "是否前端显示 1=显示  2=不显示",
                    "type": "integer",
                    "format": "int32"
                },
                "JobMarketAddress": {
                    "description": "职场所在地 0:无 1:北京 2:深圳 3:上海",
                    "type": "integer",
                    "format": "int32"
                },
                "Json": {
                    "description": "海外门店ID下关外客户相关信息",
                    "type": "string"
                },
                "LastChangePwd": {
                    "description": "最近修改密码时间",
                    "type": "string",
                    "format": "datetime"
                },
                "LastLogin": {
                    "description": "最近登录时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Level": {
                    "description": "角色 1超级管理员 2管理员 3城市经理 4团队经理 5客户经理",
                    "type": "integer",
                    "format": "int32"
                },
                "ModifiedUserId": {
                    "description": "修改人ID",
                    "type": "string"
                },
                "Name": {
                    "description": "姓名",
                    "type": "string"
                },
                "Number": {
                    "description": "员工编号",
                    "type": "string"
                },
                "OverseasUserId": {
                    "description": "海外客户ID",
                    "type": "string"
                },
                "OwnAreaId": {
                    "description": "所属大区",
                    "type": "integer",
                    "format": "int32"
                },
                "OwnCityId": {
                    "description": "所属城市",
                    "type": "integer",
                    "format": "int32"
                },
                "PNumber": {
                    "description": "职位编号",
                    "type": "string"
                },
                "Password": {
                    "description": "登录密码",
                    "type": "string"
                },
                "Picture": {
                    "description": "管理员照片",
                    "type": "string"
                },
                "Speciality": {
                    "description": "擅长领域",
                    "type": "string"
                },
                "Status": {
                    "description": "是否生效 0否 1是",
                    "type": "integer",
                    "format": "int32"
                },
                "Tel": {
                    "description": "电话",
                    "type": "string"
                },
                "Username": {
                    "description": "登录账号",
                    "type": "string"
                },
                "WorkRecord": {
                    "description": "从业经历",
                    "type": "string"
                }
            }
        },
        "models.FortuneUserSubscriptionApproveInfo": {
            "title": "FortuneUserSubscriptionApproveInfo",
            "type": "object",
            "properties": {
                "ApprovalLevel": {
                    "description": "审批级别",
                    "type": "integer",
                    "format": "int32"
                },
                "ApproveAction": {
                    "description": "审批动作 1通过 2拒绝",
                    "type": "integer",
                    "format": "int32"
                },
                "ApproveTime": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "ApproveUserId": {
                    "type": "string"
                },
                "Id": {
                    "description": "主键ID",
                    "type": "integer",
                    "format": "int64"
                },
                "RefusalCause": {
                    "description": "拒绝原因",
                    "type": "string"
                },
                "RefusalType": {
                    "description": "拒绝类型",
                    "type": "integer",
                    "format": "int64"
                },
                "SubId": {
                    "description": "认购ID",
                    "type": "string"
                }
            }
        },
        "models.FortuneUserSubscriptionAttachmentInfo": {
            "title": "FortuneUserSubscriptionAttachmentInfo",
            "type": "object",
            "properties": {
                "AttachmentType": {
                    "description": "1身份证 2协议 3风险测评 4见证声明 5回款凭证 6银行卡上传 ",
                    "type": "integer",
                    "format": "int32"
                },
                "CreateUserId": {
                    "type": "string"
                },
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "状态  0正常  1删除",
                    "type": "integer",
                    "format": "int32"
                },
                "FileName": {
                    "description": "文件名",
                    "type": "string"
                },
                "FilePath": {
                    "description": "文件路径",
                    "type": "string"
                },
                "Id": {
                    "description": "主键ID",
                    "type": "integer",
                    "format": "int64"
                },
                "SubscriptionId": {
                    "description": "认购ID",
                    "type": "string"
                }
            }
        },
        "models.FortuneUserSubscriptionAttachmentInfoBak": {
            "title": "FortuneUserSubscriptionAttachmentInfoBak",
            "type": "object",
            "properties": {
                "AttachmentType": {
                    "description": "1身份证 2协议 3风险测评 4见证声明 5回款凭证 6银行卡上传 ",
                    "type": "integer",
                    "format": "int32"
                },
                "CreateUserId": {
                    "type": "string"
                },
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "状态  1正常  2删除",
                    "type": "integer",
                    "format": "int32"
                },
                "FileName": {
                    "description": "文件名",
                    "type": "string"
                },
                "FilePath": {
                    "description": "文件路径",
                    "type": "string"
                },
                "Id": {
                    "description": "主键ID",
                    "type": "integer",
                    "format": "int64"
                },
                "SubscriptionId": {
                    "description": "认购ID",
                    "type": "string"
                }
            }
        },
        "models.FortuneUserSubscriptionInfo": {
            "title": "FortuneUserSubscriptionInfo",
            "type": "object",
            "properties": {
                "Address": {
                    "description": "地址",
                    "type": "string"
                },
                "AllAmount": {
                    "description": "总金额 =认购金额+认购金额*认购费",
                    "type": "number",
                    "format": "double"
                },
                "AscriptionCategory": {
                    "description": "销售渠道",
                    "type": "integer",
                    "format": "int32"
                },
                "BankAccount": {
                    "description": "银行账户",
                    "type": "string"
                },
                "BranchBank": {
                    "description": "分行银行",
                    "type": "string"
                },
                "ContractNo": {
                    "description": "合同编号",
                    "type": "string"
                },
                "CreateUserId": {
                    "description": "创建用户ID APP认购理财师",
                    "type": "string"
                },
                "CurrentApprovalLevel": {
                    "description": "当前审批级别",
                    "type": "integer",
                    "format": "int32"
                },
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateExcepted": {
                    "description": "预计支付时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "description": "修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateSubmited": {
                    "description": "提交时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "description": "主键ID",
                    "type": "integer",
                    "format": "int64"
                },
                "InfoStatus": {
                    "description": "状态  1新建保存 2提交待审批 3审批中 4认购成功 5认购失败 6待支付",
                    "type": "integer",
                    "format": "int32"
                },
                "InterestRate": {
                    "description": "利率(业绩基准)",
                    "type": "number",
                    "format": "double"
                },
                "IsDoubleRecord": {
                    "description": "是否双录 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "JobMarketAddress": {
                    "description": "职场所在地 ",
                    "type": "integer",
                    "format": "int32"
                },
                "LoanEndTime": {
                    "description": "标的到期日",
                    "type": "string",
                    "format": "datetime"
                },
                "LoanId": {
                    "type": "string"
                },
                "LoanPeriodId": {
                    "description": "项目期数ID",
                    "type": "integer",
                    "format": "int64"
                },
                "LoanStartTime": {
                    "description": "标的气息日",
                    "type": "string",
                    "format": "datetime"
                },
                "OnlineUserId": {
                    "description": "线上用户ID",
                    "type": "string"
                },
                "OpenAccountName": {
                    "description": "开户名",
                    "type": "string"
                },
                "OrderNo": {
                    "description": "订单编号",
                    "type": "integer",
                    "format": "int64"
                },
                "PredictIncome": {
                    "description": "预期总收益",
                    "type": "number",
                    "format": "double"
                },
                "ReceivedDate": {
                    "description": "到账日期",
                    "type": "string",
                    "format": "datetime"
                },
                "RecordStatus": {
                    "description": "双录审核状态",
                    "type": "integer",
                    "format": "int32"
                },
                "Remark": {
                    "description": "备注",
                    "type": "string"
                },
                "ServiceRate": {
                    "description": "服务费率",
                    "type": "number",
                    "format": "double"
                },
                "SubType": {
                    "description": "类型  1:线上 2:线下",
                    "type": "integer",
                    "format": "int32"
                },
                "SubscriptionAmount": {
                    "description": "认购金额",
                    "type": "number",
                    "format": "double"
                },
                "SubscriptionDate": {
                    "description": "认购日期",
                    "type": "string",
                    "format": "datetime"
                },
                "SubscriptionFee": {
                    "description": "认购费",
                    "type": "number",
                    "format": "double"
                },
                "SwiftCode": {
                    "description": "SWIFT CODE",
                    "type": "string"
                },
                "UserId": {
                    "description": "Customer ID",
                    "type": "string"
                },
                "UserRemitBank": {
                    "description": "客户汇款银行",
                    "type": "string"
                }
            }
        },
        "models.FortuneUserSubscriptionInfoBak": {
            "title": "FortuneUserSubscriptionInfoBak",
            "type": "object",
            "properties": {
                "Address": {
                    "description": "地址",
                    "type": "string"
                },
                "AllAmount": {
                    "description": "总金额 =认购金额+认购金额*认购费",
                    "type": "number",
                    "format": "double"
                },
                "AscriptionCategory": {
                    "description": "销售渠道",
                    "type": "integer",
                    "format": "int32"
                },
                "BankAccount": {
                    "description": "银行账户",
                    "type": "string"
                },
                "BranchBank": {
                    "description": "分行银行",
                    "type": "string"
                },
                "ContractNo": {
                    "description": "合同编号",
                    "type": "string"
                },
                "CreateUserId": {
                    "description": "创建用户ID APP认购理财师",
                    "type": "string"
                },
                "CurrentApprovalLevel": {
                    "description": "当前审批级别",
                    "type": "integer",
                    "format": "int32"
                },
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateExcepted": {
                    "description": "预计支付时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "description": "修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateSubmited": {
                    "description": "提交时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "description": "主键ID",
                    "type": "integer",
                    "format": "int64"
                },
                "InfoStatus": {
                    "description": "状态 1新建保存 2提交待审批 3审批中 4认购成功 5认购失败 6待支付",
                    "type": "integer",
                    "format": "int32"
                },
                "InterestRate": {
                    "description": "利率(业绩基准)",
                    "type": "number",
                    "format": "double"
                },
                "IsDoubleRecord": {
                    "description": "是否双录 0:否 1:是",
                    "type": "integer",
                    "format": "int32"
                },
                "JobMarketAddress": {
                    "description": "职场所在地 ",
                    "type": "integer",
                    "format": "int32"
                },
                "LoanEndTime": {
                    "description": "标的到期日",
                    "type": "string",
                    "format": "datetime"
                },
                "LoanId": {
                    "type": "string"
                },
                "LoanPeriodId": {
                    "description": "项目期数ID",
                    "type": "integer",
                    "format": "int64"
                },
                "LoanStartTime": {
                    "description": "标的气息日",
                    "type": "string",
                    "format": "datetime"
                },
                "OnlineUserId": {
                    "description": "线上用户ID",
                    "type": "string"
                },
                "OpenAccountName": {
                    "description": "开户名",
                    "type": "string"
                },
                "OrderNo": {
                    "description": "订单编号",
                    "type": "integer",
                    "format": "int64"
                },
                "ReceivedDate": {
                    "description": "到账日期",
                    "type": "string",
                    "format": "datetime"
                },
                "RecordStatus": {
                    "description": "双录审核状态",
                    "type": "integer",
                    "format": "int32"
                },
                "Remark": {
                    "description": "备注",
                    "type": "string"
                },
                "ServiceRate": {
                    "description": "服务费率",
                    "type": "number",
                    "format": "double"
                },
                "SubType": {
                    "description": "类型 1:线上 2:线下",
                    "type": "integer",
                    "format": "int32"
                },
                "SubscriptionAmount": {
                    "description": "认购金额",
                    "type": "number",
                    "format": "double"
                },
                "SubscriptionDate": {
                    "description": "认购日期",
                    "type": "string",
                    "format": "datetime"
                },
                "SubscriptionFee": {
                    "description": "认购费",
                    "type": "number",
                    "format": "double"
                },
                "SwiftCode": {
                    "description": "SWIFT CODE",
                    "type": "string"
                },
                "UserId": {
                    "description": "Customer ID",
                    "type": "string"
                },
                "UserRemitBank": {
                    "description": "客户汇款银行",
                    "type": "string"
                }
            }
        },
        "models.FortuneUserSubscriptionInfoBak20180509": {
            "title": "FortuneUserSubscriptionInfoBak20180509",
            "type": "object",
            "properties": {
                "Address": {
                    "description": "地址",
                    "type": "string"
                },
                "AllAmount": {
                    "description": "总金额 =认购金额+认购金额*认购费",
                    "type": "number",
                    "format": "double"
                },
                "BankAccount": {
                    "description": "银行账户",
                    "type": "string"
                },
                "BranchBank": {
                    "description": "分行银行",
                    "type": "string"
                },
                "ContractNo": {
                    "description": "合同编号",
                    "type": "string"
                },
                "CreateUserId": {
                    "description": "创建用户ID APP认购理财师",
                    "type": "string"
                },
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateExcepted": {
                    "description": "预计支付时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "description": "修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateSubmited": {
                    "description": "提交时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "description": "主键ID",
                    "type": "integer",
                    "format": "int64"
                },
                "InfoStatus": {
                    "description": "状态  1新建保存 2提交待审批 3审批中 4认购成功 5认购失败 6待支付",
                    "type": "integer",
                    "format": "int32"
                },
                "LoanEndTime": {
                    "description": "标的到期日",
                    "type": "string",
                    "format": "datetime"
                },
                "LoanId": {
                    "type": "string"
                },
                "LoanStartTime": {
                    "description": "标的气息日",
                    "type": "string",
                    "format": "datetime"
                },
                "OrderNo": {
                    "description": "订单编号(app端用)",
                    "type": "integer",
                    "format": "int64"
                },
                "Remark": {
                    "description": "备注",
                    "type": "string"
                },
                "SubType": {
                    "description": "类型  1:线上 2:线下",
                    "type": "integer",
                    "format": "int32"
                },
                "SubscriptionAmount": {
                    "description": "认购金额",
                    "type": "number",
                    "format": "double"
                },
                "SubscriptionDate": {
                    "description": "认购日期",
                    "type": "string",
                    "format": "datetime"
                },
                "SubscriptionFee": {
                    "description": "认购费",
                    "type": "number",
                    "format": "double"
                },
                "SwiftCode": {
                    "description": "SWIFT CODE",
                    "type": "string"
                },
                "UserId": {
                    "type": "string"
                },
                "UserRemitBank": {
                    "description": "客户汇款银行",
                    "type": "string"
                }
            }
        },
        "models.FortuneUserSubscriptionInfoCopy": {
            "title": "FortuneUserSubscriptionInfoCopy",
            "type": "object",
            "properties": {
                "Address": {
                    "description": "地址",
                    "type": "string"
                },
                "AllAmount": {
                    "description": "总金额 =认购金额+认购金额*认购费",
                    "type": "number",
                    "format": "double"
                },
                "BankAccount": {
                    "description": "银行账户",
                    "type": "string"
                },
                "BranchBank": {
                    "description": "分行银行",
                    "type": "string"
                },
                "ContractNo": {
                    "description": "合同编号",
                    "type": "string"
                },
                "CreateUserId": {
                    "type": "string"
                },
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "description": "修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateSubmited": {
                    "description": "提交时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "description": "主键ID",
                    "type": "integer",
                    "format": "int64"
                },
                "InfoStatus": {
                    "description": "状态  1新建保存 2提交待审批 3审批中 4认购成功 5认购失败",
                    "type": "integer",
                    "format": "int32"
                },
                "LoanId": {
                    "type": "string"
                },
                "Remark": {
                    "description": "备注",
                    "type": "string"
                },
                "SubscriptionAmount": {
                    "description": "认购金额",
                    "type": "number",
                    "format": "double"
                },
                "SubscriptionDate": {
                    "description": "认购日期",
                    "type": "string",
                    "format": "datetime"
                },
                "SubscriptionFee": {
                    "description": "认购费",
                    "type": "number",
                    "format": "double"
                },
                "SwiftCode": {
                    "description": "SWIFT CODE",
                    "type": "string"
                },
                "UserId": {
                    "type": "string"
                },
                "UserRemitBank": {
                    "description": "客户汇款银行",
                    "type": "string"
                }
            }
        },
        "models.FortuneUserTools": {
            "title": "FortuneUserTools",
            "type": "object",
            "properties": {
                "AscriptionCategory": {
                    "description": "归属分类 0:无 1:财富管理 2:内部理财师",
                    "type": "integer",
                    "format": "int32"
                },
                "Certificate": {
                    "description": "证书",
                    "type": "string"
                },
                "CityManageId": {
                    "description": "城市经理职位ID",
                    "type": "integer",
                    "format": "int32"
                },
                "CityManageStaffId": {
                    "description": "城市经理ID",
                    "type": "integer",
                    "format": "int32"
                },
                "CreatedUserId": {
                    "description": "创建人ID",
                    "type": "string"
                },
                "CustomerManageId": {
                    "description": "客户经理职位ID",
                    "type": "integer",
                    "format": "int32"
                },
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "description": "修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "description": "是否删除 0否 1是",
                    "type": "integer",
                    "format": "int32"
                },
                "Education": {
                    "description": "学历 1=无、2=高中、3=大专、4=本科、5=硕士、6=博士",
                    "type": "integer",
                    "format": "int32"
                },
                "Email": {
                    "description": "邮箱",
                    "type": "string"
                },
                "Gender": {
                    "description": "性别 1:男 2:女",
                    "type": "integer",
                    "format": "int32"
                },
                "GroupManageId": {
                    "description": "团队经理职位ID",
                    "type": "integer",
                    "format": "int32"
                },
                "GroupManageStaffId": {
                    "description": "团队经理ID",
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Intro": {
                    "description": "个人简介",
                    "type": "string"
                },
                "IsShow": {
                    "description": "是否前端显示 1=显示  2=不显示",
                    "type": "integer",
                    "format": "int32"
                },
                "JobMarketAddress": {
                    "description": "职场所在地 0:无 1:北京 2:深圳 3:上海",
                    "type": "integer",
                    "format": "int32"
                },
                "Json": {
                    "description": "海外门店ID下关外客户相关信息",
                    "type": "string"
                },
                "LastChangePwd": {
                    "description": "最近修改密码时间",
                    "type": "string",
                    "format": "datetime"
                },
                "LastLogin": {
                    "description": "最近登录时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Level": {
                    "description": "角色 1超级管理员 2管理员 3城市经理 4团队经理 5客户经理",
                    "type": "integer",
                    "format": "int32"
                },
                "ModifiedUserId": {
                    "description": "修改人ID",
                    "type": "string"
                },
                "Name": {
                    "description": "姓名",
                    "type": "string"
                },
                "Number": {
                    "description": "员工编号",
                    "type": "string"
                },
                "OverseasUserId": {
                    "description": "海外客户ID",
                    "type": "string"
                },
                "OwnAreaId": {
                    "description": "所属大区",
                    "type": "integer",
                    "format": "int32"
                },
                "OwnCityId": {
                    "description": "所属城市",
                    "type": "integer",
                    "format": "int32"
                },
                "PNumber": {
                    "description": "职位编号",
                    "type": "string"
                },
                "Password": {
                    "description": "登录密码",
                    "type": "string"
                },
                "Picture": {
                    "description": "管理员照片",
                    "type": "string"
                },
                "Speciality": {
                    "description": "擅长领域",
                    "type": "string"
                },
                "Status": {
                    "description": "是否生效 0否 1是",
                    "type": "integer",
                    "format": "int32"
                },
                "Tel": {
                    "description": "电话",
                    "type": "string"
                },
                "Username": {
                    "description": "登录账号",
                    "type": "string"
                },
                "WorkRecord": {
                    "description": "从业经历",
                    "type": "string"
                }
            }
        },
        "models.FortuneVars": {
            "title": "FortuneVars",
            "type": "object",
            "properties": {
                "AddTime": {
                    "type": "string",
                    "format": "datetime"
                },
                "AddUser": {
                    "type": "string"
                },
                "Content": {
                    "description": "变量内容",
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Name": {
                    "description": "变量名",
                    "type": "string"
                },
                "SendMethod": {
                    "description": "1短信，2邮件",
                    "type": "integer",
                    "format": "int32"
                },
                "SendType": {
                    "description": "1自动，2手动",
                    "type": "integer",
                    "format": "int32"
                },
                "Status": {
                    "description": "1启用，2禁用",
                    "type": "integer",
                    "format": "int32"
                },
                "Topic": {
                    "description": "变量的标识",
                    "type": "string"
                },
                "UpdateTime": {
                    "type": "string",
                    "format": "datetime"
                },
                "UpdateUser": {
                    "type": "string"
                }
            }
        },
        "models.FortuneVideoRecords": {
            "title": "FortuneVideoRecords",
            "type": "object",
            "properties": {
                "AddTime": {
                    "type": "string",
                    "format": "datetime"
                },
                "ApproveFlowId": {
                    "description": "审批流程ID",
                    "type": "integer",
                    "format": "int64"
                },
                "ApproveTaskId": {
                    "description": "审批任务ID",
                    "type": "integer",
                    "format": "int64"
                },
                "BindSamId": {
                    "description": "当前提交时绑定的id",
                    "type": "string"
                },
                "City": {
                    "description": "提交时的城市",
                    "type": "integer",
                    "format": "int32"
                },
                "CreatedUser": {
                    "description": "创建者",
                    "type": "string"
                },
                "CurrentApprovalLevel": {
                    "description": "财富当前审批级别",
                    "type": "integer",
                    "format": "int32"
                },
                "Deleted": {
                    "type": "integer",
                    "format": "int32"
                },
                "ExtraInfo": {
                    "description": "额外信息",
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "LoanName": {
                    "description": "预约产品名称",
                    "type": "string"
                },
                "NowApproveHistoryId": {
                    "description": "当前任务审批节点ID",
                    "type": "integer",
                    "format": "int64"
                },
                "NowApproveProcessId": {
                    "description": "当前审批节点ID",
                    "type": "integer",
                    "format": "int64"
                },
                "OrderNo": {
                    "description": "订单编号",
                    "type": "string"
                },
                "PhoneMobile": {
                    "description": "用户手机号",
                    "type": "string"
                },
                "Status": {
                    "description": "审核状态，0默认，1待审核,2审核通过，3审核拒绝",
                    "type": "integer",
                    "format": "int32"
                },
                "SubmitTime": {
                    "description": "提交时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Type": {
                    "description": "来源: 1财富,2私募",
                    "type": "integer",
                    "format": "int32"
                },
                "UpdateTime": {
                    "type": "string",
                    "format": "datetime"
                },
                "UserId": {
                    "description": "用户userId",
                    "type": "string"
                },
                "UserName": {
                    "description": "用户姓名",
                    "type": "string"
                },
                "VideoName": {
                    "description": "双录文件名",
                    "type": "string"
                }
            }
        },
        "models.FortuneVideoRecordsHistory": {
            "title": "FortuneVideoRecordsHistory",
            "type": "object",
            "properties": {
                "AuditMark": {
                    "description": "备注",
                    "type": "string"
                },
                "AuditName": {
                    "description": "审核人姓名",
                    "type": "string"
                },
                "AuditReason": {
                    "description": "拒绝原因",
                    "type": "integer",
                    "format": "int32"
                },
                "AuditStatus": {
                    "description": "审批结果，0默认，1通过，2拒绝",
                    "type": "integer",
                    "format": "int32"
                },
                "AuditTime": {
                    "description": "审批时间",
                    "type": "string",
                    "format": "datetime"
                },
                "HistoryId": {
                    "description": "历史记录id",
                    "type": "integer",
                    "format": "int64"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "VideoRecordId": {
                    "description": "双录id",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "models.FortuneVideoRecordsWorkOrders": {
            "title": "FortuneVideoRecordsWorkOrders",
            "type": "object",
            "properties": {
                "ContractCustomer": {
                    "description": "是否需RM联系用户:0 否 1 是",
                    "type": "integer",
                    "format": "int32"
                },
                "CreateTime": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "CreateUserId": {
                    "description": "创建工单用户id",
                    "type": "string"
                },
                "CreateUserName": {
                    "description": "创建工单用户姓名",
                    "type": "string"
                },
                "CustomerUserId": {
                    "description": "财管客户id",
                    "type": "string"
                },
                "CustomerUserName": {
                    "description": "财管客户姓名",
                    "type": "string"
                },
                "Ext1": {
                    "description": "扩展字段1",
                    "type": "string"
                },
                "Ext2": {
                    "description": "扩展字段2",
                    "type": "string"
                },
                "FileName": {
                    "description": "视频文件名称",
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "MobileNum": {
                    "description": "手机号",
                    "type": "string"
                },
                "OrderNo": {
                    "description": "订单编号",
                    "type": "string"
                },
                "ProductName": {
                    "description": "认购产品名称",
                    "type": "string"
                },
                "QuestionDetail": {
                    "description": "问题明细",
                    "type": "string"
                },
                "QuestionReason": {
                    "description": "问题原因",
                    "type": "string"
                },
                "RecordBindRmUserId": {
                    "description": "创建工单时绑定RM用户id",
                    "type": "string"
                },
                "RecordBindRmUserName": {
                    "description": "创建工单时绑定RM用户姓名",
                    "type": "string"
                },
                "WoDes": {
                    "description": "问题说明",
                    "type": "string"
                },
                "WoNo": {
                    "description": "工单编号",
                    "type": "string"
                },
                "WoStatus": {
                    "description": "状态:1 已完成 2 其他",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "models.FortuneWorkHours": {
            "title": "FortuneWorkHours",
            "type": "object",
            "properties": {
                "Date": {
                    "description": "日期",
                    "type": "string",
                    "format": "datetime"
                },
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "DateModified": {
                    "description": "修改时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Deleted": {
                    "type": "integer",
                    "format": "int32"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "TimeBegin": {
                    "description": "开始时间",
                    "type": "string",
                    "format": "datetime"
                },
                "TimeEnd": {
                    "description": "结束时间",
                    "type": "string",
                    "format": "datetime"
                }
            }
        },
        "models.GlobalRegion": {
            "title": "GlobalRegion",
            "type": "object",
            "properties": {
                "Id": {
                    "description": "地区编号",
                    "type": "integer",
                    "format": "int64"
                },
                "ParentId": {
                    "description": "父类ID",
                    "type": "integer",
                    "format": "int32"
                },
                "RegionName": {
                    "description": "地区名",
                    "type": "string"
                },
                "RegionType": {
                    "description": "地区类型 0 国家 1省 2市",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "models.MakeUniqueId": {
            "title": "MakeUniqueId",
            "type": "object",
            "properties": {
                "DateEntered": {
                    "description": "创建时间",
                    "type": "string",
                    "format": "datetime"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.TestTb1": {
            "title": "TestTb1",
            "type": "object",
            "properties": {
                "Float1": {
                    "type": "number",
                    "format": "float"
                },
                "Float2": {
                    "type": "number",
                    "format": "double"
                },
                "Float3": {
                    "type": "number",
                    "format": "double"
                },
                "Float4": {
                    "type": "number",
                    "format": "double"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Int1": {
                    "type": "integer",
                    "format": "int64"
                },
                "Int2": {
                    "type": "integer",
                    "format": "int64"
                },
                "Int3": {
                    "type": "integer",
                    "format": "int64"
                },
                "Int4": {
                    "type": "integer",
                    "format": "int64"
                },
                "Str1": {
                    "type": "string"
                },
                "Str2": {
                    "type": "string"
                },
                "Str3": {
                    "type": "string"
                },
                "Str4": {
                    "type": "string"
                },
                "Time1": {
                    "type": "string",
                    "format": "datetime"
                },
                "Time2": {
                    "type": "string",
                    "format": "datetime"
                }
            }
        },
        "models.TestTb2": {
            "title": "TestTb2",
            "type": "object",
            "properties": {
                "Float1": {
                    "type": "number",
                    "format": "float"
                },
                "Float2": {
                    "type": "number",
                    "format": "double"
                },
                "Float3": {
                    "type": "number",
                    "format": "double"
                },
                "Float4": {
                    "type": "number",
                    "format": "double"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Int1": {
                    "type": "integer",
                    "format": "int64"
                },
                "Int2": {
                    "type": "integer",
                    "format": "int64"
                },
                "Int3": {
                    "type": "integer",
                    "format": "int64"
                },
                "Int4": {
                    "type": "integer",
                    "format": "int64"
                },
                "Str1": {
                    "type": "string"
                },
                "Str2": {
                    "type": "string"
                },
                "Str3": {
                    "type": "string"
                },
                "Str4": {
                    "type": "string"
                },
                "Time1": {
                    "type": "string",
                    "format": "datetime"
                },
                "Time2": {
                    "type": "string",
                    "format": "datetime"
                }
            }
        },
        "models.TriggerTest1": {
            "title": "TriggerTest1",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Username": {
                    "description": "name",
                    "type": "string"
                }
            }
        },
        "models.TriggerTest1Depart": {
            "title": "TriggerTest1Depart",
            "type": "object",
            "properties": {
                "Depart": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Username": {
                    "description": "name",
                    "type": "string"
                }
            }
        },
        "models.TriggerTest2": {
            "title": "TriggerTest2",
            "type": "object",
            "properties": {
                "Depart": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Username": {
                    "description": "name",
                    "type": "string"
                }
            }
        },
        "models.TriggerTestLoan": {
            "title": "TriggerTestLoan",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "Type": {
                    "description": "项目类型:0人民币,1美元,2私募股权,3海外置业,4家庭保障、财富传承,5私募证券,6类固收",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "models.TriggerTestOrder": {
            "title": "TriggerTestOrder",
            "type": "object",
            "properties": {
                "CreateUserId": {
                    "type": "string"
                },
                "Id": {
                    "type": "integer",
                    "format": "int64"
                },
                "LoanType": {
                    "type": "integer",
                    "format": "int32"
                },
                "RelevantId": {
                    "type": "string"
                }
            }
        },
        "models.TriggerTestSubscription": {
            "title": "TriggerTestSubscription",
            "type": "object",
            "properties": {
                "CreateUserId": {
                    "type": "string"
                },
                "Id": {
                    "description": "主键ID",
                    "type": "integer",
                    "format": "int64"
                },
                "LoanId": {
                    "type": "string"
                }
            }
        }
    },
    "tags": [
        {
            "name": "FORTUNE_REPAYMENT_PLAN",
            "description": "FORTUNEREPAYMENTPLANController operations for FORTUNEREPAYMENTPLAN\n"
        },
        {
            "name": "FORTUNE_REPAYMENT_PLAN_EXEC_LOG",
            "description": "FORTUNEREPAYMENTPLANEXECLOGController operations for FORTUNEREPAYMENTPLANEXECLOG\n"
        },
        {
            "name": "activity_subdivision_user_base_info",
            "description": "ActivitySubdivisionUserBaseInfoController operations for ActivitySubdivisionUserBaseInfo\n"
        },
        {
            "name": "activity_subdivision_user_base_info_copy",
            "description": "ActivitySubdivisionUserBaseInfoCopyController operations for ActivitySubdivisionUserBaseInfoCopy\n"
        },
        {
            "name": "dev_property_configure",
            "description": "DevPropertyConfigureController operations for DevPropertyConfigure\n"
        },
        {
            "name": "fortune_activity",
            "description": "FortuneActivityController operations for FortuneActivity\n"
        },
        {
            "name": "fortune_activity_custom",
            "description": "FortuneActivityCustomController operations for FortuneActivityCustom\n"
        },
        {
            "name": "fortune_activity_extend",
            "description": "FortuneActivityExtendController operations for FortuneActivityExtend\n"
        },
        {
            "name": "fortune_activity_result",
            "description": "FortuneActivityResultController operations for FortuneActivityResult\n"
        },
        {
            "name": "fortune_activity_signin",
            "description": "FortuneActivitySigninController operations for FortuneActivitySignin\n"
        },
        {
            "name": "fortune_activity_signup",
            "description": "FortuneActivitySignupController operations for FortuneActivitySignup\n"
        },
        {
            "name": "fortune_appropriate_approve_history",
            "description": "FortuneAppropriateApproveHistoryController operations for FortuneAppropriateApproveHistory\n"
        },
        {
            "name": "fortune_appropriate_info",
            "description": "FortuneAppropriateInfoController operations for FortuneAppropriateInfo\n"
        },
        {
            "name": "fortune_approval_biz_ident",
            "description": "FortuneApprovalBizIdentController operations for FortuneApprovalBizIdent\n"
        },
        {
            "name": "fortune_approval_flow_relevance",
            "description": "FortuneApprovalFlowRelevanceController operations for FortuneApprovalFlowRelevance\n"
        },
        {
            "name": "fortune_approval_flow_step",
            "description": "FortuneApprovalFlowStepController operations for FortuneApprovalFlowStep\n"
        },
        {
            "name": "fortune_area",
            "description": "FortuneAreaController operations for FortuneArea\n"
        },
        {
            "name": "fortune_asset_proof",
            "description": "FortuneAssetProofController operations for FortuneAssetProof\n"
        },
        {
            "name": "fortune_asset_proof_attachment",
            "description": "FortuneAssetProofAttachmentController operations for FortuneAssetProofAttachment\n"
        },
        {
            "name": "fortune_asset_proof_history",
            "description": "FortuneAssetProofHistoryController operations for FortuneAssetProofHistory\n"
        },
        {
            "name": "fortune_bank_auth_approve_history",
            "description": "FortuneBankAuthApproveHistoryController operations for FortuneBankAuthApproveHistory\n"
        },
        {
            "name": "fortune_bank_auth_history",
            "description": "FortuneBankAuthHistoryController operations for FortuneBankAuthHistory\n"
        },
        {
            "name": "fortune_bank_auth_info",
            "description": "FortuneBankAuthInfoController operations for FortuneBankAuthInfo\n"
        },
        {
            "name": "fortune_bank_auth_info_很危险的",
            "description": "FortuneBankAuthInfo很危险的Controller operations for FortuneBankAuthInfo很危险的\n"
        },
        {
            "name": "fortune_bank_auth_info_cstm",
            "description": "FortuneBankAuthInfoCstmController operations for FortuneBankAuthInfoCstm\n"
        },
        {
            "name": "fortune_bank_list",
            "description": "FortuneBankListController operations for FortuneBankList\n"
        },
        {
            "name": "fortune_batch_change_task",
            "description": "FortuneBatchChangeTaskController operations for FortuneBatchChangeTask\n"
        },
        {
            "name": "fortune_batch_change_task_detail",
            "description": "FortuneBatchChangeTaskDetailController operations for FortuneBatchChangeTaskDetail\n"
        },
        {
            "name": "fortune_call_history_attachment_info",
            "description": "FortuneCallHistoryAttachmentInfoController operations for FortuneCallHistoryAttachmentInfo\n"
        },
        {
            "name": "fortune_canal_subscribe",
            "description": "FortuneCanalSubscribeController operations for FortuneCanalSubscribe\n"
        },
        {
            "name": "fortune_canal_subscribe_allot_record",
            "description": "FortuneCanalSubscribeAllotRecordController operations for FortuneCanalSubscribeAllotRecord\n"
        },
        {
            "name": "fortune_change_official_history",
            "description": "FortuneChangeOfficialHistoryController operations for FortuneChangeOfficialHistory\n"
        },
        {
            "name": "fortune_classify_cycle_associate",
            "description": "FortuneClassifyCycleAssociateController operations for FortuneClassifyCycleAssociate\n"
        },
        {
            "name": "fortune_classify_cycle_task",
            "description": "FortuneClassifyCycleTaskController operations for FortuneClassifyCycleTask\n"
        },
        {
            "name": "fortune_classify_task",
            "description": "FortuneClassifyTaskController operations for FortuneClassifyTask\n"
        },
        {
            "name": "fortune_classify_task_record_info",
            "description": "FortuneClassifyTaskRecordInfoController operations for FortuneClassifyTaskRecordInfo\n"
        },
        {
            "name": "fortune_classify_task_record_info_201808",
            "description": "FortuneClassifyTaskRecordInfo201808Controller operations for FortuneClassifyTaskRecordInfo201808\n"
        },
        {
            "name": "fortune_classify_task_record_info_201809",
            "description": "FortuneClassifyTaskRecordInfo201809Controller operations for FortuneClassifyTaskRecordInfo201809\n"
        },
        {
            "name": "fortune_classify_task_record_info_201810",
            "description": "FortuneClassifyTaskRecordInfo201810Controller operations for FortuneClassifyTaskRecordInfo201810\n"
        },
        {
            "name": "fortune_classify_task_record_info_201811",
            "description": "FortuneClassifyTaskRecordInfo201811Controller operations for FortuneClassifyTaskRecordInfo201811\n"
        },
        {
            "name": "fortune_classify_task_record_info_201812",
            "description": "FortuneClassifyTaskRecordInfo201812Controller operations for FortuneClassifyTaskRecordInfo201812\n"
        },
        {
            "name": "fortune_classify_task_record_info_201901",
            "description": "FortuneClassifyTaskRecordInfo201901Controller operations for FortuneClassifyTaskRecordInfo201901\n"
        },
        {
            "name": "fortune_classify_task_record_info_201902",
            "description": "FortuneClassifyTaskRecordInfo201902Controller operations for FortuneClassifyTaskRecordInfo201902\n"
        },
        {
            "name": "fortune_classify_task_record_info_201906",
            "description": "FortuneClassifyTaskRecordInfo201906Controller operations for FortuneClassifyTaskRecordInfo201906\n"
        },
        {
            "name": "fortune_classify_user_int_id",
            "description": "FortuneClassifyUserIntIdController operations for FortuneClassifyUserIntId\n"
        },
        {
            "name": "fortune_classify_user_int_id_min",
            "description": "FortuneClassifyUserIntIdMinController operations for FortuneClassifyUserIntIdMin\n"
        },
        {
            "name": "fortune_company",
            "description": "FortuneCompanyController operations for FortuneCompany\n"
        },
        {
            "name": "fortune_company_info",
            "description": "FortuneCompanyInfoController operations for FortuneCompanyInfo\n"
        },
        {
            "name": "fortune_company_info_attach",
            "description": "FortuneCompanyInfoAttachController operations for FortuneCompanyInfoAttach\n"
        },
        {
            "name": "fortune_customer_book",
            "description": "FortuneCustomerBookController operations for FortuneCustomerBook\n"
        },
        {
            "name": "fortune_customer_book_2010614",
            "description": "FortuneCustomerBook2010614Controller operations for FortuneCustomerBook2010614\n"
        },
        {
            "name": "fortune_customer_book_20180201",
            "description": "FortuneCustomerBook20180201Controller operations for FortuneCustomerBook20180201\n"
        },
        {
            "name": "fortune_customer_book_20180621",
            "description": "FortuneCustomerBook20180621Controller operations for FortuneCustomerBook20180621\n"
        },
        {
            "name": "fortune_customer_book_20180704",
            "description": "FortuneCustomerBook20180704Controller operations for FortuneCustomerBook20180704\n"
        },
        {
            "name": "fortune_customer_book_20181011",
            "description": "FortuneCustomerBook20181011Controller operations for FortuneCustomerBook20181011\n"
        },
        {
            "name": "fortune_customer_book_20181015",
            "description": "FortuneCustomerBook20181015Controller operations for FortuneCustomerBook20181015\n"
        },
        {
            "name": "fortune_customer_book_20190306",
            "description": "FortuneCustomerBook20190306Controller operations for FortuneCustomerBook20190306\n"
        },
        {
            "name": "fortune_customer_book_allocation_hisotory",
            "description": "FortuneCustomerBookAllocationHisotoryController operations for FortuneCustomerBookAllocationHisotory\n"
        },
        {
            "name": "fortune_customer_book_allot_record",
            "description": "FortuneCustomerBookAllotRecordController operations for FortuneCustomerBookAllotRecord\n"
        },
        {
            "name": "fortune_customer_book_history",
            "description": "FortuneCustomerBookHistoryController operations for FortuneCustomerBookHistory\n"
        },
        {
            "name": "fortune_customer_call_history",
            "description": "FortuneCustomerCallHistoryController operations for FortuneCustomerCallHistory\n"
        },
        {
            "name": "fortune_customer_call_history_20180201",
            "description": "FortuneCustomerCallHistory20180201Controller operations for FortuneCustomerCallHistory20180201\n"
        },
        {
            "name": "fortune_customer_call_plan",
            "description": "FortuneCustomerCallPlanController operations for FortuneCustomerCallPlan\n"
        },
        {
            "name": "fortune_customer_call_plan_attach",
            "description": "FortuneCustomerCallPlanAttachController operations for FortuneCustomerCallPlanAttach\n"
        },
        {
            "name": "fortune_customer_change_relation_history",
            "description": "FortuneCustomerChangeRelationHistoryController operations for FortuneCustomerChangeRelationHistory\n"
        },
        {
            "name": "fortune_customer_change_relation_history_copy",
            "description": "FortuneCustomerChangeRelationHistoryCopyController operations for FortuneCustomerChangeRelationHistoryCopy\n"
        },
        {
            "name": "fortune_customer_change_relation_history_tools",
            "description": "FortuneCustomerChangeRelationHistoryToolsController operations for FortuneCustomerChangeRelationHistoryTools\n"
        },
        {
            "name": "fortune_customer_subscribe",
            "description": "FortuneCustomerSubscribeController operations for FortuneCustomerSubscribe\n"
        },
        {
            "name": "fortune_customer_subscribe_allot_history",
            "description": "FortuneCustomerSubscribeAllotHistoryController operations for FortuneCustomerSubscribeAllotHistory\n"
        },
        {
            "name": "fortune_customer_subscribe_copy",
            "description": "FortuneCustomerSubscribeCopyController operations for FortuneCustomerSubscribeCopy\n"
        },
        {
            "name": "fortune_customer_task",
            "description": "FortuneCustomerTaskController operations for FortuneCustomerTask\n"
        },
        {
            "name": "fortune_customer_task_anomaly",
            "description": "FortuneCustomerTaskAnomalyController operations for FortuneCustomerTaskAnomaly\n"
        },
        {
            "name": "fortune_customer_task_anomaly_copy",
            "description": "FortuneCustomerTaskAnomalyCopyController operations for FortuneCustomerTaskAnomalyCopy\n"
        },
        {
            "name": "fortune_customer_task_copy",
            "description": "FortuneCustomerTaskCopyController operations for FortuneCustomerTaskCopy\n"
        },
        {
            "name": "fortune_customer_wealth_planne",
            "description": "FortuneCustomerWealthPlanneController operations for FortuneCustomerWealthPlanne\n"
        },
        {
            "name": "fortune_customer_wealth_planne_allot_record",
            "description": "FortuneCustomerWealthPlanneAllotRecordController operations for FortuneCustomerWealthPlanneAllotRecord\n"
        },
        {
            "name": "fortune_customers",
            "description": "FortuneCustomersController operations for FortuneCustomers\n"
        },
        {
            "name": "fortune_customers_address",
            "description": "FortuneCustomersAddressController operations for FortuneCustomersAddress\n"
        },
        {
            "name": "fortune_customers_copy",
            "description": "FortuneCustomersCopyController operations for FortuneCustomersCopy\n"
        },
        {
            "name": "fortune_customers_copy20180718",
            "description": "FortuneCustomersCopy20180718Controller operations for FortuneCustomersCopy20180718\n"
        },
        {
            "name": "fortune_customers_cstm",
            "description": "FortuneCustomersCstmController operations for FortuneCustomersCstm\n"
        },
        {
            "name": "fortune_customers_tools",
            "description": "FortuneCustomersToolsController operations for FortuneCustomersTools\n"
        },
        {
            "name": "fortune_customers_xxx",
            "description": "FortuneCustomersXxxController operations for FortuneCustomersXxx\n"
        },
        {
            "name": "fortune_customize_subscribe",
            "description": "FortuneCustomizeSubscribeController operations for FortuneCustomizeSubscribe\n"
        },
        {
            "name": "fortune_customize_subscribe_allot_record",
            "description": "FortuneCustomizeSubscribeAllotRecordController operations for FortuneCustomizeSubscribeAllotRecord\n"
        },
        {
            "name": "fortune_evaluation_history",
            "description": "FortuneEvaluationHistoryController operations for FortuneEvaluationHistory\n"
        },
        {
            "name": "fortune_evaluation_new",
            "description": "FortuneEvaluationNewController operations for FortuneEvaluationNew\n"
        },
        {
            "name": "fortune_group",
            "description": "FortuneGroupController operations for FortuneGroup\n"
        },
        {
            "name": "fortune_ident_sign",
            "description": "FortuneIdentSignController operations for FortuneIdentSign\n"
        },
        {
            "name": "fortune_intl_account_info",
            "description": "FortuneIntlAccountInfoController operations for FortuneIntlAccountInfo\n"
        },
        {
            "name": "fortune_loan",
            "description": "FortuneLoanController operations for FortuneLoan\n"
        },
        {
            "name": "fortune_loan_achievement_datum",
            "description": "FortuneLoanAchievementDatumController operations for FortuneLoanAchievementDatum\n"
        },
        {
            "name": "fortune_loan_attachment_info",
            "description": "FortuneLoanAttachmentInfoController operations for FortuneLoanAttachmentInfo\n"
        },
        {
            "name": "fortune_loan_bak",
            "description": "FortuneLoanBakController operations for FortuneLoanBak\n"
        },
        {
            "name": "fortune_loan_bak_20180428",
            "description": "FortuneLoanBak20180428Controller operations for FortuneLoanBak20180428\n"
        },
        {
            "name": "fortune_loan_bak_copy",
            "description": "FortuneLoanBakCopyController operations for FortuneLoanBakCopy\n"
        },
        {
            "name": "fortune_loan_contract_queue",
            "description": "FortuneLoanContractQueueController operations for FortuneLoanContractQueue\n"
        },
        {
            "name": "fortune_loan_copy11111",
            "description": "FortuneLoanCopy11111Controller operations for FortuneLoanCopy11111\n"
        },
        {
            "name": "fortune_loan_cstm",
            "description": "FortuneLoanCstmController operations for FortuneLoanCstm\n"
        },
        {
            "name": "fortune_loan_history",
            "description": "FortuneLoanHistoryController operations for FortuneLoanHistory\n"
        },
        {
            "name": "fortune_loan_period",
            "description": "FortuneLoanPeriodController operations for FortuneLoanPeriod\n"
        },
        {
            "name": "fortune_loan_period_bak",
            "description": "FortuneLoanPeriodBakController operations for FortuneLoanPeriodBak\n"
        },
        {
            "name": "fortune_loan_period_calculate_info",
            "description": "FortuneLoanPeriodCalculateInfoController operations for FortuneLoanPeriodCalculateInfo\n"
        },
        {
            "name": "fortune_loan_period_calculate_info_bak",
            "description": "FortuneLoanPeriodCalculateInfoBakController operations for FortuneLoanPeriodCalculateInfoBak\n"
        },
        {
            "name": "fortune_loan_reorder_manage",
            "description": "FortuneLoanReorderManageController operations for FortuneLoanReorderManage\n"
        },
        {
            "name": "fortune_log_oversea_join_golden",
            "description": "FortuneLogOverseaJoinGoldenController operations for FortuneLogOverseaJoinGolden\n"
        },
        {
            "name": "fortune_log_oversea_join_loan",
            "description": "FortuneLogOverseaJoinLoanController operations for FortuneLogOverseaJoinLoan\n"
        },
        {
            "name": "fortune_log_oversea_reserve",
            "description": "FortuneLogOverseaReserveController operations for FortuneLogOverseaReserve\n"
        },
        {
            "name": "fortune_mail",
            "description": "FortuneMailController operations for FortuneMail\n"
        },
        {
            "name": "fortune_market_bind_workorder",
            "description": "FortuneMarketBindWorkorderController operations for FortuneMarketBindWorkorder\n"
        },
        {
            "name": "fortune_market_bind_workorder_report",
            "description": "FortuneMarketBindWorkorderReportController operations for FortuneMarketBindWorkorderReport\n"
        },
        {
            "name": "fortune_market_unbind_workorder",
            "description": "FortuneMarketUnbindWorkorderController operations for FortuneMarketUnbindWorkorder\n"
        },
        {
            "name": "fortune_market_unbind_workorder_allot_record",
            "description": "FortuneMarketUnbindWorkorderAllotRecordController operations for FortuneMarketUnbindWorkorderAllotRecord\n"
        },
        {
            "name": "fortune_market_unbind_workorder_report",
            "description": "FortuneMarketUnbindWorkorderReportController operations for FortuneMarketUnbindWorkorderReport\n"
        },
        {
            "name": "fortune_msg",
            "description": "FortuneMsgController operations for FortuneMsg\n"
        },
        {
            "name": "fortune_msg_sendrecord",
            "description": "FortuneMsgSendrecordController operations for FortuneMsgSendrecord\n"
        },
        {
            "name": "fortune_node",
            "description": "FortuneNodeController operations for FortuneNode\n"
        },
        {
            "name": "fortune_node_button",
            "description": "FortuneNodeButtonController operations for FortuneNodeButton\n"
        },
        {
            "name": "fortune_order_detail",
            "description": "FortuneOrderDetailController operations for FortuneOrderDetail\n"
        },
        {
            "name": "fortune_overseas_register",
            "description": "FortuneOverseasRegisterController operations for FortuneOverseasRegister\n"
        },
        {
            "name": "fortune_pay_report",
            "description": "FortunePayReportController operations for FortunePayReport\n"
        },
        {
            "name": "fortune_pay_report_attachment_download_task",
            "description": "FortunePayReportAttachmentDownloadTaskController operations for FortunePayReportAttachmentDownloadTask\n"
        },
        {
            "name": "fortune_pay_report_attachment_info",
            "description": "FortunePayReportAttachmentInfoController operations for FortunePayReportAttachmentInfo\n"
        },
        {
            "name": "fortune_pay_report_zip_archive",
            "description": "FortunePayReportZipArchiveController operations for FortunePayReportZipArchive\n"
        },
        {
            "name": "fortune_pf_question_evaluation",
            "description": "FortunePfQuestionEvaluationController operations for FortunePfQuestionEvaluation\n"
        },
        {
            "name": "fortune_pf_question_evaluation_copy",
            "description": "FortunePfQuestionEvaluationCopyController operations for FortunePfQuestionEvaluationCopy\n"
        },
        {
            "name": "fortune_pf_question_evaluation_history",
            "description": "FortunePfQuestionEvaluationHistoryController operations for FortunePfQuestionEvaluationHistory\n"
        },
        {
            "name": "fortune_pf_question_evaluation_history_copy",
            "description": "FortunePfQuestionEvaluationHistoryCopyController operations for FortunePfQuestionEvaluationHistoryCopy\n"
        },
        {
            "name": "fortune_plan_call_msg_history",
            "description": "FortunePlanCallMsgHistoryController operations for FortunePlanCallMsgHistory\n"
        },
        {
            "name": "fortune_position",
            "description": "FortunePositionController operations for FortunePosition\n"
        },
        {
            "name": "fortune_qr_code_info",
            "description": "FortuneQrCodeInfoController operations for FortuneQrCodeInfo\n"
        },
        {
            "name": "fortune_qualified_flag",
            "description": "FortuneQualifiedFlagController operations for FortuneQualifiedFlag\n"
        },
        {
            "name": "fortune_question",
            "description": "FortuneQuestionController operations for FortuneQuestion\n"
        },
        {
            "name": "fortune_question_bank",
            "description": "FortuneQuestionBankController operations for FortuneQuestionBank\n"
        },
        {
            "name": "fortune_question_evaluation",
            "description": "FortuneQuestionEvaluationController operations for FortuneQuestionEvaluation\n"
        },
        {
            "name": "fortune_question_evaluation_history",
            "description": "FortuneQuestionEvaluationHistoryController operations for FortuneQuestionEvaluationHistory\n"
        },
        {
            "name": "fortune_recommend_fc_setting",
            "description": "FortuneRecommendFcSettingController operations for FortuneRecommendFcSetting\n"
        },
        {
            "name": "fortune_recommend_fc_setting_detail",
            "description": "FortuneRecommendFcSettingDetailController operations for FortuneRecommendFcSettingDetail\n"
        },
        {
            "name": "fortune_recommend_fc_setting_detail_deal",
            "description": "FortuneRecommendFcSettingDetailDealController operations for FortuneRecommendFcSettingDetailDeal\n"
        },
        {
            "name": "fortune_record_approval_biz",
            "description": "FortuneRecordApprovalBizController operations for FortuneRecordApprovalBiz\n"
        },
        {
            "name": "fortune_report_import_service",
            "description": "FortuneReportImportServiceController operations for FortuneReportImportService\n"
        },
        {
            "name": "fortune_role",
            "description": "FortuneRoleController operations for FortuneRole\n"
        },
        {
            "name": "fortune_subscribe_approval_biz",
            "description": "FortuneSubscribeApprovalBizController operations for FortuneSubscribeApprovalBiz\n"
        },
        {
            "name": "fortune_sundry_config",
            "description": "FortuneSundryConfigController operations for FortuneSundryConfig\n"
        },
        {
            "name": "fortune_temp",
            "description": "FortuneTempController operations for FortuneTemp\n"
        },
        {
            "name": "fortune_temp_cstm",
            "description": "FortuneTempCstmController operations for FortuneTempCstm\n"
        },
        {
            "name": "fortune_usa_account_info",
            "description": "FortuneUsaAccountInfoController operations for FortuneUsaAccountInfo\n"
        },
        {
            "name": "fortune_user",
            "description": "FortuneUserController operations for FortuneUser\n"
        },
        {
            "name": "fortune_user_subscription_approve_info",
            "description": "FortuneUserSubscriptionApproveInfoController operations for FortuneUserSubscriptionApproveInfo\n"
        },
        {
            "name": "fortune_user_subscription_attachment_info",
            "description": "FortuneUserSubscriptionAttachmentInfoController operations for FortuneUserSubscriptionAttachmentInfo\n"
        },
        {
            "name": "fortune_user_subscription_attachment_info_bak",
            "description": "FortuneUserSubscriptionAttachmentInfoBakController operations for FortuneUserSubscriptionAttachmentInfoBak\n"
        },
        {
            "name": "fortune_user_subscription_info",
            "description": "FortuneUserSubscriptionInfoController operations for FortuneUserSubscriptionInfo\n"
        },
        {
            "name": "fortune_user_subscription_info_bak",
            "description": "FortuneUserSubscriptionInfoBakController operations for FortuneUserSubscriptionInfoBak\n"
        },
        {
            "name": "fortune_user_subscription_info_bak_20180509",
            "description": "FortuneUserSubscriptionInfoBak20180509Controller operations for FortuneUserSubscriptionInfoBak20180509\n"
        },
        {
            "name": "fortune_user_subscription_info_copy",
            "description": "FortuneUserSubscriptionInfoCopyController operations for FortuneUserSubscriptionInfoCopy\n"
        },
        {
            "name": "fortune_user_tools",
            "description": "FortuneUserToolsController operations for FortuneUserTools\n"
        },
        {
            "name": "fortune_vars",
            "description": "FortuneVarsController operations for FortuneVars\n"
        },
        {
            "name": "fortune_video_records",
            "description": "FortuneVideoRecordsController operations for FortuneVideoRecords\n"
        },
        {
            "name": "fortune_video_records_history",
            "description": "FortuneVideoRecordsHistoryController operations for FortuneVideoRecordsHistory\n"
        },
        {
            "name": "fortune_video_records_work_orders",
            "description": "FortuneVideoRecordsWorkOrdersController operations for FortuneVideoRecordsWorkOrders\n"
        },
        {
            "name": "fortune_work_hours",
            "description": "FortuneWorkHoursController operations for FortuneWorkHours\n"
        },
        {
            "name": "global_region",
            "description": "GlobalRegionController operations for GlobalRegion\n"
        },
        {
            "name": "make_unique_id",
            "description": "MakeUniqueIdController operations for MakeUniqueId\n"
        },
        {
            "name": "test_tb1",
            "description": "TestTb1Controller operations for TestTb1\n"
        },
        {
            "name": "test_tb2",
            "description": "TestTb2Controller operations for TestTb2\n"
        },
        {
            "name": "trigger_test1",
            "description": "TriggerTest1Controller operations for TriggerTest1\n"
        },
        {
            "name": "trigger_test1_depart",
            "description": "TriggerTest1DepartController operations for TriggerTest1Depart\n"
        },
        {
            "name": "trigger_test2",
            "description": "TriggerTest2Controller operations for TriggerTest2\n"
        },
        {
            "name": "trigger_test_loan",
            "description": "TriggerTestLoanController operations for TriggerTestLoan\n"
        },
        {
            "name": "trigger_test_order",
            "description": "TriggerTestOrderController operations for TriggerTestOrder\n"
        },
        {
            "name": "trigger_test_subscription",
            "description": "TriggerTestSubscriptionController operations for TriggerTestSubscription\n"
        }
    ]
}